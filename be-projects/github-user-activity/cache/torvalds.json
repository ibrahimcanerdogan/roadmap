{
  "timestamp": "2025-06-28T13:29:16.703870",
  "data": {
    "user_info": {
      "login": "torvalds",
      "id": 1024025,
      "node_id": "MDQ6VXNlcjEwMjQwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "html_url": "https://github.com/torvalds",
      "followers_url": "https://api.github.com/users/torvalds/followers",
      "following_url": "https://api.github.com/users/torvalds/following{/other_user}",
      "gists_url": "https://api.github.com/users/torvalds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/torvalds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/torvalds/subscriptions",
      "organizations_url": "https://api.github.com/users/torvalds/orgs",
      "repos_url": "https://api.github.com/users/torvalds/repos",
      "events_url": "https://api.github.com/users/torvalds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/torvalds/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false,
      "name": "Linus Torvalds",
      "company": "Linux Foundation",
      "blog": "",
      "location": "Portland, OR",
      "email": null,
      "hireable": null,
      "bio": null,
      "twitter_username": null,
      "public_repos": 8,
      "public_gists": 1,
      "followers": 238845,
      "following": 0,
      "created_at": "2011-09-03T15:26:22Z",
      "updated_at": "2025-05-22T21:38:57Z"
    },
    "events": [
      {
        "id": "51434637496",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25164460462,
          "size": 41,
          "distinct_size": 41,
          "ref": "refs/heads/master",
          "head": "e540341508ce2f6e27810106253d5de194b66750",
          "before": "67a993863163cb88b1b68974c31b0d84ece4293e",
          "commits": [
            {
              "sha": "7360ee47599af91a1d5f4e74d635d9408a54e489",
              "author": {
                "email": "pchelkin@ispras.ru",
                "name": "Fedor Pchelkin"
              },
              "message": "s390/pkey: Prevent overflow in size calculation for memdup_user()\n\nNumber of apqn target list entries contained in 'nr_apqns' variable is\ndetermined by userspace via an ioctl call so the result of the product in\ncalculation of size passed to memdup_user() may overflow.\n\nIn this case the actual size of the allocated area and the value\ndescribing it won't be in sync leading to various types of unpredictable\nbehaviour later.\n\nUse a proper memdup_array_user() helper which returns an error if an\noverflow is detected. Note that it is different from when nr_apqns is\ninitially zero - that case is considered valid and should be handled in\nsubsequent pkey_handler implementations.\n\nFound by Linux Verification Center (linuxtesting.org).\n\nFixes: f2bbc96e7cfa (\"s390/pkey: add CCA AES cipher key support\")\nCc: stable@vger.kernel.org\nSigned-off-by: Fedor Pchelkin <pchelkin@ispras.ru>\nReviewed-by: Holger Dengler <dengler@linux.ibm.com>\nReviewed-by: Heiko Carstens <hca@linux.ibm.com>\nLink: https://lore.kernel.org/r/20250611192011.206057-1-pchelkin@ispras.ru\nSigned-off-by: Alexander Gordeev <agordeev@linux.ibm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7360ee47599af91a1d5f4e74d635d9408a54e489"
            },
            {
              "sha": "7f8073cfb04a97842fe891ca50dad60afd1e3121",
              "author": {
                "email": "hca@linux.ibm.com",
                "name": "Heiko Carstens"
              },
              "message": "s390/ptrace: Fix pointer dereferencing in regs_get_kernel_stack_nth()\n\nThe recent change which added READ_ONCE_NOCHECK() to read the nth entry\nfrom the kernel stack incorrectly dropped dereferencing of the stack\npointer in order to read the requested entry.\n\nIn result the address of the entry is returned instead of its content.\n\nDereference the pointer again to fix this.\n\nReported-by: Will Deacon <will@kernel.org>\nCloses: https://lore.kernel.org/r/20250612163331.GA13384@willie-the-truck\nFixes: d93a855c31b7 (\"s390/ptrace: Avoid KASAN false positives in regs_get_kernel_stack_nth()\")\nCc: stable@vger.kernel.org\nReviewed-by: Alexander Gordeev <agordeev@linux.ibm.com>\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com>\nSigned-off-by: Alexander Gordeev <agordeev@linux.ibm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7f8073cfb04a97842fe891ca50dad60afd1e3121"
            },
            {
              "sha": "e41687b511d5e5437db5d2151e23c115dba30411",
              "author": {
                "email": "tcrawford@system76.com",
                "name": "Tim Crawford"
              },
              "message": "ALSA: hda/realtek: Add quirks for some Clevo laptops\n\nAdd audio quirks to fix speaker output and headset detection on the\nfollowing Clevo models:\n\n- V350ENC\n- V350WNPQ\n- V540TU\n- X560WNR\n- X580WNS\n\nSigned-off-by: Tim Crawford <tcrawford@system76.com>\nLink: https://patch.msgid.link/20250620204329.35878-1-tcrawford@system76.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e41687b511d5e5437db5d2151e23c115dba30411"
            },
            {
              "sha": "68cc9d3c8e44afe90e43cbbd2960da15c2f31e23",
              "author": {
                "email": "sunoflife1.git@gmail.com",
                "name": "Yasmin Fitzgerald"
              },
              "message": "ALSA: hda/realtek - Enable mute LED on HP Pavilion Laptop 15-eg100\n\nThe HP Pavilion Laptop 15-eg100 has Realtek HDA codec ALC287.\nIt needs the ALC287_FIXUP_HP_GPIO_LED quirk to enable the mute LED.\n\nSigned-off-by: Yasmin Fitzgerald <sunoflife1.git@gmail.com>\nLink: https://patch.msgid.link/20250621053832.52950-1-sunoflife1.git@gmail.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/68cc9d3c8e44afe90e43cbbd2960da15c2f31e23"
            },
            {
              "sha": "999fb9d51f939ee23cbb9313ae558d29d6987804",
              "author": {
                "email": "luca.weiss@fairphone.com",
                "name": "Luca Weiss"
              },
              "message": "ASoC: qcom: sm8250: Fix possibly undefined reference\n\nWith CONFIG_SND_SOC_SM8250=y and CONFIG_SND_SOC_QCOM_OFFLOAD_UTILS=m\nselected in kconfig, the build will fail due to trying to link against a\nsymbol only found in the module.\n\n  aarch64-linux-gnu-ld: sound/soc/qcom/sm8250.o: in function `sm8250_snd_exit':\n  sound/soc/qcom/sm8250.c:52:(.text+0x210): undefined reference to `qcom_snd_usb_offload_jack_remove'\n\nFix this by declaring the dependency that forces CONFIG_SND_SOC_SM8250=m\nwhen CONFIG_SND_SOC_QCOM_OFFLOAD_UTILS is =m.\n\nReported-by: Matthew Croughan <matthew.croughan@nix.how>\nFixes: 1b8d0d87b934 (\"ASoC: qcom: qdsp6: Add headphone jack for offload connection status\")\nSigned-off-by: Luca Weiss <luca.weiss@fairphone.com>\nLink: https://patch.msgid.link/20250617-snd-sm8250-dep-fix-v1-1-879af8906ec4@fairphone.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/999fb9d51f939ee23cbb9313ae558d29d6987804"
            },
            {
              "sha": "7186b81807b4a08f8bf834b6bdc72d6ed8ba1587",
              "author": {
                "email": "yuzuru_10@proton.me",
                "name": "Yuzuru10"
              },
              "message": "ASoC: amd: yc: add quirk for Acer Nitro ANV15-41 internal mic\n\nThis patch adds DMI-based quirk for the Acer Nitro ANV15-41,\nallowing the internal microphone to be detected correctly on\nmachines with \"RB\" as board vendor.\n\nSigned-off-by: Yuzuru <yuzuru_10@proton.me>\nLink: https://patch.msgid.link/20250622225754.20856-1-yuzuru_10@proton.me\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7186b81807b4a08f8bf834b6bdc72d6ed8ba1587"
            },
            {
              "sha": "bf39286adc5e10ce3e32eb86ad316ae56f3b52a0",
              "author": {
                "email": "oliver.schramm97@gmail.com",
                "name": "Oliver Schramm"
              },
              "message": "ASoC: amd: yc: Add DMI quirk for Lenovo IdeaPad Slim 5 15\n\nIt's smaller brother has already received the patch to enable the microphone,\nnow add it too to the DMI quirk table.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Oliver Schramm <oliver.schramm97@gmail.com>\nLink: https://patch.msgid.link/20250621223000.11817-2-oliver.schramm97@gmail.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/bf39286adc5e10ce3e32eb86ad316ae56f3b52a0"
            },
            {
              "sha": "dc6458ed95e40146699f9c523e34cb13ff127170",
              "author": {
                "email": "Vijendar.Mukunda@amd.com",
                "name": "Vijendar Mukunda"
              },
              "message": "ASoC: amd: ps: fix for soundwire failures during hibernation exit sequence\n\nDuring the hibernate entry sequence, ACP registers will be reset to\ndefault values and acp ip will be completely powered off including acp\nSoundWire pads. During resume sequence, if acp SoundWire pad keeper enable\nregister is not restored along with pad pulldown control register value,\nthen SoundWire manager links won't be powered on correctly results in\nperipheral register access failures and completely audio function is\nbroken.\n\nAdd code to store the acp SoundWire pad keeper enable register and acp pad\npulldown ctrl register values before entering into suspend state and\nrestore the register values during resume sequence based on condition check\nfor acp SoundWire pad keeper enable register for ACP6.3, ACP7.0 & ACP7.1\nplatforms.\n\nFixes: 491628388005 (\"ASoC: amd: ps: add callback functions for acp pci driver pm ops\")\nSigned-off-by: Vijendar Mukunda <Vijendar.Mukunda@amd.com>\nLink: https://patch.msgid.link/20250623084630.3100279-1-Vijendar.Mukunda@amd.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/dc6458ed95e40146699f9c523e34cb13ff127170"
            },
            {
              "sha": "88a80066af1617fab444776135d840467414beb6",
              "author": {
                "email": "changfengnan@bytedance.com",
                "name": "Fengnan Chang"
              },
              "message": "io_uring: make fallocate be hashed work\n\nLike ftruncate and write, fallocate operations on the same file cannot\nbe executed in parallel, so it is better to make fallocate be hashed\nwork.\n\nSigned-off-by: Fengnan Chang <changfengnan@bytedance.com>\nLink: https://lore.kernel.org/r/20250623110218.61490-1-changfengnan@bytedance.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/88a80066af1617fab444776135d840467414beb6"
            },
            {
              "sha": "9a07ca9a4015f8f71e2b594ee76ac55483babd89",
              "author": {
                "email": "chris.chiu@canonical.com",
                "name": "Chris Chiu"
              },
              "message": "ALSA: hda/realtek: fix mute/micmute LEDs for HP EliteBook 6 G1a\n\nHP EliteBook 6 G1a laptops use ALC236 codec and need the fixup\nALC236_FIXUP_HP_MUTE_LED_MICMUTE_VREF to make the mic/micmute LEDs\nwork.\n\nSigned-off-by: Chris Chiu <chris.chiu@canonical.com>\nLink: https://patch.msgid.link/20250623063023.374920-1-chris.chiu@canonical.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/9a07ca9a4015f8f71e2b594ee76ac55483babd89"
            },
            {
              "sha": "fb4e2a6e8f28a3c0ad382e363aeb9cd822007b8a",
              "author": {
                "email": "yjjuny.lee@samsung.com",
                "name": "Youngjun Lee"
              },
              "message": "ALSA: usb-audio: Fix out-of-bounds read in snd_usb_get_audioformat_uac3()\n\nIn snd_usb_get_audioformat_uac3(), the length value returned from\nsnd_usb_ctl_msg() is used directly for memory allocation without\nvalidation. This length is controlled by the USB device.\n\nThe allocated buffer is cast to a uac3_cluster_header_descriptor\nand its fields are accessed without verifying that the buffer\nis large enough. If the device returns a smaller than expected\nlength, this leads to an out-of-bounds read.\n\nAdd a length check to ensure the buffer is large enough for\nuac3_cluster_header_descriptor.\n\nSigned-off-by: Youngjun Lee <yjjuny.lee@samsung.com>\nFixes: 9a2fe9b801f5 (\"ALSA: usb: initial USB Audio Device Class 3.0 support\")\nLink: https://patch.msgid.link/20250623-uac3-oob-fix-v1-1-527303eaf40a@samsung.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fb4e2a6e8f28a3c0ad382e363aeb9cd822007b8a"
            },
            {
              "sha": "41c66461cb2e8d3934a5395f27e572ebe63696b4",
              "author": {
                "email": "tiwai@suse.de",
                "name": "Takashi Iwai"
              },
              "message": "ALSA: hda/realtek: Add mic-mute LED setup for ASUS UM5606\n\nASUS UM5606* models use the quirk to set up the bass speakers, but it\nmissed the mic-mute LED configuration.  Other similar models have the\nAMD ACP dmic, and the mic-mute is set up for that, but those models\ndon't have AMD ACP but rather built-in mics of Realtek codec, hence\nthe Realtek driver should set it up, instead.\n\nLink: https://bugzilla.kernel.org/show_bug.cgi?id=220125\nLink: https://patch.msgid.link/20250623151841.28810-1-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/41c66461cb2e8d3934a5395f27e572ebe63696b4"
            },
            {
              "sha": "b272f42547d85356b035e46273ddaf2aa4e161b8",
              "author": {
                "email": "harshit.m.mogalapalli@oracle.com",
                "name": "Harshit Mogalapalli"
              },
              "message": "ALSA: qc_audio_offload: Fix missing error code in prepare_qmi_response()\n\nWhen snd_soc_usb_find_priv_data() fails, return failure instead of\nsuccess. While we are at it also use direct returns at first few error\npaths where there is no additional cleanup needed.\n\nReported-by: Dan Carpenter <dan.carpenter@linaro.org>\nCloses: https://lore.kernel.org/all/Z_40qL4JnyjR4j0O@stanley.mountain/\nFixes: 326bbc348298 (\"ALSA: usb-audio: qcom: Introduce QC USB SND offloading support\")\nSigned-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>\nLink: https://patch.msgid.link/20250623142639.2938056-1-harshit.m.mogalapalli@oracle.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b272f42547d85356b035e46273ddaf2aa4e161b8"
            },
            {
              "sha": "ff21a6ec0f27c126db0a86d96751bd6e5d1d9874",
              "author": {
                "email": "jack.yu@realtek.com",
                "name": "Jack Yu"
              },
              "message": "ASoC: rt721-sdca: fix boost gain calculation error\n\nFix the boost gain calculation error in rt721_sdca_set_gain_get.\nThis patch is specific for \"FU33 Boost Volume\".\n\nSigned-off-by: Jack Yu <jack.yu@realtek.com>\nLink: https://patch.msgid.link/1b18fcde41c64d6fa85451d523c0434a@realtek.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ff21a6ec0f27c126db0a86d96751bd6e5d1d9874"
            },
            {
              "sha": "6c038b58a2dc5a008c7e7a1297f5aaa4deaaaa7e",
              "author": {
                "email": "kirinode0@gmail.com",
                "name": "Tamura Dai"
              },
              "message": "ASoC: SOF: Intel: hda: Use devm_kstrdup() to avoid memleak.\n\nsof_pdata->tplg_filename can have address allocated by kstrdup()\nand can be overwritten. Memory leak was detected with kmemleak:\n\nunreferenced object 0xffff88812391ff60 (size 16):\n  comm \"kworker/4:1\", pid 161, jiffies 4294802931\n  hex dump (first 16 bytes):\n    73 6f 66 2d 68 64 61 2d 67 65 6e 65 72 69 63 00  sof-hda-generic.\n  backtrace (crc 4bf1675c):\n    __kmalloc_node_track_caller_noprof+0x49c/0x6b0\n    kstrdup+0x46/0xc0\n    hda_machine_select.cold+0x1de/0x12cf [snd_sof_intel_hda_generic]\n    sof_init_environment+0x16f/0xb50 [snd_sof]\n    sof_probe_continue+0x45/0x7c0 [snd_sof]\n    sof_probe_work+0x1e/0x40 [snd_sof]\n    process_one_work+0x894/0x14b0\n    worker_thread+0x5e5/0xfb0\n    kthread+0x39d/0x760\n    ret_from_fork+0x31/0x70\n    ret_from_fork_asm+0x1a/0x30\n\nSigned-off-by: Tamura Dai <kirinode0@gmail.com>\nLink: https://patch.msgid.link/20250615235548.8591-1-kirinode0@gmail.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6c038b58a2dc5a008c7e7a1297f5aaa4deaaaa7e"
            },
            {
              "sha": "524346e9d79f63a6e5aaa645140da3d1ec7a8a0f",
              "author": {
                "email": "ming.lei@redhat.com",
                "name": "Ming Lei"
              },
              "message": "ublk: build batch from IOs in same io_ring_ctx and io task\n\nublk_queue_cmd_list() dispatches the whole batch list by scheduling task\nwork via the tail request's io_uring_cmd, this way is fine even though\nmore than one io_ring_ctx are involved for this batch since it is just\none running context.\n\nHowever, the task work handler ublk_cmd_list_tw_cb() takes `issue_flags`\nof tail uring_cmd's io_ring_ctx for completing all commands. This way is\nwrong if any uring_cmd is issued from different io_ring_ctx.\n\nFixes it by always building batch IOs from same io_ring_ctx and io task\nbecause ublk_dispatch_req() does validate task context, and IO needs to\nbe aborted in case of running from fallback task work context.\n\nFor typical per-queue or per-io daemon implementation, this way shouldn't\nmake difference from performance viewpoint, because single io_ring_ctx is\ntaken in each daemon for normal use case.\n\nFixes: d796cea7b9f3 (\"ublk: implement ->queue_rqs()\")\nSigned-off-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250625022554.883571-1-ming.lei@redhat.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/524346e9d79f63a6e5aaa645140da3d1ec7a8a0f"
            },
            {
              "sha": "5223372e672eaa576c892984b438875426d8ff2b",
              "author": {
                "email": "ming.lei@redhat.com",
                "name": "Ming Lei"
              },
              "message": "selftests: ublk: don't take same backing file for more than one ublk devices\n\nDon't use same backing file for more than one ublk devices, and avoid\nconcurrent write on same file from more ublk disks.\n\nFixes: 8ccebc19ee3d (\"selftests: ublk: support UBLK_F_AUTO_BUF_REG\")\nSigned-off-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250623011934.741788-3-ming.lei@redhat.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5223372e672eaa576c892984b438875426d8ff2b"
            },
            {
              "sha": "67caa528ae08cd05e485c0ea6aea0baaf6579b06",
              "author": {
                "email": "csander@purestorage.com",
                "name": "Caleb Sander Mateos"
              },
              "message": "ublk: fix narrowing warnings in UAPI header\n\nWhen a C++ file compiled with -Wc++11-narrowing includes the UAPI header\nlinux/ublk_cmd.h, ublk_sqe_addr_to_auto_buf_reg()'s assignments of u64\nvalues to u8, u16, and u32 fields result in compiler warnings. Add\nexplicit casts to the intended types to avoid these warnings. Drop the\nunnecessary bitmasks.\n\nReported-by: Uday Shankar <ushankar@purestorage.com>\nSigned-off-by: Caleb Sander Mateos <csander@purestorage.com>\nFixes: 99c1e4eb6a3f (\"ublk: register buffer to local io_uring with provided buf index via UBLK_F_AUTO_BUF_REG\")\nReviewed-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250621162842.337452-1-csander@purestorage.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/67caa528ae08cd05e485c0ea6aea0baaf6579b06"
            },
            {
              "sha": "81b4d1a1d03301dcca8af5c58eded9e535f1f6ed",
              "author": {
                "email": "csander@purestorage.com",
                "name": "Caleb Sander Mateos"
              },
              "message": "ublk: update UBLK_F_SUPPORT_ZERO_COPY comment in UAPI header\n\nUBLK_F_SUPPORT_ZERO_COPY has a very old comment describing the initial\nidea for how zero-copy would be implemented. The actual implementation\nadded in commit 1f6540e2aabb (\"ublk: zc register/unregister bvec\") uses\nio_uring registered buffers rather than shared memory mapping.\nRemove the inaccurate remarks about mapping ublk request memory into the\nublk server's address space and requiring 4K block size. Replace them\nwith a description of the current zero-copy mechanism.\n\nSigned-off-by: Caleb Sander Mateos <csander@purestorage.com>\nReviewed-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250621171015.354932-1-csander@purestorage.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/81b4d1a1d03301dcca8af5c58eded9e535f1f6ed"
            },
            {
              "sha": "4c8a951787ffc4b61a547db9866196104971b5fd",
              "author": {
                "email": "ming.lei@redhat.com",
                "name": "Ming Lei"
              },
              "message": "ublk: setup ublk_io correctly in case of ublk_get_data() failure\n\nIf ublk_get_data() fails, -EIOCBQUEUED is returned and the current command\nbecomes ASYNC. And the only reason is that mapping data can't move on,\nbecause of no enough pages or pending signal, then the current ublk request\nhas to be requeued.\n\nOnce the request need to be requeued, we have to setup `ublk_io` correctly,\nincluding io->cmd and flags, otherwise the request may not be forwarded to\nublk server successfully.\n\nFixes: 9810362a57cb (\"ublk: don't call ublk_dispatch_req() for NEED_GET_DATA\")\nReported-by: Changhui Zhong <czhong@redhat.com>\nCloses: https://lore.kernel.org/linux-block/CAGVVp+VN9QcpHUz_0nasFf5q9i1gi8H8j-G-6mkBoqa3TyjRHA@mail.gmail.com/\nSigned-off-by: Ming Lei <ming.lei@redhat.com>\nTested-by: Changhui Zhong <czhong@redhat.com>\nLink: https://lore.kernel.org/r/20250624104121.859519-1-ming.lei@redhat.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4c8a951787ffc4b61a547db9866196104971b5fd"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-27T16:27:51Z"
      },
      {
        "id": "51408672449",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25151979512,
          "size": 2,
          "distinct_size": 2,
          "ref": "refs/heads/master",
          "head": "67a993863163cb88b1b68974c31b0d84ece4293e",
          "before": "6f2a71a99ebd5dfaa7948a2e9c59eae94b741bd8",
          "commits": [
            {
              "sha": "20d71750cc72e80859d52548cf5c2a7513983b0d",
              "author": {
                "email": "herbert@gondor.apana.org.au",
                "name": "Herbert Xu"
              },
              "message": "crypto: wp512 - Use API partial block handling\n\nUse the Crypto API partial block handling.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>\nTested-by: Milan Broz <gmazyland@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/20d71750cc72e80859d52548cf5c2a7513983b0d"
            },
            {
              "sha": "67a993863163cb88b1b68974c31b0d84ece4293e",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'v6.16-p6' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6\n\nPull crypto fix from Herbert Xu:\n \"This fixes a regression where wp512 can no longer be used with hmac\"\n\n* tag 'v6.16-p6' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6:\n  crypto: wp512 - Use API partial block handling",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/67a993863163cb88b1b68974c31b0d84ece4293e"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-27T05:07:30Z"
      },
      {
        "id": "51406630633",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25150917622,
          "size": 52,
          "distinct_size": 52,
          "ref": "refs/heads/master",
          "head": "6f2a71a99ebd5dfaa7948a2e9c59eae94b741bd8",
          "before": "8a20830f2dd180064f25254d9c55beb243fe9223",
          "commits": [
            {
              "sha": "0f4dd2ce352d38c7ecf1b3821c908816eb6376a7",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: trace_extent_trim_atomic\n\nAdd a tracepoint for when we insert only part of an extent, due to too\nmany overwrites.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0f4dd2ce352d38c7ecf1b3821c908816eb6376a7"
            },
            {
              "sha": "3bd6f8aeae3d3f8121cbae5a8650a46622aa4e07",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: btree iter tracepoints\n\nWe've been seeing some livelock-ish behavior in the index update part of\nthe main write path, and while we've got low level btree path\ntracepoints, we've been lacking high level btree iterator tracepoints.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3bd6f8aeae3d3f8121cbae5a8650a46622aa4e07"
            },
            {
              "sha": "9b9a3270092bf8030dbe21ce90b2d0c8d98d33c7",
              "author": {
                "email": "mmpgouride@gmail.com",
                "name": "Alan Huang"
              },
              "message": "bcachefs: Don't allocate new memory when mempool is exhausted\n\nAllocating new memory when mempool is exhausted is too complicated, just\nreturn ENOMEM is fine. memcpy is not needed, since there might be\npointers point to the old memory, that's the bug.\n\nSigned-off-by: Alan Huang <mmpgouride@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/9b9a3270092bf8030dbe21ce90b2d0c8d98d33c7"
            },
            {
              "sha": "9b54efe66c9b44e7446e8a81a058c014cd43661d",
              "author": {
                "email": "mmpgouride@gmail.com",
                "name": "Alan Huang"
              },
              "message": "bcachefs: Fix alloc_req use after free\n\nNow the alloc_req is allocated from the bump allocator, if there is\nreallocation, the memory of alloc_req would be frees, fix by delaying the\nreallocation to transaction restart, it has to restart anyway.\n\nReported-by: syzbot+2887a13a5c387e616a68@syzkaller.appspotmail.com\nSigned-off-by: Alan Huang <mmpgouride@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/9b54efe66c9b44e7446e8a81a058c014cd43661d"
            },
            {
              "sha": "e31144f8cbe041a572ca64d9261ceeb647ccf557",
              "author": {
                "email": "mmpgouride@gmail.com",
                "name": "Alan Huang"
              },
              "message": "bcachefs: Add missing EBUG_ON\n\nJust like the EBUG_ON in bch2_journal_add_entry().\n\nSigned-off-by: Alan Huang <mmpgouride@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e31144f8cbe041a572ca64d9261ceeb647ccf557"
            },
            {
              "sha": "0dc8eaebed99ea323ab3be7cf1438277f990189d",
              "author": {
                "email": "mmpgouride@gmail.com",
                "name": "Alan Huang"
              },
              "message": "bcachefs: Delay calculation of trans->journal_u64s\n\nWhen there is commit error that need split btree leaf, fsck might change\nthe value of trans->journal_entries.u64s, when retry commit, the value of\ntrans->journal_u64s would be incorrect, which will lead to trans->journal_res.u64s\nunderflow, and then out of bounds write will occur:\n\n[  464.496970][T11969] Call trace:\n[  464.496973][T11969]  show_stack+0x3c/0x88 (C)\n[  464.496995][T11969]  dump_stack_lvl+0xf8/0x178\n[  464.497014][T11969]  dump_stack+0x20/0x30\n[  464.497031][T11969]  __bch2_trans_log_str+0x344/0x350\n[  464.497048][T11969]  bch2_trans_log_str+0x3c/0x60\n[  464.497065][T11969]  __bch2_fsck_err+0x11bc/0x1390\n[  464.497083][T11969]  bch2_check_discard_freespace_key+0xad4/0x10d0\n[  464.497100][T11969]  bch2_bucket_alloc_freelist+0x99c/0x1130\n[  464.497117][T11969]  bch2_bucket_alloc_trans+0x79c/0xcb8\n[  464.497133][T11969]  bch2_bucket_alloc_set_trans+0x378/0xc20\n[  464.497151][T11969]  __open_bucket_add_buckets+0x7fc/0x1c00\n[  464.497168][T11969]  open_bucket_add_buckets+0x184/0x3a8\n[  464.497185][T11969]  bch2_alloc_sectors_start_trans+0xa04/0x1da0\n[  464.497203][T11969]  bch2_btree_reserve_get+0x6e0/0xef0\n[  464.497220][T11969]  bch2_btree_update_start+0x1618/0x2600\n[  464.497239][T11969]  bch2_btree_split_leaf+0xcc/0x730\n[  464.497258][T11969]  bch2_trans_commit_error+0x22c/0xc30\n[  464.497276][T11969]  __bch2_trans_commit+0x207c/0x4e30\n[  464.497292][T11969]  bch2_journal_replay+0x9e0/0x1420\n[  464.497305][T11969]  __bch2_run_recovery_passes+0x458/0xf98\n[  464.497318][T11969]  bch2_run_recovery_passes+0x280/0x478\n[  464.497331][T11969]  bch2_fs_recovery+0x24f0/0x3a28\n[  464.497344][T11969]  bch2_fs_start+0xb80/0x1248\n[  464.497358][T11969]  bch2_fs_get_tree+0xe94/0x1708\n[  464.497377][T11969]  vfs_get_tree+0x84/0x2d0\n\nSigned-off-by: Alan Huang <mmpgouride@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0dc8eaebed99ea323ab3be7cf1438277f990189d"
            },
            {
              "sha": "0e62fca2a6dbfcedaab4919d7ad2044f20fdf889",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: Fix bch2_journal_keys_peek_prev_min()\n\nthis code is rarely invoked, so - we had a few bugs left from basing it\noff of bch2_journal_keys_peek_max()...\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0e62fca2a6dbfcedaab4919d7ad2044f20fdf889"
            },
            {
              "sha": "425da82c63e3ac06b2f8780879e83463e88cbf9f",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: btree_iter: fix updates, journal overlay\n\nWe need to start searching from search_key - _not_ path->pos, which will\npoint to the key we found in the btree\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/425da82c63e3ac06b2f8780879e83463e88cbf9f"
            },
            {
              "sha": "f2ed0892732d470abde7a1af360bd670dc8a68c6",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: better __bch2_snapshot_is_ancestor() assert\n\nPreviously, we weren't checking the result of the skiplist walk, just\nthe is_ancestor bitmap.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f2ed0892732d470abde7a1af360bd670dc8a68c6"
            },
            {
              "sha": "2ba562cc04dc22d01750e80d0638cc1d91fdd95c",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: pass last_seq into fs_journal_start()\n\nPrep work for journal rewind, where the seq we're replaying from may be\ndifferent than the last journal entry's last_seq.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2ba562cc04dc22d01750e80d0638cc1d91fdd95c"
            },
            {
              "sha": "c1ccd43b357e157d78c899e61764fc83b4d1dbaa",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: Fix \"now allowing incompatible features\" message\n\nCheck against version_incompat_allowed, not version_incompat.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c1ccd43b357e157d78c899e61764fc83b4d1dbaa"
            },
            {
              "sha": "c27e5782d957c7242e9cb6405a395b89e8e1d573",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: Fix snapshot_key_missing_inode_snapshot repair\n\nWhen the inode was a whiteout, we were inserting a new whiteout at the\nwrong (old) snapshot.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c27e5782d957c7242e9cb6405a395b89e8e1d573"
            },
            {
              "sha": "b17d7bdb128c50025fc3eb7a9e57b3c7caa4a5ac",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: fsck: fix add_inode()\n\nthe inode btree uses the offset field for the inum, not the inode field.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b17d7bdb128c50025fc3eb7a9e57b3c7caa4a5ac"
            },
            {
              "sha": "191334400d8031df367eb74b6ab49bc163f6f821",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: fsck: fix extent past end of inode repair\n\nFix the case where we're deleting in a different snapshot and need to\nemit a whiteout - that requires a regular BTREE_ITER_filter_snapshots\niterator.\n\nAlso, only delete the part of the extent that extents past i_size.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/191334400d8031df367eb74b6ab49bc163f6f821"
            },
            {
              "sha": "17c3395e25f7db23fa5758c257a372d410d16cfd",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: opts.journal_rewind\n\nAdd a mount option for rewinding the journal, bringing the entire\nfilesystem to where it was at a previous point in time.\n\nThis is for extreme disaster recovery scenarios - it's not intended as\nan undelete operation.\n\nThe option takes a journal sequence number; the desired sequence number\ncan be determined with 'bcachefs list_journal'\n\nCaveats:\n\n- The 'journal_transaction_names' option must have been enabled (it's on\n  by default). The option controls emitting of extra debug info in the\n  journal, so we can see what individual transactions were doing;\n  It also enables journalling of keys being overwritten, which is what\n  we rely on here.\n\n- A full fsck run will be automatically triggered since alloc info will\n  be inconsistent. Only leaf node updates to non-alloc btrees are\n  rewound, since rewinding interior btree updates isn't possible or\n  desirable.\n\n- We can't do anything about data that was deleted and overwritten.\n\n  Lots of metadata updates after the point in time we're rewinding to\n  shouldn't cause a problem, since we segragate data and metadata\n  allocations (this is in order to make repair by btree node scan\n  practical on larger filesystems; there's a small 64-bit per device\n  bitmap in the superblock of device ranges with btree nodes, and we try\n  to keep this small).\n\n  However, having discards enabled will cause problems, since buckets\n  are discarded as soon as they become empty (this is why we don't\n  implement fstrim: we don't need it).\n\n  Hopefully, this feature will be a one-off thing that's never used\n  again: this was implemented for recovering from the \"vfs i_nlink 0 ->\n  subvol deletion\" bug, and that bug was unusually disastrous and\n  additional safeguards have since been implemented.\n\n  But if it does turn out that we need this more in the future, I'll\n  have to implement an option so that empty buckets aren't discarded\n  immediately - lagging by perhaps 1% of device capacity.\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/17c3395e25f7db23fa5758c257a372d410d16cfd"
            },
            {
              "sha": "10dfe4926de30b550913409d107005278ab47911",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: Kill unused tracepoints\n\nDead code cleanup.\n\nLink: https://lore.kernel.org/linux-bcachefs/20250612224059.39fddd07@batman.local.home/\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/10dfe4926de30b550913409d107005278ab47911"
            },
            {
              "sha": "7c9cef5f8bf10a803fd0937ea071a93778f1108a",
              "author": {
                "email": "kent.overstreet@linux.dev",
                "name": "Kent Overstreet"
              },
              "message": "bcachefs: mark more errors autofix\n\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7c9cef5f8bf10a803fd0937ea071a93778f1108a"
            },
            {
              "sha": "d89a34b14df5c205de698c23c3950b2b947cdb97",
              "author": {
                "email": "mmpgouride@gmail.com",
                "name": "Alan Huang"
              },
              "message": "bcachefs: Move bset size check before csum check\n\nIn syzbot's crash, the bset's u64s is larger than the btree node.\n\nReported-by: syzbot+bfaeaa8e26281970158d@syzkaller.appspotmail.com\nSigned-off-by: Alan Huang <mmpgouride@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d89a34b14df5c205de698c23c3950b2b947cdb97"
            },
            {
              "sha": "56be92c63f02e0f6fd855075acb1471ea1c68539",
              "author": {
                "email": "mmpgouride@gmail.com",
                "name": "Alan Huang"
              },
              "message": "bcachefs: Fix pool->alloc NULL pointer dereference\n\nbtree_interior_update_pool has not been initialized before the\nfilesystem becomes read-write, thus mempool_alloc in bch2_btree_update_start\nwill trigger pool->alloc NULL pointer dereference in mempool_alloc_noprof\n\nReported-by: syzbot+2f3859bd28f20fa682e6@syzkaller.appspotmail.com\nSigned-off-by: Alan Huang <mmpgouride@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/56be92c63f02e0f6fd855075acb1471ea1c68539"
            },
            {
              "sha": "03208bd06a61bc2ebc423b6485cbcffecd37af36",
              "author": {
                "email": "bharadwaj.raju777@gmail.com",
                "name": "Bharadwaj Raju"
              },
              "message": "bcachefs: don't return fsck_fix for unfixable node errors in __btree_err\n\nAfter cd3cdb1ef706 (\"Single err message for btree node reads\"),\nall errors caused __btree_err to return -BCH_ERR_fsck_fix no matter what\nthe actual error type was if the recovery pass was scanning for btree\nnodes. This lead to the code continuing despite things like bad node\nformats when they earlier would have caused a jump to fsck_err, because\nbtree_err only jumps when the return from __btree_err does not match\nfsck_fix. Ultimately this lead to undefined behavior by attempting to\nunpack a key based on an invalid format.\n\nMake only errors of type -BCH_ERR_btree_node_read_err_fixable cause\n__btree_err to return -BCH_ERR_fsck_fix when scanning for btree nodes.\n\nReported-by: syzbot+cfd994b9cdf00446fd54@syzkaller.appspotmail.com\nFixes: cd3cdb1ef706 (\"bcachefs: Single err message for btree node reads\")\nSigned-off-by: Bharadwaj Raju <bharadwaj.raju777@gmail.com>\nSigned-off-by: Kent Overstreet <kent.overstreet@linux.dev>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/03208bd06a61bc2ebc423b6485cbcffecd37af36"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-27T03:31:51Z"
      },
      {
        "id": "51405625184",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25150370150,
          "size": 15,
          "distinct_size": 15,
          "ref": "refs/heads/master",
          "head": "8a20830f2dd180064f25254d9c55beb243fe9223",
          "before": "f02769e7f272d6f42b9767f066c5a99afd2338f3",
          "commits": [
            {
              "sha": "5ae416c5b1e2e816aee7b3fc8347adf70afabb4c",
              "author": {
                "email": "qasdev00@gmail.com",
                "name": "Qasim Ijaz"
              },
              "message": "HID: wacom: fix memory leak on kobject creation failure\n\nDuring wacom_initialize_remotes() a fifo buffer is allocated\nwith kfifo_alloc() and later a cleanup action is registered\nduring devm_add_action_or_reset() to clean it up.\n\nHowever if the code fails to create a kobject and register it\nwith sysfs the code simply returns -ENOMEM before the cleanup\naction is registered leading to a memory leak.\n\nFix this by ensuring the fifo is freed when the kobject creation\nand registration process fails.\n\nFixes: 83e6b40e2de6 (\"HID: wacom: EKR: have the wacom resources dynamically allocated\")\nReviewed-by: Ping Cheng <ping.cheng@wacom.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Qasim Ijaz <qasdev00@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5ae416c5b1e2e816aee7b3fc8347adf70afabb4c"
            },
            {
              "sha": "1a19ae437ca5d5c7d9ec2678946fb339b1c706bf",
              "author": {
                "email": "qasdev00@gmail.com",
                "name": "Qasim Ijaz"
              },
              "message": "HID: wacom: fix memory leak on sysfs attribute creation failure\n\nWhen sysfs_create_files() fails during wacom_initialize_remotes() the\nfifo buffer is not freed leading to a memory leak.\n\nFix this by calling kfifo_free() before returning.\n\nFixes: 83e6b40e2de6 (\"HID: wacom: EKR: have the wacom resources dynamically allocated\")\nReviewed-by: Ping Cheng <ping.cheng@wacom.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Qasim Ijaz <qasdev00@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1a19ae437ca5d5c7d9ec2678946fb339b1c706bf"
            },
            {
              "sha": "85a720f4337f0ddf1603c8b75a8f1ffbbe022ef9",
              "author": {
                "email": "qasdev00@gmail.com",
                "name": "Qasim Ijaz"
              },
              "message": "HID: wacom: fix kobject reference count leak\n\nWhen sysfs_create_files() fails in wacom_initialize_remotes() the error\nis returned and the cleanup action will not have been registered yet.\n\nAs a result the kobject???s refcount is never dropped, so the\nkobject can never be freed leading to a reference leak.\n\nFix this by calling kobject_put() before returning.\n\nFixes: 83e6b40e2de6 (\"HID: wacom: EKR: have the wacom resources dynamically allocated\")\nAcked-by: Ping Cheng <ping.cheng@wacom.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Qasim Ijaz <qasdev00@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/85a720f4337f0ddf1603c8b75a8f1ffbbe022ef9"
            },
            {
              "sha": "4a0381080397e77792a5168069f174d3e56175ff",
              "author": {
                "email": "djogorchock@gmail.com",
                "name": "Daniel J. Ogorchock"
              },
              "message": "HID: nintendo: avoid bluetooth suspend/resume stalls\n\nEnsure we don't stall or panic the kernel when using bluetooth-connected\ncontrollers. This was reported as an issue on android devices using\nkernel 6.6 due to the resume hook which had been added for usb joycons.\n\nFirst, set a new state value to JOYCON_CTLR_STATE_SUSPENDED in a\nnewly-added nintendo_hid_suspend. This makes sure we will not stall out\nthe kernel waiting for input reports during led classdev suspend. The\nstalls could happen if connectivity is unreliable or lost to the\ncontroller prior to suspend.\n\nSecond, since we lose connectivity during suspend, do not try\njoycon_init() for bluetooth controllers in the nintendo_hid_resume path.\n\nTested via multiple suspend/resume flows when using the controller both\nin USB and bluetooth modes.\n\nSigned-off-by: Daniel J. Ogorchock <djogorchock@gmail.com>\nReviewed-by: Silvan Jegen <s.jegen@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4a0381080397e77792a5168069f174d3e56175ff"
            },
            {
              "sha": "73f3a7415d93cf418c7625d03bce72da84344406",
              "author": {
                "email": "even.xu@intel.com",
                "name": "Even Xu"
              },
              "message": "HID: Intel-thc-hid: Intel-quicki2c: Enhance QuickI2C reset flow\n\nDuring customer board enabling, it was found: some touch devices\nprepared reset response, but either forgot sending interrupt or\nTHC missed reset interrupt because of timing issue. THC QuickI2C\ndriver depends on interrupt to read reset response, in this case,\nit will cause driver waiting timeout.\n\nThis patch enhances the flow by adding manually reset response\nreading after waiting for reset interrupt timeout.\n\nSigned-off-by: Even Xu <even.xu@intel.com>\nTested-by: Chong Han <chong.han@intel.com>\nFixes: 66b59bfce6d9 (\"HID: intel-thc-hid: intel-quicki2c: Complete THC QuickI2C driver\")\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/73f3a7415d93cf418c7625d03bce72da84344406"
            },
            {
              "sha": "54bae4c17c11688339eb73a04fd24203bb6e7494",
              "author": {
                "email": "acelan.kao@canonical.com",
                "name": "Chia-Lin Kao (AceLan)"
              },
              "message": "HID: quirks: Add quirk for 2 Chicony Electronics HP 5MP Cameras\n\nThe Chicony Electronics HP 5MP Cameras (USB ID 04F2:B824 & 04F2:B82C)\nreport a HID sensor interface that is not actually implemented.\nAttempting to access this non-functional sensor via iio_info causes\nsystem hangs as runtime PM tries to wake up an unresponsive sensor.\n\nAdd these 2 devices to the HID ignore list since the sensor interface is\nnon-functional by design and should not be exposed to userspace.\n\nSigned-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/54bae4c17c11688339eb73a04fd24203bb6e7494"
            },
            {
              "sha": "fa10d4515817274a50af510d5d283d3c7fffc1ae",
              "author": {
                "email": "mario.limonciello@amd.com",
                "name": "Mario Limonciello"
              },
              "message": "HID: input: lower message severity of 'No inputs registered, leaving' to debug\n\nPlugging in a \"Blue snowball\" microphone always shows the\nerror 'No inputs registered, leaving', but the device functions as\nintended.\n\nWhen a HID device is started using the function hid_hw_start() and\nthe argument HID_CONNECT_DEFAULT it will try all various hid connect\nrequests. Not all devices will create an input device and so the\nmessage is needlessly noisy.  Decrease it to debug instead.\n\n[jkosina@suse.com: edit shortlog]\nSigned-off-by: Mario Limonciello <mario.limonciello@amd.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fa10d4515817274a50af510d5d283d3c7fffc1ae"
            },
            {
              "sha": "1a8953f4f7746c6a515989774fe03047c522c613",
              "author": {
                "email": "zhangheng@kylinos.cn",
                "name": "Zhang Heng"
              },
              "message": "HID: Add IGNORE quirk for SMARTLINKTECHNOLOGY\n\nMARTLINKTECHNOLOGY is a microphone device, when the HID interface in an\naudio device is requested to get specific report id, the following error\nmay occur.\n\n[  562.939373] usb 1-1.4.1.2: new full-speed USB device number 21 using xhci_hcd\n[  563.104908] usb 1-1.4.1.2: New USB device found, idVendor=4c4a, idProduct=4155, bcdDevice= 1.00\n[  563.104910] usb 1-1.4.1.2: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[  563.104911] usb 1-1.4.1.2: Product: USB Composite Device\n[  563.104912] usb 1-1.4.1.2: Manufacturer: SmartlinkTechnology\n[  563.104913] usb 1-1.4.1.2: SerialNumber: 20201111000001\n[  563.229499] input: SmartlinkTechnology USB Composite Device as /devices/pci0000:00/0000:00:07.1/0000:04:00.3/usb1/1-1/1-1.4/1-1.4.1/1-1.4.1.2/1-1.4.1.2:1.2/0003:4C4A:4155.000F/input/input35\n[  563.291505] hid-generic 0003:4C4A:4155.000F: input,hidraw2: USB HID v2.01 Keyboard [SmartlinkTechnology USB Composite Device] on usb-0000:04:00.3-1.4.1.2/input2\n[  563.291557] usbhid 1-1.4.1.2:1.3: couldn't find an input interrupt endpoint\n[  568.506654] usb 1-1.4.1.2: 1:1: usb_set_interface failed (-110)\n[  573.626656] usb 1-1.4.1.2: 1:1: usb_set_interface failed (-110)\n[  578.746657] usb 1-1.4.1.2: 1:1: usb_set_interface failed (-110)\n[  583.866655] usb 1-1.4.1.2: 1:1: usb_set_interface failed (-110)\n[  588.986657] usb 1-1.4.1.2: 1:1: usb_set_interface failed (-110)\n\nIgnore HID interface. The device is working properly.\n\nSigned-off-by: Zhang Heng <zhangheng@kylinos.cn>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1a8953f4f7746c6a515989774fe03047c522c613"
            },
            {
              "sha": "9327e3ee5b077c4ab4495a09b67624f670ed88b6",
              "author": {
                "email": "iusico.maxim@libero.it",
                "name": "Iusico Maxim"
              },
              "message": "HID: lenovo: Restrict F7/9/11 mode to compact keyboards only\n\nCommit 2f2bd7cbd1d1 (\"hid: lenovo: Resend all settings on reset_resume\nfor compact keyboards\") introduced a regression for ThinkPad TrackPoint\nKeyboard II by removing the conditional check for enabling F7/9/11 mode\nneeded for compact keyboards only. As a result, the non-compact\nkeyboards can no longer toggle Fn-lock via Fn+Esc, although it can be\ncontrolled via sysfs knob that directly sends raw commands.\n\nThis patch restores the previous conditional check without any\nadditions.\n\nCc: stable@vger.kernel.org\nFixes: 2f2bd7cbd1d1 (\"hid: lenovo: Resend all settings on reset_resume for compact keyboards\")\nSigned-off-by: Iusico Maxim <iusico.maxim@libero.it>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/9327e3ee5b077c4ab4495a09b67624f670ed88b6"
            },
            {
              "sha": "0e97f5b6a0808fa2ea865280708511c817d4bca3",
              "author": {
                "email": "lixu.zhang@intel.com",
                "name": "Zhang Lixu"
              },
              "message": "hid: intel-ish-hid: Use PCI_DEVICE_DATA() macro for ISH device table\n\nReplace the usage of PCI_VDEVICE() with driver_data assignment in the ISH\nPCI device table with the PCI_DEVICE_DATA() macro. This improves code\nreadability.\n\nSigned-off-by: Zhang Lixu <lixu.zhang@intel.com>\nAcked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0e97f5b6a0808fa2ea865280708511c817d4bca3"
            },
            {
              "sha": "5cdb49a680b45f467e9d915c0e74756bc0c67c57",
              "author": {
                "email": "lixu.zhang@intel.com",
                "name": "Zhang Lixu"
              },
              "message": "HID: intel-ish-hid: ipc: Add Wildcat Lake PCI device ID\n\nAdd device ID of Wildcat Lake into ishtp support list.\n\nSigned-off-by: Zhang Lixu <lixu.zhang@intel.com>\nAcked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5cdb49a680b45f467e9d915c0e74756bc0c67c57"
            },
            {
              "sha": "f3054152c12e2eed1e72704aff47b0ea58229584",
              "author": {
                "email": "thomas.zeitlhofer+lkml@ze-it.at",
                "name": "Thomas Zeitlhofer"
              },
              "message": "HID: wacom: fix crash in wacom_aes_battery_handler()\n\nCommit fd2a9b29dc9c (\"HID: wacom: Remove AES power_supply after extended\ninactivity\") introduced wacom_aes_battery_handler() which is scheduled\nas a delayed work (aes_battery_work).\n\nIn wacom_remove(), aes_battery_work is not canceled. Consequently, if\nthe device is removed while aes_battery_work is still pending, then hard\ncrashes or \"Oops: general protection fault...\" are experienced when\nwacom_aes_battery_handler() is finally called. E.g., this happens with\nbuilt-in USB devices after resume from hibernate when aes_battery_work\nwas still pending at the time of hibernation.\n\nSo, take care to cancel aes_battery_work in wacom_remove().\n\nFixes: fd2a9b29dc9c (\"HID: wacom: Remove AES power_supply after extended inactivity\")\nSigned-off-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>\nAcked-by: Ping Cheng <ping.cheng@wacom.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f3054152c12e2eed1e72704aff47b0ea58229584"
            },
            {
              "sha": "4540e41e753a7d69ecd3f5bad51fe620205c3a18",
              "author": {
                "email": "qasdev00@gmail.com",
                "name": "Qasim Ijaz"
              },
              "message": "HID: appletb-kbd: fix \"appletb_backlight\" backlight device reference counting\n\nDuring appletb_kbd_probe, probe attempts to get the backlight device\nby name. When this happens backlight_device_get_by_name looks for a\ndevice in the backlight class which has name \"appletb_backlight\" and\nupon finding a match it increments the reference count for the device\nand returns it to the caller. However this reference is never released\nleading to a reference leak.\n\nFix this by decrementing the backlight device reference count on removal\nvia put_device and on probe failure.\n\nFixes: 93a0fc489481 (\"HID: hid-appletb-kbd: add support for automatic brightness control while using the touchbar\")\nCc: stable@vger.kernel.org\nSigned-off-by: Qasim Ijaz <qasdev00@gmail.com>\nReviewed-by: Aditya Garg <gargaditya08@live.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4540e41e753a7d69ecd3f5bad51fe620205c3a18"
            },
            {
              "sha": "a8905238c3bbe13db90065ed74682418f23830c3",
              "author": {
                "email": "niyarium@gmail.com",
                "name": "Akira Inoue"
              },
              "message": "HID: lenovo: Add support for ThinkPad X1 Tablet Thin Keyboard Gen2\n\nAdd \"Thinkpad X1 Tablet Gen 2 Keyboard\" PID to hid-lenovo driver to fix trackpoint not working issue.\n\nSigned-off-by: Akira Inoue <niyarium@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a8905238c3bbe13db90065ed74682418f23830c3"
            },
            {
              "sha": "8a20830f2dd180064f25254d9c55beb243fe9223",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'hid-for-linus-2025062701' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid\n\nPull HID fixes from Jiri Kosina:\n\n - fix for stalls during suspend/resume cycles with hid-nintendo (Daniel\n   J. Ogorchock)\n\n - memory leak and reference count fixes in hid-wacom and in-appletb-kdb\n   (Qasim Ijaz)\n\n - race condition (leading to kernel crash) fix during device removal in\n   hid-wacom (Thomas Zeitlhofer)\n\n - fix for missed interrupt in intel-thc-hid (Intel-thc-hid:)\n\n - support for a bunch of new device IDs\n\n* tag 'hid-for-linus-2025062701' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid:\n  HID: lenovo: Add support for ThinkPad X1 Tablet Thin Keyboard Gen2\n  HID: appletb-kbd: fix \"appletb_backlight\" backlight device reference counting\n  HID: wacom: fix crash in wacom_aes_battery_handler()\n  HID: intel-ish-hid: ipc: Add Wildcat Lake PCI device ID\n  hid: intel-ish-hid: Use PCI_DEVICE_DATA() macro for ISH device table\n  HID: lenovo: Restrict F7/9/11 mode to compact keyboards only\n  HID: Add IGNORE quirk for SMARTLINKTECHNOLOGY\n  HID: input: lower message severity of 'No inputs registered, leaving' to debug\n  HID: quirks: Add quirk for 2 Chicony Electronics HP 5MP Cameras\n  HID: Intel-thc-hid: Intel-quicki2c: Enhance QuickI2C reset flow\n  HID: nintendo: avoid bluetooth suspend/resume stalls\n  HID: wacom: fix kobject reference count leak\n  HID: wacom: fix memory leak on sysfs attribute creation failure\n  HID: wacom: fix memory leak on kobject creation failure",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8a20830f2dd180064f25254d9c55beb243fe9223"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-27T02:42:44Z"
      },
      {
        "id": "51394915568",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25145027286,
          "size": 5,
          "distinct_size": 5,
          "ref": "refs/heads/master",
          "head": "f02769e7f272d6f42b9767f066c5a99afd2338f3",
          "before": "e34a79b96ab9d49ed8b605fee11099cf3efbb428",
          "commits": [
            {
              "sha": "400123bd0107175e92a9780b97f7a5934eb0a991",
              "author": {
                "email": "andrej.picej@norik.com",
                "name": "Andrej Picej"
              },
              "message": "dt-bindings: drm/bridge: ti-sn65dsi83: drop $ref to fix lvds-vod* warnings\n\nThe kernel test robot reported a warning related to the use of \"$ref\"\ntype definitions for custom endpoint properties\n- \"ti,lvds-vod-swing-clock-microvolt\" and\n- \"ti,lvds-vod-swing-data-microvolt\".\n\nUsing \"$ref\" with \"uint32-array\" is not correctly handled in this\ncontext. Removing \"$ref\" and relying solely on \"maxItems: 2\" enforces\nthe intended requirement of specifying exactly two values, without\ntriggering a schema validation warning.\n\nReported-by: kernel test robot <lkp@intel.com>\nCloses: https://lore.kernel.org/oe-kbuild-all/202505021937.efnQPPqx-lkp@intel.com/\nSigned-off-by: Andrej Picej <andrej.picej@norik.com>\nLink: https://lore.kernel.org/r/20250529053654.1754926-1-andrej.picej@norik.com\nSigned-off-by: Rob Herring (Arm) <robh@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/400123bd0107175e92a9780b97f7a5934eb0a991"
            },
            {
              "sha": "d53fd59707c402d03ec740b4e90a2ddcb5312006",
              "author": {
                "email": "robh@kernel.org",
                "name": "Rob Herring (Arm)"
              },
              "message": "dt-bindings: soc: fsl,ls1028a-reset: Drop extra \"/\" in $id\n\nThe $id value has a double \"//\". Drop it.\n\nFixes: 9ca5a7d9d2e0 (\"dt-bindings: soc: fsl: Add fsl,ls1028a-reset for reset syscon node\")\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nLink: https://lore.kernel.org/r/20250507215903.2748698-1-robh@kernel.org\nSigned-off-by: Rob Herring (Arm) <robh@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d53fd59707c402d03ec740b4e90a2ddcb5312006"
            },
            {
              "sha": "ed2a6ff0234e21cd5e56b63d8bff80120bbe5f15",
              "author": {
                "email": "robh@kernel.org",
                "name": "Rob Herring (Arm)"
              },
              "message": "dt-bindings: serial: Convert altr,juart-1.0 to DT schema\n\nConvert the Altera JTAG UART binding to DT schema. The \"ALTR,juart-1.0\"\ncompatible has long been deprecated, so drop it.\n\nSigned-off-by: Rob Herring (Arm) <robh@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ed2a6ff0234e21cd5e56b63d8bff80120bbe5f15"
            },
            {
              "sha": "f75794b6077ec729f57de9a1ad24f14d288a68bb",
              "author": {
                "email": "robh@kernel.org",
                "name": "Rob Herring (Arm)"
              },
              "message": "dt-bindings: serial: Convert altr,uart-1.0 to DT schema\n\nConvert the Altera JTAG UART binding to DT schema. The \"ALTR,uart-1.0\"\ncompatible has long been deprecated, so drop it.\n\nSigned-off-by: Rob Herring (Arm) <robh@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f75794b6077ec729f57de9a1ad24f14d288a68bb"
            },
            {
              "sha": "f02769e7f272d6f42b9767f066c5a99afd2338f3",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'devicetree-fixes-for-6.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull devicetree fixes from Rob Herring:\n\n - Convert altr,uart-1.0 and altr,juart-1.0 to DT schema. These were\n   applied for nios2, but never sent upstream.\n\n - Fix extra '/' in fsl,ls1028a-reset '$id' path\n\n - Fix warnings in ti,sn65dsi83 schema due to unnecessary $ref.\n\n* tag 'devicetree-fixes-for-6.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux:\n  dt-bindings: serial: Convert altr,uart-1.0 to DT schema\n  dt-bindings: serial: Convert altr,juart-1.0 to DT schema\n  dt-bindings: soc: fsl,ls1028a-reset: Drop extra \"/\" in $id\n  dt-bindings: drm/bridge: ti-sn65dsi83: drop $ref to fix lvds-vod* warnings",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f02769e7f272d6f42b9767f066c5a99afd2338f3"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-26T19:32:52Z"
      },
      {
        "id": "51387699235",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25141506848,
          "size": 44,
          "distinct_size": 44,
          "ref": "refs/heads/master",
          "head": "e34a79b96ab9d49ed8b605fee11099cf3efbb428",
          "before": "ee88bddf7f2f5d1f1da87dd7bedc734048b70e88",
          "commits": [
            {
              "sha": "e0fca6f2cebff539e9317a15a37dcf432e3b851a",
              "author": {
                "email": "longli@microsoft.com",
                "name": "Long Li"
              },
              "message": "net: mana: Record doorbell physical address in PF mode\n\nMANA supports RDMA in PF mode. The driver should record the doorbell\nphysical address when in PF mode.\n\nThe doorbell physical address is used by the RDMA driver to map\ndoorbell pages of the device to user-mode applications through RDMA\nverbs interface. In the past, they have been mapped to user-mode while\nthe device is in VF mode. With the support for PF mode implemented,\nalso expose those pages in PF mode.\n\nSupport for PF mode is implemented in\n290e5d3c49f6 (\"net: mana: Add support for Multi Vports on Bare metal\")\n\nSigned-off-by: Long Li <longli@microsoft.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nLink: https://patch.msgid.link/1750210606-12167-1-git-send-email-longli@linuxonhyperv.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e0fca6f2cebff539e9317a15a37dcf432e3b851a"
            },
            {
              "sha": "89a33de314945c866b155d369f224fa552af1722",
              "author": {
                "email": "kiran.k@intel.com",
                "name": "Kiran K"
              },
              "message": "Bluetooth: btintel_pcie: Fix potential race condition in firmware download\n\nDuring firmware download, if an error occurs, interrupts must be\ndisabled, synchronized, and re-enabled before retrying the download.\nThis change ensures proper interrupt handling to prevent race\nconditions.\n\nSigned-off-by: Chandrashekar Devegowda <chandrashekar.devegowda@intel.com>\nSigned-off-by: Kiran K <kiran.k@intel.com>\nSigned-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/89a33de314945c866b155d369f224fa552af1722"
            },
            {
              "sha": "042bb9603c44620dce98717a2d23235ca57a00d7",
              "author": {
                "email": "frederic.danis@collabora.com",
                "name": "Frédéric Danis"
              },
              "message": "Bluetooth: L2CAP: Fix L2CAP MTU negotiation\n\nOBEX download from iPhone is currently slow due to small packet size\nused to transfer data which doesn't follow the MTU negotiated during\nL2CAP connection, i.e. 672 bytes instead of 32767:\n\n  < ACL Data TX: Handle 11 flags 0x00 dlen 12\n      L2CAP: Connection Request (0x02) ident 18 len 4\n        PSM: 4103 (0x1007)\n        Source CID: 72\n  > ACL Data RX: Handle 11 flags 0x02 dlen 16\n      L2CAP: Connection Response (0x03) ident 18 len 8\n        Destination CID: 14608\n        Source CID: 72\n        Result: Connection successful (0x0000)\n        Status: No further information available (0x0000)\n  < ACL Data TX: Handle 11 flags 0x00 dlen 27\n      L2CAP: Configure Request (0x04) ident 20 len 19\n        Destination CID: 14608\n        Flags: 0x0000\n        Option: Maximum Transmission Unit (0x01) [mandatory]\n          MTU: 32767\n        Option: Retransmission and Flow Control (0x04) [mandatory]\n          Mode: Enhanced Retransmission (0x03)\n          TX window size: 63\n          Max transmit: 3\n          Retransmission timeout: 2000\n          Monitor timeout: 12000\n          Maximum PDU size: 1009\n  > ACL Data RX: Handle 11 flags 0x02 dlen 26\n      L2CAP: Configure Request (0x04) ident 72 len 18\n        Destination CID: 72\n        Flags: 0x0000\n        Option: Retransmission and Flow Control (0x04) [mandatory]\n          Mode: Enhanced Retransmission (0x03)\n          TX window size: 32\n          Max transmit: 255\n          Retransmission timeout: 0\n          Monitor timeout: 0\n          Maximum PDU size: 65527\n        Option: Frame Check Sequence (0x05) [mandatory]\n          FCS: 16-bit FCS (0x01)\n  < ACL Data TX: Handle 11 flags 0x00 dlen 29\n      L2CAP: Configure Response (0x05) ident 72 len 21\n        Source CID: 14608\n        Flags: 0x0000\n        Result: Success (0x0000)\n        Option: Maximum Transmission Unit (0x01) [mandatory]\n          MTU: 672\n        Option: Retransmission and Flow Control (0x04) [mandatory]\n          Mode: Enhanced Retransmission (0x03)\n          TX window size: 32\n          Max transmit: 255\n          Retransmission timeout: 2000\n          Monitor timeout: 12000\n          Maximum PDU size: 1009\n  > ACL Data RX: Handle 11 flags 0x02 dlen 32\n      L2CAP: Configure Response (0x05) ident 20 len 24\n        Source CID: 72\n        Flags: 0x0000\n        Result: Success (0x0000)\n        Option: Maximum Transmission Unit (0x01) [mandatory]\n          MTU: 32767\n        Option: Retransmission and Flow Control (0x04) [mandatory]\n          Mode: Enhanced Retransmission (0x03)\n          TX window size: 63\n          Max transmit: 3\n          Retransmission timeout: 2000\n          Monitor timeout: 12000\n          Maximum PDU size: 1009\n        Option: Frame Check Sequence (0x05) [mandatory]\n          FCS: 16-bit FCS (0x01)\n  ...\n  > ACL Data RX: Handle 11 flags 0x02 dlen 680\n      Channel: 72 len 676 ctrl 0x0202 [PSM 4103 mode Enhanced Retransmission (0x03)] {chan 8}\n      I-frame: Unsegmented TxSeq 1 ReqSeq 2\n  < ACL Data TX: Handle 11 flags 0x00 dlen 13\n      Channel: 14608 len 9 ctrl 0x0204 [PSM 4103 mode Enhanced Retransmission (0x03)] {chan 8}\n      I-frame: Unsegmented TxSeq 2 ReqSeq 2\n  > ACL Data RX: Handle 11 flags 0x02 dlen 680\n      Channel: 72 len 676 ctrl 0x0304 [PSM 4103 mode Enhanced Retransmission (0x03)] {chan 8}\n      I-frame: Unsegmented TxSeq 2 ReqSeq 3\n\nThe MTUs are negotiated for each direction. In this traces 32767 for\niPhone->localhost and no MTU for localhost->iPhone, which based on\n'4.4 L2CAP_CONFIGURATION_REQ' (Core specification v5.4, Vol. 3, Part\nA):\n\n  The only parameters that should be included in the\n  L2CAP_CONFIGURATION_REQ packet are those that require different\n  values than the default or previously agreed values.\n  ...\n  Any missing configuration parameters are assumed to have their\n  most recently explicitly or implicitly accepted values.\n\nand '5.1 Maximum transmission unit (MTU)':\n\n  If the remote device sends a positive L2CAP_CONFIGURATION_RSP\n  packet it should include the actual MTU to be used on this channel\n  for traffic flowing into the local device.\n  ...\n  The default value is 672 octets.\n\nis set by BlueZ to 672 bytes.\n\nIt seems that the iPhone used the lowest negotiated value to transfer\ndata to the localhost instead of the negotiated one for the incoming\ndirection.\n\nThis could be fixed by using the MTU negotiated for the other\ndirection, if exists, in the L2CAP_CONFIGURATION_RSP.\nThis allows to use segmented packets as in the following traces:\n\n  < ACL Data TX: Handle 11 flags 0x00 dlen 12\n        L2CAP: Connection Request (0x02) ident 22 len 4\n          PSM: 4103 (0x1007)\n          Source CID: 72\n  < ACL Data TX: Handle 11 flags 0x00 dlen 27\n        L2CAP: Configure Request (0x04) ident 24 len 19\n          Destination CID: 2832\n          Flags: 0x0000\n          Option: Maximum Transmission Unit (0x01) [mandatory]\n            MTU: 32767\n          Option: Retransmission and Flow Control (0x04) [mandatory]\n            Mode: Enhanced Retransmission (0x03)\n            TX window size: 63\n            Max transmit: 3\n            Retransmission timeout: 2000\n            Monitor timeout: 12000\n            Maximum PDU size: 1009\n  > ACL Data RX: Handle 11 flags 0x02 dlen 26\n        L2CAP: Configure Request (0x04) ident 15 len 18\n          Destination CID: 72\n          Flags: 0x0000\n          Option: Retransmission and Flow Control (0x04) [mandatory]\n            Mode: Enhanced Retransmission (0x03)\n            TX window size: 32\n            Max transmit: 255\n            Retransmission timeout: 0\n            Monitor timeout: 0\n            Maximum PDU size: 65527\n          Option: Frame Check Sequence (0x05) [mandatory]\n            FCS: 16-bit FCS (0x01)\n  < ACL Data TX: Handle 11 flags 0x00 dlen 29\n        L2CAP: Configure Response (0x05) ident 15 len 21\n          Source CID: 2832\n          Flags: 0x0000\n          Result: Success (0x0000)\n          Option: Maximum Transmission Unit (0x01) [mandatory]\n            MTU: 32767\n          Option: Retransmission and Flow Control (0x04) [mandatory]\n            Mode: Enhanced Retransmission (0x03)\n            TX window size: 32\n            Max transmit: 255\n            Retransmission timeout: 2000\n            Monitor timeout: 12000\n            Maximum PDU size: 1009\n  > ACL Data RX: Handle 11 flags 0x02 dlen 32\n        L2CAP: Configure Response (0x05) ident 24 len 24\n          Source CID: 72\n          Flags: 0x0000\n          Result: Success (0x0000)\n          Option: Maximum Transmission Unit (0x01) [mandatory]\n            MTU: 32767\n          Option: Retransmission and Flow Control (0x04) [mandatory]\n            Mode: Enhanced Retransmission (0x03)\n            TX window size: 63\n            Max transmit: 3\n            Retransmission timeout: 2000\n            Monitor timeout: 12000\n            Maximum PDU size: 1009\n          Option: Frame Check Sequence (0x05) [mandatory]\n            FCS: 16-bit FCS (0x01)\n  ...\n  > ACL Data RX: Handle 11 flags 0x02 dlen 1009\n        Channel: 72 len 1005 ctrl 0x4202 [PSM 4103 mode Enhanced Retransmission (0x03)] {chan 8}\n        I-frame: Start (len 21884) TxSeq 1 ReqSeq 2\n  > ACL Data RX: Handle 11 flags 0x02 dlen 1009\n        Channel: 72 len 1005 ctrl 0xc204 [PSM 4103 mode Enhanced Retransmission (0x03)] {chan 8}\n        I-frame: Continuation TxSeq 2 ReqSeq 2\n\nThis has been tested with kernel 5.4 and BlueZ 5.77.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Frédéric Danis <frederic.danis@collabora.com>\nSigned-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/042bb9603c44620dce98717a2d23235ca57a00d7"
            },
            {
              "sha": "db0ff7e15923ffa7067874604ca275e92343f1b1",
              "author": {
                "email": "quic_shuaz@quicinc.com",
                "name": "Shuai Zhang"
              },
              "message": "driver: bluetooth: hci_qca:fix unable to load the BT driver\n\nSome modules have BT_EN enabled via a hardware pull-up,\nmeaning it is not defined in the DTS and is not controlled\nthrough the power sequence. In such cases, fall through\nto follow the legacy flow.\n\nSigned-off-by: Shuai Zhang <quic_shuaz@quicinc.com>\nSigned-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/db0ff7e15923ffa7067874604ca275e92343f1b1"
            },
            {
              "sha": "0b39b055b5b48cbbdf5746a1ca6e3f6b0221e537",
              "author": {
                "email": "xiaowei.li@simcom.com",
                "name": "Xiaowei Li"
              },
              "message": "net: usb: qmi_wwan: add SIMCom 8230C composition\n\nAdd support for SIMCom 8230C which is based on Qualcomm SDX35 chip.\n0x9071: tty (DM) + tty (NMEA) + tty (AT) + rmnet\nT:  Bus=01 Lev=01 Prnt=01 Port=05 Cnt=02 Dev#=  8 Spd=480  MxCh= 0\nD:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1\nP:  Vendor=1e0e ProdID=9071 Rev= 5.15\nS:  Manufacturer=SIMCOM\nS:  Product=SDXBAAGHA-IDP _SN:D744C4C5\nS:  SerialNumber=0123456789ABCDEF\nC:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA\nI:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option\nE:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nE:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nI:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option\nE:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nE:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nI:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=40 Driver=option\nE:  Ad=84(I) Atr=03(Int.) MxPS=  10 Ivl=32ms\nE:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nE:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nI:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=50 Driver=qmi_wwan\nE:  Ad=86(I) Atr=03(Int.) MxPS=   8 Ivl=32ms\nE:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nE:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nI:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=none\nE:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms\nE:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms\n\nSigned-off-by: Xiaowei Li <xiaowei.li@simcom.com>\nAcked-by: Bjørn Mork <bjorn@mork.no>\nLink: https://patch.msgid.link/tencent_21D781FAA4969FEACA6ABB460362B52C9409@qq.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0b39b055b5b48cbbdf5746a1ca6e3f6b0221e537"
            },
            {
              "sha": "714db279942b1fb9b97c4243e186825a96750239",
              "author": {
                "email": "sln@onemain.com",
                "name": "Shannon Nelson"
              },
              "message": "CREDITS: Add entry for Shannon Nelson\n\nI'm retiring and have already had my name removed from MAINTAINERS.\nA couple of folks kindly suggested I should have an entry here.\n\nSigned-off-by: Shannon Nelson <sln@onemain.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nReviewed-by: Andrew Lunn <andrew@lunn.ch>\nLink: https://patch.msgid.link/20250619211607.1244217-1-sln@onemain.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/714db279942b1fb9b97c4243e186825a96750239"
            },
            {
              "sha": "302251f1fdfd302ce99a619aac1a5164d0bb7c4b",
              "author": {
                "email": "faisalbukhari523@gmail.com",
                "name": "Faisal Bukhari"
              },
              "message": "Fix typo in marvell octeontx2 documentation\n\nDocumentation/networking/device_drivers/ethernet/marvell/octeontx2.rst\nFixes a spelling mistake: \"funcionality\" → \"functionality\".\n\nSigned-off-by: Faisal Bukhari <faisalbukhari523@gmail.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/302251f1fdfd302ce99a619aac1a5164d0bb7c4b"
            },
            {
              "sha": "b993ea46b3b601915ceaaf3c802adf11e7d6bac6",
              "author": {
                "email": "edumazet@google.com",
                "name": "Eric Dumazet"
              },
              "message": "atm: clip: prevent NULL deref in clip_push()\n\nBlamed commit missed that vcc_destroy_socket() calls\nclip_push() with a NULL skb.\n\nIf clip_devs is NULL, clip_push() then crashes when reading\nskb->truesize.\n\nFixes: 93a2014afbac (\"atm: fix a UAF in lec_arp_clear_vccs()\")\nReported-by: syzbot+1316233c4c6803382a8b@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/netdev/68556f59.a00a0220.137b3.004e.GAE@google.com/T/#u\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nCc: Cong Wang <xiyou.wangcong@gmail.com>\nCc: Gengming Liu <l.dmxcsnsbh@gmail.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b993ea46b3b601915ceaaf3c802adf11e7d6bac6"
            },
            {
              "sha": "95b6759a81833d0e8c7456430186c2f6d174764e",
              "author": {
                "email": "arnd@arndb.de",
                "name": "Arnd Bergmann"
              },
              "message": "net: qed: reduce stack usage for TLV processing\n\nclang gets a bit confused by the code in the qed_mfw_process_tlv_req and\nends up spilling registers to the stack hundreds of times. When sanitizers\nare enabled, this can end up blowing the stack warning limit:\n\ndrivers/net/ethernet/qlogic/qed/qed_mng_tlv.c:1244:5: error: stack frame size (1824) exceeds limit (1280) in 'qed_mfw_process_tlv_req' [-Werror,-Wframe-larger-than]\n\nApparently the problem is the complexity of qed_mfw_update_tlvs()\nafter inlining, and marking the four main branches of that function\nas noinline_for_stack makes this problem completely go away, the stack\nusage goes down to 100 bytes.\n\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nReviewed-by: Alexander Lobakin <aleksander.lobakin@intel.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/95b6759a81833d0e8c7456430186c2f6d174764e"
            },
            {
              "sha": "1d6123102e9fbedc8d25bf4731da6d513173e49e",
              "author": {
                "email": "kuniyu@google.com",
                "name": "Kuniyuki Iwashima"
              },
              "message": "Bluetooth: hci_core: Fix use-after-free in vhci_flush()\n\nsyzbot reported use-after-free in vhci_flush() without repro. [0]\n\nFrom the splat, a thread close()d a vhci file descriptor while\nits device was being used by iotcl() on another thread.\n\nOnce the last fd refcnt is released, vhci_release() calls\nhci_unregister_dev(), hci_free_dev(), and kfree() for struct\nvhci_data, which is set to hci_dev->dev->driver_data.\n\nThe problem is that there is no synchronisation after unlinking\nhdev from hci_dev_list in hci_unregister_dev().  There might be\nanother thread still accessing the hdev which was fetched before\nthe unlink operation.\n\nWe can use SRCU for such synchronisation.\n\nLet's run hci_dev_reset() under SRCU and wait for its completion\nin hci_unregister_dev().\n\nAnother option would be to restore hci_dev->destruct(), which was\nremoved in commit 587ae086f6e4 (\"Bluetooth: Remove unused\nhci-destruct cb\").  However, this would not be a good solution, as\nwe should not run hci_unregister_dev() while there are in-flight\nioctl() requests, which could lead to another data-race KCSAN splat.\n\nNote that other drivers seem to have the same problem, for exmaple,\nvirtbt_remove().\n\n[0]:\nBUG: KASAN: slab-use-after-free in skb_queue_empty_lockless include/linux/skbuff.h:1891 [inline]\nBUG: KASAN: slab-use-after-free in skb_queue_purge_reason+0x99/0x360 net/core/skbuff.c:3937\nRead of size 8 at addr ffff88807cb8d858 by task syz.1.219/6718\n\nCPU: 1 UID: 0 PID: 6718 Comm: syz.1.219 Not tainted 6.16.0-rc1-syzkaller-00196-g08207f42d3ff #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nCall Trace:\n <TASK>\n dump_stack_lvl+0x189/0x250 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xd2/0x2b0 mm/kasan/report.c:521\n kasan_report+0x118/0x150 mm/kasan/report.c:634\n skb_queue_empty_lockless include/linux/skbuff.h:1891 [inline]\n skb_queue_purge_reason+0x99/0x360 net/core/skbuff.c:3937\n skb_queue_purge include/linux/skbuff.h:3368 [inline]\n vhci_flush+0x44/0x50 drivers/bluetooth/hci_vhci.c:69\n hci_dev_do_reset net/bluetooth/hci_core.c:552 [inline]\n hci_dev_reset+0x420/0x5c0 net/bluetooth/hci_core.c:592\n sock_do_ioctl+0xd9/0x300 net/socket.c:1190\n sock_ioctl+0x576/0x790 net/socket.c:1311\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:907 [inline]\n __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fcf5b98e929\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fcf5c7b9038 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007fcf5bbb6160 RCX: 00007fcf5b98e929\nRDX: 0000000000000000 RSI: 00000000400448cb RDI: 0000000000000009\nRBP: 00007fcf5ba10b39 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007fcf5bbb6160 R15: 00007ffd6353d528\n </TASK>\n\nAllocated by task 6535:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3e/0x80 mm/kasan/common.c:68\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0x93/0xb0 mm/kasan/common.c:394\n kasan_kmalloc include/linux/kasan.h:260 [inline]\n __kmalloc_cache_noprof+0x230/0x3d0 mm/slub.c:4359\n kmalloc_noprof include/linux/slab.h:905 [inline]\n kzalloc_noprof include/linux/slab.h:1039 [inline]\n vhci_open+0x57/0x360 drivers/bluetooth/hci_vhci.c:635\n misc_open+0x2bc/0x330 drivers/char/misc.c:161\n chrdev_open+0x4c9/0x5e0 fs/char_dev.c:414\n do_dentry_open+0xdf0/0x1970 fs/open.c:964\n vfs_open+0x3b/0x340 fs/open.c:1094\n do_open fs/namei.c:3887 [inline]\n path_openat+0x2ee5/0x3830 fs/namei.c:4046\n do_filp_open+0x1fa/0x410 fs/namei.c:4073\n do_sys_openat2+0x121/0x1c0 fs/open.c:1437\n do_sys_open fs/open.c:1452 [inline]\n __do_sys_openat fs/open.c:1468 [inline]\n __se_sys_openat fs/open.c:1463 [inline]\n __x64_sys_openat+0x138/0x170 fs/open.c:1463\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 6535:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3e/0x80 mm/kasan/common.c:68\n kasan_save_free_info+0x46/0x50 mm/kasan/generic.c:576\n poison_slab_object mm/kasan/common.c:247 [inline]\n __kasan_slab_free+0x62/0x70 mm/kasan/common.c:264\n kasan_slab_free include/linux/kasan.h:233 [inline]\n slab_free_hook mm/slub.c:2381 [inline]\n slab_free mm/slub.c:4643 [inline]\n kfree+0x18e/0x440 mm/slub.c:4842\n vhci_release+0xbc/0xd0 drivers/bluetooth/hci_vhci.c:671\n __fput+0x44c/0xa70 fs/file_table.c:465\n task_work_run+0x1d1/0x260 kernel/task_work.c:227\n exit_task_work include/linux/task_work.h:40 [inline]\n do_exit+0x6ad/0x22e0 kernel/exit.c:955\n do_group_exit+0x21c/0x2d0 kernel/exit.c:1104\n __do_sys_exit_group kernel/exit.c:1115 [inline]\n __se_sys_exit_group kernel/exit.c:1113 [inline]\n __x64_sys_exit_group+0x3f/0x40 kernel/exit.c:1113\n x64_sys_call+0x21ba/0x21c0 arch/x86/include/generated/asm/syscalls_64.h:232\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nThe buggy address belongs to the object at ffff88807cb8d800\n which belongs to the cache kmalloc-1k of size 1024\nThe buggy address is located 88 bytes inside of\n freed 1024-byte region [ffff88807cb8d800, ffff88807cb8dc00)\n\nFixes: bf18c7118cf8 (\"Bluetooth: vhci: Free driver_data on file release\")\nReported-by: syzbot+2faa4825e556199361f9@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=f62d64848fc4c7c30cd6\nSigned-off-by: Kuniyuki Iwashima <kuniyu@google.com>\nAcked-by: Paul Menzel <pmenzel@molgen.mpg.de>\nSigned-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1d6123102e9fbedc8d25bf4731da6d513173e49e"
            },
            {
              "sha": "f5990207026987a353d5a95204c4d9cb725637fd",
              "author": {
                "email": "leitao@debian.org",
                "name": "Breno Leitao"
              },
              "message": "net: netpoll: Initialize UDP checksum field before checksumming\n\ncommit f1fce08e63fe (\"netpoll: Eliminate redundant assignment\") removed\nthe initialization of the UDP checksum, which was wrong and broke\nnetpoll IPv6 transmission due to bad checksumming.\n\nudph->check needs to be set before calling csum_ipv6_magic().\n\nFixes: f1fce08e63fe (\"netpoll: Eliminate redundant assignment\")\nSigned-off-by: Breno Leitao <leitao@debian.org>\nReviewed-by: Simon Horman <horms@kernel.org>\nLink: https://patch.msgid.link/20250620-netpoll_fix-v1-1-f9f0b82bc059@debian.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f5990207026987a353d5a95204c4d9cb725637fd"
            },
            {
              "sha": "d5e3241c5a386a2425823c8c7afb77a465bd040f",
              "author": {
                "email": "fourier.thomas@gmail.com",
                "name": "Thomas Fourier"
              },
              "message": "ethernet: ionic: Fix DMA mapping tests\n\nChange error values of `ionic_tx_map_single()` and `ionic_tx_map_frag()`\nfrom 0 to `DMA_MAPPING_ERROR` to prevent collision with 0 as a valid\naddress.\n\nThis also fixes the use of `dma_mapping_error()` to test against 0 in\n`ionic_xdp_post_frame()`\n\nFixes: 0f3154e6bcb3 (\"ionic: Add Tx and Rx handling\")\nFixes: 56e41ee12d2d (\"ionic: better dma-map error handling\")\nFixes: ac8813c0ab7d (\"ionic: convert Rx queue buffers to use page_pool\")\nSigned-off-by: Thomas Fourier <fourier.thomas@gmail.com>\nReviewed-by: Brett Creeley <brett.creeley@amd.com>\nLink: https://patch.msgid.link/20250619094538.283723-2-fourier.thomas@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d5e3241c5a386a2425823c8c7afb77a465bd040f"
            },
            {
              "sha": "7544f3f5b0b58c396f374d060898b5939da31709",
              "author": {
                "email": "idosch@nvidia.com",
                "name": "Ido Schimmel"
              },
              "message": "bridge: mcast: Fix use-after-free during router port configuration\n\nThe bridge maintains a global list of ports behind which a multicast\nrouter resides. The list is consulted during forwarding to ensure\nmulticast packets are forwarded to these ports even if the ports are not\nmember in the matching MDB entry.\n\nWhen per-VLAN multicast snooping is enabled, the per-port multicast\ncontext is disabled on each port and the port is removed from the global\nrouter port list:\n\n # ip link add name br1 up type bridge vlan_filtering 1 mcast_snooping 1\n # ip link add name dummy1 up master br1 type dummy\n # ip link set dev dummy1 type bridge_slave mcast_router 2\n $ bridge -d mdb show | grep router\n router ports on br1: dummy1\n # ip link set dev br1 type bridge mcast_vlan_snooping 1\n $ bridge -d mdb show | grep router\n\nHowever, the port can be re-added to the global list even when per-VLAN\nmulticast snooping is enabled:\n\n # ip link set dev dummy1 type bridge_slave mcast_router 0\n # ip link set dev dummy1 type bridge_slave mcast_router 2\n $ bridge -d mdb show | grep router\n router ports on br1: dummy1\n\nSince commit 4b30ae9adb04 (\"net: bridge: mcast: re-implement\nbr_multicast_{enable, disable}_port functions\"), when per-VLAN multicast\nsnooping is enabled, multicast disablement on a port will disable the\nper-{port, VLAN} multicast contexts and not the per-port one. As a\nresult, a port will remain in the global router port list even after it\nis deleted. This will lead to a use-after-free [1] when the list is\ntraversed (when adding a new port to the list, for example):\n\n # ip link del dev dummy1\n # ip link add name dummy2 up master br1 type dummy\n # ip link set dev dummy2 type bridge_slave mcast_router 2\n\nSimilarly, stale entries can also be found in the per-VLAN router port\nlist. When per-VLAN multicast snooping is disabled, the per-{port, VLAN}\ncontexts are disabled on each port and the port is removed from the\nper-VLAN router port list:\n\n # ip link add name br1 up type bridge vlan_filtering 1 mcast_snooping 1 mcast_vlan_snooping 1\n # ip link add name dummy1 up master br1 type dummy\n # bridge vlan add vid 2 dev dummy1\n # bridge vlan global set vid 2 dev br1 mcast_snooping 1\n # bridge vlan set vid 2 dev dummy1 mcast_router 2\n $ bridge vlan global show dev br1 vid 2 | grep router\n       router ports: dummy1\n # ip link set dev br1 type bridge mcast_vlan_snooping 0\n $ bridge vlan global show dev br1 vid 2 | grep router\n\nHowever, the port can be re-added to the per-VLAN list even when\nper-VLAN multicast snooping is disabled:\n\n # bridge vlan set vid 2 dev dummy1 mcast_router 0\n # bridge vlan set vid 2 dev dummy1 mcast_router 2\n $ bridge vlan global show dev br1 vid 2 | grep router\n       router ports: dummy1\n\nWhen the VLAN is deleted from the port, the per-{port, VLAN} multicast\ncontext will not be disabled since multicast snooping is not enabled\non the VLAN. As a result, the port will remain in the per-VLAN router\nport list even after it is no longer member in the VLAN. This will lead\nto a use-after-free [2] when the list is traversed (when adding a new\nport to the list, for example):\n\n # ip link add name dummy2 up master br1 type dummy\n # bridge vlan add vid 2 dev dummy2\n # bridge vlan del vid 2 dev dummy1\n # bridge vlan set vid 2 dev dummy2 mcast_router 2\n\nFix these issues by removing the port from the relevant (global or\nper-VLAN) router port list in br_multicast_port_ctx_deinit(). The\nfunction is invoked during port deletion with the per-port multicast\ncontext and during VLAN deletion with the per-{port, VLAN} multicast\ncontext.\n\nNote that deleting the multicast router timer is not enough as it only\ntakes care of the temporary multicast router states (1 or 3) and not the\npermanent one (2).\n\n[1]\nBUG: KASAN: slab-out-of-bounds in br_multicast_add_router.part.0+0x3f1/0x560\nWrite of size 8 at addr ffff888004a67328 by task ip/384\n[...]\nCall Trace:\n <TASK>\n dump_stack_lvl+0x6f/0xa0\n print_address_description.constprop.0+0x6f/0x350\n print_report+0x108/0x205\n kasan_report+0xdf/0x110\n br_multicast_add_router.part.0+0x3f1/0x560\n br_multicast_set_port_router+0x74e/0xac0\n br_setport+0xa55/0x1870\n br_port_slave_changelink+0x95/0x120\n __rtnl_newlink+0x5e8/0xa40\n rtnl_newlink+0x627/0xb00\n rtnetlink_rcv_msg+0x6fb/0xb70\n netlink_rcv_skb+0x11f/0x350\n netlink_unicast+0x426/0x710\n netlink_sendmsg+0x75a/0xc20\n __sock_sendmsg+0xc1/0x150\n ____sys_sendmsg+0x5aa/0x7b0\n ___sys_sendmsg+0xfc/0x180\n __sys_sendmsg+0x124/0x1c0\n do_syscall_64+0xbb/0x360\n entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n[2]\nBUG: KASAN: slab-use-after-free in br_multicast_add_router.part.0+0x378/0x560\nRead of size 8 at addr ffff888009f00840 by task bridge/391\n[...]\nCall Trace:\n <TASK>\n dump_stack_lvl+0x6f/0xa0\n print_address_description.constprop.0+0x6f/0x350\n print_report+0x108/0x205\n kasan_report+0xdf/0x110\n br_multicast_add_router.part.0+0x378/0x560\n br_multicast_set_port_router+0x6f9/0xac0\n br_vlan_process_options+0x8b6/0x1430\n br_vlan_rtm_process_one+0x605/0xa30\n br_vlan_rtm_process+0x396/0x4c0\n rtnetlink_rcv_msg+0x2f7/0xb70\n netlink_rcv_skb+0x11f/0x350\n netlink_unicast+0x426/0x710\n netlink_sendmsg+0x75a/0xc20\n __sock_sendmsg+0xc1/0x150\n ____sys_sendmsg+0x5aa/0x7b0\n ___sys_sendmsg+0xfc/0x180\n __sys_sendmsg+0x124/0x1c0\n do_syscall_64+0xbb/0x360\n entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\nFixes: 2796d846d74a (\"net: bridge: vlan: convert mcast router global option to per-vlan entry\")\nFixes: 4b30ae9adb04 (\"net: bridge: mcast: re-implement br_multicast_{enable, disable}_port functions\")\nReported-by: syzbot+7bfa4b72c6a5da128d32@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/all/684c18bd.a00a0220.279073.000b.GAE@google.com/T/\nSigned-off-by: Ido Schimmel <idosch@nvidia.com>\nLink: https://patch.msgid.link/20250619182228.1656906-1-idosch@nvidia.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7544f3f5b0b58c396f374d060898b5939da31709"
            },
            {
              "sha": "0e7facea6da2bd360361440786785752aa5b0e30",
              "author": {
                "email": "arnd@arndb.de",
                "name": "Arnd Bergmann"
              },
              "message": "wifi: iwlegacy: work around excessive stack usage on clang/kasan\n\nIn some rare randconfig builds, I seem to trigger a bug in clang where\nit unrolls a loop but then runs out of registers, which then get\nspilled to the stack:\n\nnet/wireless/intel/iwlegacy/4965-rs.c:2262:1: error: stack frame size (1696) exceeds limit (1280) in 'il4965_rs_rate_init' [-Werror,-Wframe-larger-than]\n\nThis seems to be the same one I saw in the omapdrm driver, and there is\nan easy workaround by not inlining the il4965_rs_rate_scale_clear_win\nfunction.\n\nLink: https://github.com/llvm/llvm-project/issues/143908\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nAcked-by: Stanislaw Gruszka <stf_xl@wp.pl>\nLink: https://patch.msgid.link/20250620113946.3987160-1-arnd@kernel.org\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0e7facea6da2bd360361440786785752aa5b0e30"
            },
            {
              "sha": "7a3750ff0f2e8fee338a9c168f429f6c37f0e820",
              "author": {
                "email": "lachlan.hodges@morsemicro.com",
                "name": "Lachlan Hodges"
              },
              "message": "wifi: mac80211: fix beacon interval calculation overflow\n\nAs we are converting from TU to usecs, a beacon interval of\n100*1024 usecs will lead to integer wrapping. To fix change\nto use a u32.\n\nFixes: 057d5f4ba1e4 (\"mac80211: sync dtim_count to TSF\")\nSigned-off-by: Lachlan Hodges <lachlan.hodges@morsemicro.com>\nLink: https://patch.msgid.link/20250621123209.511796-1-lachlan.hodges@morsemicro.com\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7a3750ff0f2e8fee338a9c168f429f6c37f0e820"
            },
            {
              "sha": "32ca245464e1479bfea8592b9db227fdc1641705",
              "author": {
                "email": "kuniyu@google.com",
                "name": "Kuniyuki Iwashima"
              },
              "message": "af_unix: Don't leave consecutive consumed OOB skbs.\n\nJann Horn reported a use-after-free in unix_stream_read_generic().\n\nThe following sequences reproduce the issue:\n\n  $ python3\n  from socket import *\n  s1, s2 = socketpair(AF_UNIX, SOCK_STREAM)\n  s1.send(b'x', MSG_OOB)\n  s2.recv(1, MSG_OOB)     # leave a consumed OOB skb\n  s1.send(b'y', MSG_OOB)\n  s2.recv(1, MSG_OOB)     # leave a consumed OOB skb\n  s1.send(b'z', MSG_OOB)\n  s2.recv(1)              # recv 'z' illegally\n  s2.recv(1, MSG_OOB)     # access 'z' skb (use-after-free)\n\nEven though a user reads OOB data, the skb holding the data stays on\nthe recv queue to mark the OOB boundary and break the next recv().\n\nAfter the last send() in the scenario above, the sk2's recv queue has\n2 leading consumed OOB skbs and 1 real OOB skb.\n\nThen, the following happens during the next recv() without MSG_OOB\n\n  1. unix_stream_read_generic() peeks the first consumed OOB skb\n  2. manage_oob() returns the next consumed OOB skb\n  3. unix_stream_read_generic() fetches the next not-yet-consumed OOB skb\n  4. unix_stream_read_generic() reads and frees the OOB skb\n\n, and the last recv(MSG_OOB) triggers KASAN splat.\n\nThe 3. above occurs because of the SO_PEEK_OFF code, which does not\nexpect unix_skb_len(skb) to be 0, but this is true for such consumed\nOOB skbs.\n\n  while (skip >= unix_skb_len(skb)) {\n    skip -= unix_skb_len(skb);\n    skb = skb_peek_next(skb, &sk->sk_receive_queue);\n    ...\n  }\n\nIn addition to this use-after-free, there is another issue that\nioctl(SIOCATMARK) does not function properly with consecutive consumed\nOOB skbs.\n\nSo, nothing good comes out of such a situation.\n\nInstead of complicating manage_oob(), ioctl() handling, and the next\nECONNRESET fix by introducing a loop for consecutive consumed OOB skbs,\nlet's not leave such consecutive OOB unnecessarily.\n\nNow, while receiving an OOB skb in unix_stream_recv_urg(), if its\nprevious skb is a consumed OOB skb, it is freed.\n\n[0]:\nBUG: KASAN: slab-use-after-free in unix_stream_read_actor (net/unix/af_unix.c:3027)\nRead of size 4 at addr ffff888106ef2904 by task python3/315\n\nCPU: 2 UID: 0 PID: 315 Comm: python3 Not tainted 6.16.0-rc1-00407-gec315832f6f9 #8 PREEMPT(voluntary)\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-4.fc42 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl (lib/dump_stack.c:122)\n print_report (mm/kasan/report.c:409 mm/kasan/report.c:521)\n kasan_report (mm/kasan/report.c:636)\n unix_stream_read_actor (net/unix/af_unix.c:3027)\n unix_stream_read_generic (net/unix/af_unix.c:2708 net/unix/af_unix.c:2847)\n unix_stream_recvmsg (net/unix/af_unix.c:3048)\n sock_recvmsg (net/socket.c:1063 (discriminator 20) net/socket.c:1085 (discriminator 20))\n __sys_recvfrom (net/socket.c:2278)\n __x64_sys_recvfrom (net/socket.c:2291 (discriminator 1) net/socket.c:2287 (discriminator 1) net/socket.c:2287 (discriminator 1))\n do_syscall_64 (arch/x86/entry/syscall_64.c:63 (discriminator 1) arch/x86/entry/syscall_64.c:94 (discriminator 1))\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\nRIP: 0033:0x7f8911fcea06\nCode: 5d e8 41 8b 93 08 03 00 00 59 5e 48 83 f8 fc 75 19 83 e2 39 83 fa 08 75 11 e8 26 ff ff ff 66 0f 1f 44 00 00 48 8b 45 10 0f 05 <48> 8b 5d f8 c9 c3 0f 1f 40 00 f3 0f 1e fa 55 48 89 e5 48 83 ec 08\nRSP: 002b:00007fffdb0dccb0 EFLAGS: 00000202 ORIG_RAX: 000000000000002d\nRAX: ffffffffffffffda RBX: 00007fffdb0dcdc8 RCX: 00007f8911fcea06\nRDX: 0000000000000001 RSI: 00007f8911a5e060 RDI: 0000000000000006\nRBP: 00007fffdb0dccd0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000202 R12: 00007f89119a7d20\nR13: ffffffffc4653600 R14: 0000000000000000 R15: 0000000000000000\n </TASK>\n\nAllocated by task 315:\n kasan_save_stack (mm/kasan/common.c:48)\n kasan_save_track (mm/kasan/common.c:60 (discriminator 1) mm/kasan/common.c:69 (discriminator 1))\n __kasan_slab_alloc (mm/kasan/common.c:348)\n kmem_cache_alloc_node_noprof (./include/linux/kasan.h:250 mm/slub.c:4148 mm/slub.c:4197 mm/slub.c:4249)\n __alloc_skb (net/core/skbuff.c:660 (discriminator 4))\n alloc_skb_with_frags (./include/linux/skbuff.h:1336 net/core/skbuff.c:6668)\n sock_alloc_send_pskb (net/core/sock.c:2993)\n unix_stream_sendmsg (./include/net/sock.h:1847 net/unix/af_unix.c:2256 net/unix/af_unix.c:2418)\n __sys_sendto (net/socket.c:712 (discriminator 20) net/socket.c:727 (discriminator 20) net/socket.c:2226 (discriminator 20))\n __x64_sys_sendto (net/socket.c:2233 (discriminator 1) net/socket.c:2229 (discriminator 1) net/socket.c:2229 (discriminator 1))\n do_syscall_64 (arch/x86/entry/syscall_64.c:63 (discriminator 1) arch/x86/entry/syscall_64.c:94 (discriminator 1))\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nFreed by task 315:\n kasan_save_stack (mm/kasan/common.c:48)\n kasan_save_track (mm/kasan/common.c:60 (discriminator 1) mm/kasan/common.c:69 (discriminator 1))\n kasan_save_free_info (mm/kasan/generic.c:579 (discriminator 1))\n __kasan_slab_free (mm/kasan/common.c:271)\n kmem_cache_free (mm/slub.c:4643 (discriminator 3) mm/slub.c:4745 (discriminator 3))\n unix_stream_read_generic (net/unix/af_unix.c:3010)\n unix_stream_recvmsg (net/unix/af_unix.c:3048)\n sock_recvmsg (net/socket.c:1063 (discriminator 20) net/socket.c:1085 (discriminator 20))\n __sys_recvfrom (net/socket.c:2278)\n __x64_sys_recvfrom (net/socket.c:2291 (discriminator 1) net/socket.c:2287 (discriminator 1) net/socket.c:2287 (discriminator 1))\n do_syscall_64 (arch/x86/entry/syscall_64.c:63 (discriminator 1) arch/x86/entry/syscall_64.c:94 (discriminator 1))\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nThe buggy address belongs to the object at ffff888106ef28c0\n which belongs to the cache skbuff_head_cache of size 224\nThe buggy address is located 68 bytes inside of\n freed 224-byte region [ffff888106ef28c0, ffff888106ef29a0)\n\nThe buggy address belongs to the physical page:\npage: refcount:0 mapcount:0 mapping:0000000000000000 index:0xffff888106ef3cc0 pfn:0x106ef2\nhead: order:1 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0\nflags: 0x200000000000040(head|node=0|zone=2)\npage_type: f5(slab)\nraw: 0200000000000040 ffff8881001d28c0 ffffea000422fe00 0000000000000004\nraw: ffff888106ef3cc0 0000000080190010 00000000f5000000 0000000000000000\nhead: 0200000000000040 ffff8881001d28c0 ffffea000422fe00 0000000000000004\nhead: ffff888106ef3cc0 0000000080190010 00000000f5000000 0000000000000000\nhead: 0200000000000001 ffffea00041bbc81 00000000ffffffff 00000000ffffffff\nhead: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff888106ef2800: 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc\n ffff888106ef2880: fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb\n>ffff888106ef2900: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                   ^\n ffff888106ef2980: fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc fc\n ffff888106ef2a00: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\nFixes: 314001f0bf92 (\"af_unix: Add OOB support\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Kuniyuki Iwashima <kuniyu@google.com>\nReviewed-by: Jann Horn <jannh@google.com>\nLink: https://patch.msgid.link/20250619041457.1132791-2-kuni1840@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/32ca245464e1479bfea8592b9db227fdc1641705"
            },
            {
              "sha": "e1ca44e85f652a6ebd657c67c394894c1fdfb403",
              "author": {
                "email": "kuniyu@google.com",
                "name": "Kuniyuki Iwashima"
              },
              "message": "af_unix: Add test for consecutive consumed OOB.\n\nLet's add a test case where consecutive concumed OOB skbs stay\nat the head of the queue.\n\nWithout the previous patch, ioctl(SIOCATMARK) assertion fails.\n\nBefore:\n\n  #  RUN           msg_oob.no_peek.ex_oob_ex_oob_oob ...\n  # msg_oob.c:305:ex_oob_ex_oob_oob:Expected answ[0] (0) == oob_head (1)\n  # ex_oob_ex_oob_oob: Test terminated by assertion\n  #          FAIL  msg_oob.no_peek.ex_oob_ex_oob_oob\n  not ok 12 msg_oob.no_peek.ex_oob_ex_oob_oob\n\nAfter:\n\n  #  RUN           msg_oob.no_peek.ex_oob_ex_oob_oob ...\n  #            OK  msg_oob.no_peek.ex_oob_ex_oob_oob\n  ok 12 msg_oob.no_peek.ex_oob_ex_oob_oob\n\nSigned-off-by: Kuniyuki Iwashima <kuniyu@google.com>\nLink: https://patch.msgid.link/20250619041457.1132791-3-kuni1840@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e1ca44e85f652a6ebd657c67c394894c1fdfb403"
            },
            {
              "sha": "2a5a4841846b079b5fca5752fe94e59346fbda40",
              "author": {
                "email": "kuniyu@google.com",
                "name": "Kuniyuki Iwashima"
              },
              "message": "af_unix: Don't set -ECONNRESET for consumed OOB skb.\n\nChristian Brauner reported that even after MSG_OOB data is consumed,\ncalling close() on the receiver socket causes the peer's recv() to\nreturn -ECONNRESET:\n\n  1. send() and recv() an OOB data.\n\n    >>> from socket import *\n    >>> s1, s2 = socketpair(AF_UNIX, SOCK_STREAM)\n    >>> s1.send(b'x', MSG_OOB)\n    1\n    >>> s2.recv(1, MSG_OOB)\n    b'x'\n\n  2. close() for s2 sets ECONNRESET to s1->sk_err even though\n     s2 consumed the OOB data\n\n    >>> s2.close()\n    >>> s1.recv(10, MSG_DONTWAIT)\n    ...\n    ConnectionResetError: [Errno 104] Connection reset by peer\n\nEven after being consumed, the skb holding the OOB 1-byte data stays in\nthe recv queue to mark the OOB boundary and break recv() at that point.\n\nThis must be considered while close()ing a socket.\n\nLet's skip the leading consumed OOB skb while checking the -ECONNRESET\ncondition in unix_release_sock().\n\nFixes: 314001f0bf92 (\"af_unix: Add OOB support\")\nReported-by: Christian Brauner <brauner@kernel.org>\nCloses: https://lore.kernel.org/netdev/20250529-sinkt-abfeuern-e7b08200c6b0@brauner/\nSigned-off-by: Kuniyuki Iwashima <kuniyu@google.com>\nAcked-by: Christian Brauner <brauner@kernel.org>\nLink: https://patch.msgid.link/20250619041457.1132791-4-kuni1840@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2a5a4841846b079b5fca5752fe94e59346fbda40"
            },
            {
              "sha": "632f55fa60c481035297739ecd374d945c9b32c7",
              "author": {
                "email": "kuniyu@google.com",
                "name": "Kuniyuki Iwashima"
              },
              "message": "selftest: af_unix: Add tests for -ECONNRESET.\n\nA new function resetpair() calls close() for the receiver and checks\nthe return value from recv() on the initial sender side.\n\nNow resetpair() is added to each test case and some additional test\ncases.\n\nNote that TCP sets -ECONNRESET to the consumed OOB, but we have decided\nnot to touch TCP MSG_OOB code in the past.\n\nBefore:\n\n  #  RUN           msg_oob.no_peek.ex_oob_ex_oob ...\n  # msg_oob.c:236:ex_oob_ex_oob:AF_UNIX :Connection reset by peer\n  # msg_oob.c:237:ex_oob_ex_oob:Expected:\n  # msg_oob.c:239:ex_oob_ex_oob:Expected ret[0] (-1) == expected_len (0)\n  # ex_oob_ex_oob: Test terminated by assertion\n  #          FAIL  msg_oob.no_peek.ex_oob_ex_oob\n  not ok 14 msg_oob.no_peek.ex_oob_ex_oob\n  ...\n  # FAILED: 36 / 48 tests passed.\n  # Totals: pass:36 fail:12 xfail:0 xpass:0 skip:0 error:0\n\nAfter:\n\n  #  RUN           msg_oob.no_peek.ex_oob_ex_oob ...\n  # msg_oob.c:244:ex_oob_ex_oob:AF_UNIX :\n  # msg_oob.c:245:ex_oob_ex_oob:TCP     :Connection reset by peer\n  #            OK  msg_oob.no_peek.ex_oob_ex_oob\n  ok 14 msg_oob.no_peek.ex_oob_ex_oob\n  ...\n  # PASSED: 48 / 48 tests passed.\n  # Totals: pass:48 fail:0 xfail:0 xpass:0 skip:0 error:0\n\nSigned-off-by: Kuniyuki Iwashima <kuniyu@google.com>\nLink: https://patch.msgid.link/20250619041457.1132791-5-kuni1840@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/632f55fa60c481035297739ecd374d945c9b32c7"
            },
            {
              "sha": "c3f429388c192eeb17aafa17eb315cb01f5d2aa8",
              "author": {
                "email": "pabeni@redhat.com",
                "name": "Paolo Abeni"
              },
              "message": "Merge branch 'af_unix-fix-two-oob-issues'\n\nKuniyuki Iwashima says:\n\n====================\naf_unix: Fix two OOB issues.\n\nFrom: Kuniyuki Iwashima <kuniyu@google.com>\n\nRecently, two issues are reported regarding MSG_OOB.\n\nPatch 1 fixes issues that happen when multiple consumed OOB\nskbs are placed consecutively in the recv queue.\n\nPatch 2 fixes an inconsistent behaviour that close()ing a socket\nwith a consumed OOB skb at the head of the recv queue triggers\n-ECONNRESET on the peer's recv().\n\nv1: https://lore.kernel.org/netdev/20250618043453.281247-1-kuni1840@gmail.com/\n====================\n\nLink: https://patch.msgid.link/20250619041457.1132791-1-kuni1840@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c3f429388c192eeb17aafa17eb315cb01f5d2aa8"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-26T16:19:16Z"
      },
      {
        "id": "51301750391",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25099699510,
          "size": 2,
          "distinct_size": 2,
          "ref": "refs/heads/master",
          "head": "7595b66ae9de667bf35a8c99e8f1bfc4792e207e",
          "before": "78f4e737a53e1163ded2687a922fce138aee73f5",
          "commits": [
            {
              "sha": "fde46f60f6c5138ee422087addbc5bf5b4968bf1",
              "author": {
                "email": "stephen.smalley.work@gmail.com",
                "name": "Stephen Smalley"
              },
              "message": "selinux: change security_compute_sid to return the ssid or tsid on match\n\nIf the end result of a security_compute_sid() computation matches the\nssid or tsid, return that SID rather than looking it up again. This\navoids the problem of multiple initial SIDs that map to the same\ncontext.\n\nCc: stable@vger.kernel.org\nReported-by: Guido Trentalancia <guido@trentalancia.com>\nFixes: ae254858ce07 (\"selinux: introduce an initial SID for early boot processes\")\nSigned-off-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nTested-by: Guido Trentalancia <guido@trentalancia.com>\nSigned-off-by: Paul Moore <paul@paul-moore.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fde46f60f6c5138ee422087addbc5bf5b4968bf1"
            },
            {
              "sha": "7595b66ae9de667bf35a8c99e8f1bfc4792e207e",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'selinux-pr-20250624' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux\n\nPull selinux fix from Paul Moore:\n \"Another small SELinux patch to fix a problem seen by the dracut-ng\n  folks during early boot when SELinux is enabled, but the policy has\n  yet to be loaded\"\n\n* tag 'selinux-pr-20250624' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux:\n  selinux: change security_compute_sid to return the ssid or tsid on match",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7595b66ae9de667bf35a8c99e8f1bfc4792e207e"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-25T00:23:39Z"
      },
      {
        "id": "51254041267",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 25077212343,
          "size": 1,
          "distinct_size": 1,
          "ref": "refs/heads/main",
          "head": "0ccc69c3cdf7eaf89a1eb000e0495f78c4dd89e4",
          "before": "d255d2fd7fbc8aa92c8146fd5bb3cea3d8dfdca7",
          "commits": [
            {
              "sha": "0ccc69c3cdf7eaf89a1eb000e0495f78c4dd89e4",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "ImSquared: fix enormously stupid mistake\n\nCapacitors C1/C2 had been marked \"Exclude from board\", because they were\ncopied from a test capacitor I had in a sim-only circuit.  And I didn't\nnotice at any point that the PCB design didn't have them.\n\nNot even when populating the board.  I did notice that the components on\nthe BOM started from C3, and I just idly thought - without looking any\ncloser at it - that I had forgotten to re-annotate the circuit.\n\nSo I never gave it another thought - until none of the signal actually\nmade it to the analog multiplier unit, so the board didn't actually work\nat all.  D'oh!\n\nTrivial fix, but oh how annoying.  KiCad makes it visually clear when a\ncomponent is excluded from simulation, and when a component is marked\n\"Do not populate\".  But something marked \"Exclude from board\" is clearly\ntoo easy to miss.  I need to be more careful.\n\nI was able to bodge-wire this, with three of four endpoints of the two\nmislaid caps being through-hole (the 'IN' signal source, and two\npotentiometer pins).  For the fourth signal ('OUT1') I just soldered a\nwire to the 2.2kOhm resistor.\n\nI _hate_ soldering wire and my bodge wires weren't pretty.  But the\nalternative was \"wait a week for fixed boards to test because you're a\ndum-dum\".\n\nThe circuit does actually work and seems to behave exactly like in\nsimulation.  Lovely.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/0ccc69c3cdf7eaf89a1eb000e0495f78c4dd89e4"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-24T04:05:26Z"
      },
      {
        "id": "51246121845",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25073210579,
          "size": 42,
          "distinct_size": 42,
          "ref": "refs/heads/master",
          "head": "78f4e737a53e1163ded2687a922fce138aee73f5",
          "before": "86731a2a651e58953fc949573895f2fa6d456841",
          "commits": [
            {
              "sha": "4db7384ce55c4d7bfb9876fabd8d8778b2ff90ff",
              "author": {
                "email": "josef@toxicpanda.com",
                "name": "Josef Bacik"
              },
              "message": "btrfs: don't drop a reference if btrfs_check_write_meta_pointer() fails\n\nIn the zoned mode there's a bug in the extent buffer tree conversion to\nxarray. The reference for eb is dropped and code continues but the\nreferences get dropped by releasing the batch.\n\nReported-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>\nFixes: 19d7f65f032f (\"btrfs: convert the buffer_radix to an xarray\")\nReviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>\nTested-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>\nSigned-off-by: Josef Bacik <josef@toxicpanda.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4db7384ce55c4d7bfb9876fabd8d8778b2ff90ff"
            },
            {
              "sha": "6dea74e454c260cd757b53a2f6861fffe6d83308",
              "author": {
                "email": "willy@infradead.org",
                "name": "Matthew Wilcox (Oracle)"
              },
              "message": "f2fs: Fix __write_node_folio() conversion\n\nThis conversion moved the folio_unlock() to inside __write_node_folio(),\nbut missed one caller so we had a double-unlock on this path.\n\nCc: Christoph Hellwig <hch@lst.de>\nCc: Chao Yu <chao@kernel.org>\nCc: Jaegeuk Kim <jaegeuk@kernel.org>\nReported-by: syzbot+c0dc46208750f063d0e0@syzkaller.appspotmail.com\nFixes: 80f31d2a7e5f (f2fs: return bool from __write_node_folio)\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Chao Yu <chao@kernel.org>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6dea74e454c260cd757b53a2f6861fffe6d83308"
            },
            {
              "sha": "ba8dac350faf16afc129ce6303ca4feaf083ccb1",
              "author": {
                "email": "chao@kernel.org",
                "name": "Chao Yu"
              },
              "message": "f2fs: fix to zero post-eof page\n\nfstest reports a f2fs bug:\n\ngeneric/363 42s ... [failed, exit status 1]- output mismatch (see /share/git/fstests/results//generic/363.out.bad)\n    --- tests/generic/363.out   2025-01-12 21:57:40.271440542 +0800\n    +++ /share/git/fstests/results//generic/363.out.bad 2025-05-19 19:55:58.000000000 +0800\n    @@ -1,2 +1,78 @@\n     QA output created by 363\n     fsx -q -S 0 -e 1 -N 100000\n    +READ BAD DATA: offset = 0xd6fb, size = 0xf044, fname = /mnt/f2fs/junk\n    +OFFSET      GOOD    BAD     RANGE\n    +0x1540d     0x0000  0x2a25  0x0\n    +operation# (mod 256) for the bad data may be 37\n    +0x1540e     0x0000  0x2527  0x1\n    ...\n    (Run 'diff -u /share/git/fstests/tests/generic/363.out /share/git/fstests/results//generic/363.out.bad'  to see the entire diff)\nRan: generic/363\nFailures: generic/363\nFailed 1 of 1 tests\n\nThe root cause is user can update post-eof page via mmap [1], however, f2fs\nmissed to zero post-eof page in below operations, so, once it expands i_size,\nthen it will include dummy data locates previous post-eof page, so during\nbelow operations, we need to zero post-eof page.\n\nOperations which can include dummy data after previous i_size after expanding\ni_size:\n- write\n- mapwrite [1]\n- truncate\n- fallocate\n * preallocate\n * zero_range\n * insert_range\n * collapse_range\n- clone_range (doesn’t support in f2fs)\n- copy_range (doesn’t support in f2fs)\n\n[1] https://man7.org/linux/man-pages/man2/mmap.2.html 'BUG section'\n\nCc: stable@kernel.org\nSigned-off-by: Chao Yu <chao@kernel.org>\nReviewed-by: Zhiguo Niu <zhiguo.niu@unisoc.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ba8dac350faf16afc129ce6303ca4feaf083ccb1"
            },
            {
              "sha": "c769be2d3dbb165a3d432f4fcca2c80fabb35877",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: include root in error message when unlinking inode\n\nTo help debugging include the root number in the error message, and since\nthis is a critical error that implies a metadata inconsistency and results\nin a transaction abort change the log message level from \"info\" to\n\"critical\", which is a much better fit.\n\nReviewed-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c769be2d3dbb165a3d432f4fcca2c80fabb35877"
            },
            {
              "sha": "dd276214e439db08f444fd3e07e9fe4c9e0ca210",
              "author": {
                "email": "loemra.dev@gmail.com",
                "name": "Leo Martins"
              },
              "message": "btrfs: fix delayed ref refcount leak in debug assertion\n\nIf the delayed_root is not empty we are increasing the number of\nreferences to a delayed_node without decreasing it, causing a leak.  Fix\nby decrementing the delayed_node reference count.\n\nReviewed-by: Filipe Manana <fdmanana@suse.com>\nSigned-off-by: Leo Martins <loemra.dev@gmail.com>\nReviewed-by: Qu Wenruo <wqu@suse.com>\n[ Remove the changelog from the commit message. ]\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/dd276214e439db08f444fd3e07e9fe4c9e0ca210"
            },
            {
              "sha": "186b9dc3c302ad706b3f23c857eb128165f6b484",
              "author": {
                "email": "loemra.dev@gmail.com",
                "name": "Leo Martins"
              },
              "message": "btrfs: warn if leaking delayed_nodes in btrfs_put_root()\n\nAdd a warning for leaked delayed_nodes when putting a root. We currently\ndo this for inodes, but not delayed_nodes.\n\nSigned-off-by: Leo Martins <loemra.dev@gmail.com>\nReviewed-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: Qu Wenruo <wqu@suse.com>\n[ Remove the changelog from the commit message. ]\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/186b9dc3c302ad706b3f23c857eb128165f6b484"
            },
            {
              "sha": "65d5112b4d7cf019ccb62cf40077038aae66239b",
              "author": {
                "email": "anand.jain@oracle.com",
                "name": "Anand Jain"
              },
              "message": "btrfs: scrub: add prefix for the error messages\n\nAdd a \"scrub: \" prefix to all messages logged by scrub so that it's\neasy to filter them from dmesg for analysis.\n\nReviewed-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: Anand Jain <anand.jain@oracle.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/65d5112b4d7cf019ccb62cf40077038aae66239b"
            },
            {
              "sha": "3ca864de852bc91007b32d2a0d48993724f4abad",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: fix a race between renames and directory logging\n\nWe have a race between a rename and directory inode logging that if it\nhappens and we crash/power fail before the rename completes, the next time\nthe filesystem is mounted, the log replay code will end up deleting the\nfile that was being renamed.\n\nThis is best explained following a step by step analysis of an interleaving\nof steps that lead into this situation.\n\nConsider the initial conditions:\n\n1) We are at transaction N;\n\n2) We have directories A and B created in a past transaction (< N);\n\n3) We have inode X corresponding to a file that has 2 hardlinks, one in\n   directory A and the other in directory B, so we'll name them as\n   \"A/foo_link1\" and \"B/foo_link2\". Both hard links were persisted in a\n   past transaction (< N);\n\n4) We have inode Y corresponding to a file that as a single hard link and\n   is located in directory A, we'll name it as \"A/bar\". This file was also\n   persisted in a past transaction (< N).\n\nThe steps leading to a file loss are the following and for all of them we\nare under transaction N:\n\n 1) Link \"A/foo_link1\" is removed, so inode's X last_unlink_trans field\n    is updated to N, through btrfs_unlink() -> btrfs_record_unlink_dir();\n\n 2) Task A starts a rename for inode Y, with the goal of renaming from\n    \"A/bar\" to \"A/baz\", so we enter btrfs_rename();\n\n 3) Task A inserts the new BTRFS_INODE_REF_KEY for inode Y by calling\n    btrfs_insert_inode_ref();\n\n 4) Because the rename happens in the same directory, we don't set the\n    last_unlink_trans field of directoty A's inode to the current\n    transaction id, that is, we don't cal btrfs_record_unlink_dir();\n\n 5) Task A then removes the entries from directory A (BTRFS_DIR_ITEM_KEY\n    and BTRFS_DIR_INDEX_KEY items) when calling __btrfs_unlink_inode()\n    (actually the dir index item is added as a delayed item, but the\n    effect is the same);\n\n 6) Now before task A adds the new entry \"A/baz\" to directory A by\n    calling btrfs_add_link(), another task, task B is logging inode X;\n\n 7) Task B starts a fsync of inode X and after logging inode X, at\n    btrfs_log_inode_parent() it calls btrfs_log_all_parents(), since\n    inode X has a last_unlink_trans value of N, set at in step 1;\n\n 8) At btrfs_log_all_parents() we search for all parent directories of\n    inode X using the commit root, so we find directories A and B and log\n    them. Bu when logging direct A, we don't have a dir index item for\n    inode Y anymore, neither the old name \"A/bar\" nor for the new name\n    \"A/baz\" since the rename has deleted the old name but has not yet\n    inserted the new name - task A hasn't called yet btrfs_add_link() to\n    do that.\n\n    Note that logging directory A doesn't fallback to a transaction\n    commit because its last_unlink_trans has a lower value than the\n    current transaction's id (see step 4);\n\n 9) Task B finishes logging directories A and B and gets back to\n    btrfs_sync_file() where it calls btrfs_sync_log() to persist the log\n    tree;\n\n10) Task B successfully persisted the log tree, btrfs_sync_log() completed\n    with success, and a power failure happened.\n\n    We have a log tree without any directory entry for inode Y, so the\n    log replay code deletes the entry for inode Y, name \"A/bar\", from the\n    subvolume tree since it doesn't exist in the log tree and the log\n    tree is authorative for its index (we logged a BTRFS_DIR_LOG_INDEX_KEY\n    item that covers the index range for the dentry that corresponds to\n    \"A/bar\").\n\n    Since there's no other hard link for inode Y and the log replay code\n    deletes the name \"A/bar\", the file is lost.\n\nThe issue wouldn't happen if task B synced the log only after task A\ncalled btrfs_log_new_name(), which would update the log with the new name\nfor inode Y (\"A/bar\").\n\nFix this by pinning the log root during renames before removing the old\ndirectory entry, and unpinning after btrfs_log_new_name() is called.\n\nFixes: 259c4b96d78d (\"btrfs: stop doing unnecessary log updates during a rename\")\nCC: stable@vger.kernel.org # 5.18+\nReviewed-by: Boris Burkov <boris@bur.io>\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3ca864de852bc91007b32d2a0d48993724f4abad"
            },
            {
              "sha": "ae4477f937569d097ca5dbce92a89ba384b49bc6",
              "author": {
                "email": "maharmstone@fb.com",
                "name": "Mark Harmstone"
              },
              "message": "btrfs: update superblock's device bytes_used when dropping chunk\n\nEach superblock contains a copy of the device item for that device. In a\ntransaction which drops a chunk but doesn't create any new ones, we were\ncorrectly updating the device item in the chunk tree but not copying\nover the new bytes_used value to the superblock.\n\nThis can be seen by doing the following:\n\n  # dd if=/dev/zero of=test bs=4096 count=2621440\n  # mkfs.btrfs test\n  # mount test /root/temp\n\n  # cd /root/temp\n  # for i in {00..10}; do dd if=/dev/zero of=$i bs=4096 count=32768; done\n  # sync\n  # rm *\n  # sync\n  # btrfs balance start -dusage=0 .\n  # sync\n\n  # cd\n  # umount /root/temp\n  # btrfs check test\n\nFor btrfs-check to detect this, you will also need my patch at\nhttps://github.com/kdave/btrfs-progs/pull/991.\n\nChange btrfs_remove_dev_extents() so that it adds the devices to the\nfs_info->post_commit_list if they're not there already. This causes\nbtrfs_commit_device_sizes() to be called, which updates the bytes_used\nvalue in the superblock.\n\nFixes: bbbf7243d62d (\"btrfs: combine device update operations during transaction commit\")\nCC: stable@vger.kernel.org # 5.10+\nReviewed-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: Mark Harmstone <maharmstone@fb.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ae4477f937569d097ca5dbce92a89ba384b49bc6"
            },
            {
              "sha": "e5b5596011773a38e035e9633ed928ef13c720b1",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: fix double unlock of buffer_tree xarray when releasing subpage eb\n\nIf we break out of the loop because an extent buffer doesn't have the bit\nEXTENT_BUFFER_TREE_REF set, we end up unlocking the xarray twice, once\nbefore we tested for the bit and break out of the loop, and once again\nafter the loop.\n\nFix this by testing the bit and exiting before unlocking the xarray.\nThe time spent testing the bit is negligible and it's not worth trying\nto do that outside the critical section delimited by the xarray lock due\nto the code complexity required to avoid it (like using a local boolean\nvariable to track whether the xarray is locked or not). The xarray unlock\nonly needs to be done before calling release_extent_buffer(), as that\nneeds to lock the xarray (through xa_cmpxchg_irq()) and does a more\nsignificant amount of work.\n\nFixes: 19d7f65f032f (\"btrfs: convert the buffer_radix to an xarray\")\nReported-by: Dan Carpenter <dan.carpenter@linaro.org>\nLink: https://lore.kernel.org/linux-btrfs/aDRNDU0GM1_D4Xnw@stanley.mountain/\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e5b5596011773a38e035e9633ed928ef13c720b1"
            },
            {
              "sha": "2dcf838cf5c2f0f4501edaa1680fcad03618d760",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: fix invalid inode pointer dereferences during log replay\n\nIn a few places where we call read_one_inode(), if we get a NULL pointer\nwe end up jumping into an error path, or fallthrough in case of\n__add_inode_ref(), where we then do something like this:\n\n   iput(&inode->vfs_inode);\n\nwhich results in an invalid inode pointer that triggers an invalid memory\naccess, resulting in a crash.\n\nFix this by making sure we don't do such dereferences.\n\nFixes: b4c50cbb01a1 (\"btrfs: return a btrfs_inode from read_one_inode()\")\nCC: stable@vger.kernel.org # 6.15+\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2dcf838cf5c2f0f4501edaa1680fcad03618d760"
            },
            {
              "sha": "16edae52f60658caeaa0702e7cb6b738a09d4ad4",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: don't silently ignore unexpected extent type when replaying log\n\nIf there's an unexpected (invalid) extent type, we just silently ignore\nit. This means a corruption or some bug somewhere, so instead return\n-EUCLEAN to the caller, making log replay fail, and print an error message\nwith relevant information.\n\nReviewed-by: Boris Burkov <boris@bur.io>\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/16edae52f60658caeaa0702e7cb6b738a09d4ad4"
            },
            {
              "sha": "1961d20f6fa8903266ed9bd77c691924c22c8f02",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: fix assertion when building free space tree\n\nWhen building the free space tree with the block group tree feature\nenabled, we can hit an assertion failure like this:\n\n  BTRFS info (device loop0 state M): rebuilding free space tree\n  assertion failed: ret == 0, in fs/btrfs/free-space-tree.c:1102\n  ------------[ cut here ]------------\n  kernel BUG at fs/btrfs/free-space-tree.c:1102!\n  Internal error: Oops - BUG: 00000000f2000800 [#1]  SMP\n  Modules linked in:\n  CPU: 1 UID: 0 PID: 6592 Comm: syz-executor322 Not tainted 6.15.0-rc7-syzkaller-gd7fa1af5b33e #0 PREEMPT\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\n  pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : populate_free_space_tree+0x514/0x518 fs/btrfs/free-space-tree.c:1102\n  lr : populate_free_space_tree+0x514/0x518 fs/btrfs/free-space-tree.c:1102\n  sp : ffff8000a4ce7600\n  x29: ffff8000a4ce76e0 x28: ffff0000c9bc6000 x27: ffff0000ddfff3d8\n  x26: ffff0000ddfff378 x25: dfff800000000000 x24: 0000000000000001\n  x23: ffff8000a4ce7660 x22: ffff70001499cecc x21: ffff0000e1d8c160\n  x20: ffff0000e1cb7800 x19: ffff0000e1d8c0b0 x18: 00000000ffffffff\n  x17: ffff800092f39000 x16: ffff80008ad27e48 x15: ffff700011e740c0\n  x14: 1ffff00011e740c0 x13: 0000000000000004 x12: ffffffffffffffff\n  x11: ffff700011e740c0 x10: 0000000000ff0100 x9 : 94ef24f55d2dbc00\n  x8 : 94ef24f55d2dbc00 x7 : 0000000000000001 x6 : 0000000000000001\n  x5 : ffff8000a4ce6f98 x4 : ffff80008f415ba0 x3 : ffff800080548ef0\n  x2 : 0000000000000000 x1 : 0000000100000000 x0 : 000000000000003e\n  Call trace:\n   populate_free_space_tree+0x514/0x518 fs/btrfs/free-space-tree.c:1102 (P)\n   btrfs_rebuild_free_space_tree+0x14c/0x54c fs/btrfs/free-space-tree.c:1337\n   btrfs_start_pre_rw_mount+0xa78/0xe10 fs/btrfs/disk-io.c:3074\n   btrfs_remount_rw fs/btrfs/super.c:1319 [inline]\n   btrfs_reconfigure+0x828/0x2418 fs/btrfs/super.c:1543\n   reconfigure_super+0x1d4/0x6f0 fs/super.c:1083\n   do_remount fs/namespace.c:3365 [inline]\n   path_mount+0xb34/0xde0 fs/namespace.c:4200\n   do_mount fs/namespace.c:4221 [inline]\n   __do_sys_mount fs/namespace.c:4432 [inline]\n   __se_sys_mount fs/namespace.c:4409 [inline]\n   __arm64_sys_mount+0x3e8/0x468 fs/namespace.c:4409\n   __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]\n   invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49\n   el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132\n   do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151\n   el0_svc+0x58/0x17c arch/arm64/kernel/entry-common.c:767\n   el0t_64_sync_handler+0x78/0x108 arch/arm64/kernel/entry-common.c:786\n   el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:600\n  Code: f0047182 91178042 528089c3 9771d47b (d4210000)\n  ---[ end trace 0000000000000000 ]---\n\nThis happens because we are processing an empty block group, which has\nno extents allocated from it, there are no items for this block group,\nincluding the block group item since block group items are stored in a\ndedicated tree when using the block group tree feature. It also means\nthis is the block group with the highest start offset, so there are no\nhigher keys in the extent root, hence btrfs_search_slot_for_read()\nreturns 1 (no higher key found).\n\nFix this by asserting 'ret' is 0 only if the block group tree feature\nis not enabled, in which case we should find a block group item for\nthe block group since it's stored in the extent root and block group\nitem keys are greater than extent item keys (the value for\nBTRFS_BLOCK_GROUP_ITEM_KEY is 192 and for BTRFS_EXTENT_ITEM_KEY and\nBTRFS_METADATA_ITEM_KEY the values are 168 and 169 respectively).\nIn case 'ret' is 1, we just need to add a record to the free space\ntree which spans the whole block group, and we can achieve this by\nmaking 'ret == 0' as the while loop's condition.\n\nReported-by: syzbot+36fae25c35159a763a2a@syzkaller.appspotmail.com\nLink: https://lore.kernel.org/linux-btrfs/6841dca8.a00a0220.d4325.0020.GAE@google.com/\nReviewed-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1961d20f6fa8903266ed9bd77c691924c22c8f02"
            },
            {
              "sha": "a26bf338cdad3643a6e7c3d78a172baadba15c1a",
              "author": {
                "email": "fdmanana@suse.com",
                "name": "Filipe Manana"
              },
              "message": "btrfs: fix race between async reclaim worker and close_ctree()\n\nSyzbot reported an assertion failure due to an attempt to add a delayed\niput after we have set BTRFS_FS_STATE_NO_DELAYED_IPUT in the fs_info\nstate:\n\n  WARNING: CPU: 0 PID: 65 at fs/btrfs/inode.c:3420 btrfs_add_delayed_iput+0x2f8/0x370 fs/btrfs/inode.c:3420\n  Modules linked in:\n  CPU: 0 UID: 0 PID: 65 Comm: kworker/u8:4 Not tainted 6.15.0-next-20250530-syzkaller #0 PREEMPT(full)\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\n  Workqueue: btrfs-endio-write btrfs_work_helper\n  RIP: 0010:btrfs_add_delayed_iput+0x2f8/0x370 fs/btrfs/inode.c:3420\n  Code: 4e ad 5d (...)\n  RSP: 0018:ffffc9000213f780 EFLAGS: 00010293\n  RAX: ffffffff83c635b7 RBX: ffff888058920000 RCX: ffff88801c769e00\n  RDX: 0000000000000000 RSI: 0000000000000100 RDI: 0000000000000000\n  RBP: 0000000000000001 R08: ffff888058921b67 R09: 1ffff1100b12436c\n  R10: dffffc0000000000 R11: ffffed100b12436d R12: 0000000000000001\n  R13: dffffc0000000000 R14: ffff88807d748000 R15: 0000000000000100\n  FS:  0000000000000000(0000) GS:ffff888125c53000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00002000000bd038 CR3: 000000006a142000 CR4: 00000000003526f0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   <TASK>\n   btrfs_put_ordered_extent+0x19f/0x470 fs/btrfs/ordered-data.c:635\n   btrfs_finish_one_ordered+0x11d8/0x1b10 fs/btrfs/inode.c:3312\n   btrfs_work_helper+0x399/0xc20 fs/btrfs/async-thread.c:312\n   process_one_work kernel/workqueue.c:3238 [inline]\n   process_scheduled_works+0xae1/0x17b0 kernel/workqueue.c:3321\n   worker_thread+0x8a0/0xda0 kernel/workqueue.c:3402\n   kthread+0x70e/0x8a0 kernel/kthread.c:464\n   ret_from_fork+0x3fc/0x770 arch/x86/kernel/process.c:148\n   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245\n   </TASK>\n\nThis can happen due to a race with the async reclaim worker like this:\n\n1) The async metadata reclaim worker enters shrink_delalloc(), which calls\n   btrfs_start_delalloc_roots() with an nr_pages argument that has a value\n   less than LONG_MAX, and that in turn enters start_delalloc_inodes(),\n   which sets the local variable 'full_flush' to false because\n   wbc->nr_to_write is less than LONG_MAX;\n\n2) There it finds inode X in a root's delalloc list, grabs a reference for\n   inode X (with igrab()), and triggers writeback for it with\n   filemap_fdatawrite_wbc(), which creates an ordered extent for inode X;\n\n3) The unmount sequence starts from another task, we enter close_ctree()\n   and we flush the workqueue fs_info->endio_write_workers, which waits\n   for the ordered extent for inode X to complete and when dropping the\n   last reference of the ordered extent, with btrfs_put_ordered_extent(),\n   when we call btrfs_add_delayed_iput() we don't add the inode to the\n   list of delayed iputs because it has a refcount of 2, so we decrement\n   it to 1 and return;\n\n4) Shortly after at close_ctree() we call btrfs_run_delayed_iputs() which\n   runs all delayed iputs, and then we set BTRFS_FS_STATE_NO_DELAYED_IPUT\n   in the fs_info state;\n\n5) The async reclaim worker, after calling filemap_fdatawrite_wbc(), now\n   calls btrfs_add_delayed_iput() for inode X and there we trigger an\n   assertion failure since the fs_info state has the flag\n   BTRFS_FS_STATE_NO_DELAYED_IPUT set.\n\nFix this by setting BTRFS_FS_STATE_NO_DELAYED_IPUT only after we wait for\nthe async reclaim workers to finish, after we call cancel_work_sync() for\nthem at close_ctree(), and by running delayed iputs after wait for the\nreclaim workers to finish and before setting the bit.\n\nThis race was recently introduced by commit 19e60b2a95f5 (\"btrfs: add\nextra warning if delayed iput is added when it's not allowed\"). Without\nthe new validation at btrfs_add_delayed_iput(), this described scenario\nwas safe because close_ctree() later calls btrfs_commit_super(). That\nwill run any final delayed iputs added by reclaim workers in the window\nbetween the btrfs_run_delayed_iputs() and the the reclaim workers being\nshut down.\n\nReported-by: syzbot+0ed30ad435bf6f5b7a42@syzkaller.appspotmail.com\nLink: https://lore.kernel.org/linux-btrfs/6840481c.a00a0220.d4325.000c.GAE@google.com/T/#u\nFixes: 19e60b2a95f5 (\"btrfs: add extra warning if delayed iput is added when it's not allowed\")\nReviewed-by: Boris Burkov <boris@bur.io>\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a26bf338cdad3643a6e7c3d78a172baadba15c1a"
            },
            {
              "sha": "547e836661554dcfa15c212a3821664e85b4191a",
              "author": {
                "email": "wqu@suse.com",
                "name": "Qu Wenruo"
              },
              "message": "btrfs: handle csum tree error with rescue=ibadroots correctly\n\n[BUG]\nThere is syzbot based reproducer that can crash the kernel, with the\nfollowing call trace: (With some debug output added)\n\n DEBUG: rescue=ibadroots parsed\n BTRFS: device fsid 14d642db-7b15-43e4-81e6-4b8fac6a25f8 devid 1 transid 8 /dev/loop0 (7:0) scanned by repro (1010)\n BTRFS info (device loop0): first mount of filesystem 14d642db-7b15-43e4-81e6-4b8fac6a25f8\n BTRFS info (device loop0): using blake2b (blake2b-256-generic) checksum algorithm\n BTRFS info (device loop0): using free-space-tree\n BTRFS warning (device loop0): checksum verify failed on logical 5312512 mirror 1 wanted 0xb043382657aede36608fd3386d6b001692ff406164733d94e2d9a180412c6003 found 0x810ceb2bacb7f0f9eb2bf3b2b15c02af867cb35ad450898169f3b1f0bd818651 level 0\n DEBUG: read tree root path failed for tree csum, ret=-5\n BTRFS warning (device loop0): checksum verify failed on logical 5328896 mirror 1 wanted 0x51be4e8b303da58e6340226815b70e3a93592dac3f30dd510c7517454de8567a found 0x51be4e8b303da58e634022a315b70e3a93592dac3f30dd510c7517454de8567a level 0\n BTRFS warning (device loop0): checksum verify failed on logical 5292032 mirror 1 wanted 0x1924ccd683be9efc2fa98582ef58760e3848e9043db8649ee382681e220cdee4 found 0x0cb6184f6e8799d9f8cb335dccd1d1832da1071d12290dab3b85b587ecacca6e level 0\n process 'repro' launched './file2' with NULL argv: empty string added\n DEBUG: no csum root, idatacsums=0 ibadroots=134217728\n Oops: general protection fault, probably for non-canonical address 0xdffffc0000000041: 0000 [#1] SMP KASAN NOPTI\n KASAN: null-ptr-deref in range [0x0000000000000208-0x000000000000020f]\n CPU: 5 UID: 0 PID: 1010 Comm: repro Tainted: G           OE       6.15.0-custom+ #249 PREEMPT(full)\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n RIP: 0010:btrfs_lookup_csum+0x93/0x3d0 [btrfs]\n Call Trace:\n  <TASK>\n  btrfs_lookup_bio_sums+0x47a/0xdf0 [btrfs]\n  btrfs_submit_bbio+0x43e/0x1a80 [btrfs]\n  submit_one_bio+0xde/0x160 [btrfs]\n  btrfs_readahead+0x498/0x6a0 [btrfs]\n  read_pages+0x1c3/0xb20\n  page_cache_ra_order+0x4b5/0xc20\n  filemap_get_pages+0x2d3/0x19e0\n  filemap_read+0x314/0xde0\n  __kernel_read+0x35b/0x900\n  bprm_execve+0x62e/0x1140\n  do_execveat_common.isra.0+0x3fc/0x520\n  __x64_sys_execveat+0xdc/0x130\n  do_syscall_64+0x54/0x1d0\n  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n ---[ end trace 0000000000000000 ]---\n\n[CAUSE]\nFirstly the fs has a corrupted csum tree root, thus to mount the fs we\nhave to go \"ro,rescue=ibadroots\" mount option.\n\nNormally with that mount option, a bad csum tree root should set\nBTRFS_FS_STATE_NO_DATA_CSUMS flag, so that any future data read will\nignore csum search.\n\nBut in this particular case, we have the following call trace that\ncaused NULL csum root, but not setting BTRFS_FS_STATE_NO_DATA_CSUMS:\n\nload_global_roots_objectid():\n\n\t\tret = btrfs_search_slot();\n\t\t/* Succeeded */\n\t\tbtrfs_item_key_to_cpu()\n\t\tfound = true;\n\t\t/* We found the root item for csum tree. */\n\t\troot = read_tree_root_path();\n\t\tif (IS_ERR(root)) {\n\t\t\tif (!btrfs_test_opt(fs_info, IGNOREBADROOTS))\n\t\t\t/*\n\t\t\t * Since we have rescue=ibadroots mount option,\n\t\t\t * @ret is still 0.\n\t\t\t */\n\t\t\tbreak;\n\tif (!found || ret) {\n\t\t/* @found is true, @ret is 0, error handling for csum\n\t\t * tree is skipped.\n\t\t */\n\t}\n\nThis means we completely skipped to set BTRFS_FS_STATE_NO_DATA_CSUMS if\nthe csum tree is corrupted, which results unexpected later csum lookup.\n\n[FIX]\nIf read_tree_root_path() failed, always populate @ret to the error\nnumber.\n\nAs at the end of the function, we need @ret to determine if we need to\ndo the extra error handling for csum tree.\n\nFixes: abed4aaae4f7 (\"btrfs: track the csum, extent, and free space trees in a rb tree\")\nReported-by: Zhiyu Zhang <zhiyuzhang999@gmail.com>\nReported-by: Longxing Li <coregee2000@gmail.com>\nReviewed-by: David Sterba <dsterba@suse.com>\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/547e836661554dcfa15c212a3821664e85b4191a"
            },
            {
              "sha": "c0d90a79e8e65b89037508276b2b31f41a1b3783",
              "author": {
                "email": "johannes.thumshirn@wdc.com",
                "name": "Johannes Thumshirn"
              },
              "message": "btrfs: zoned: fix alloc_offset calculation for partly conventional block groups\n\nWhen one of two zones composing a DUP block group is a conventional zone,\nwe have the zone_info[i]->alloc_offset = WP_CONVENTIONAL. That will, of\ncourse, not match the write pointer of the other zone, and fails that\nblock group.\n\nThis commit solves that issue by properly recovering the emulated write\npointer from the last allocated extent. The offset for the SINGLE, DUP,\nand RAID1 are straight-forward: it is same as the end of last allocated\nextent. The RAID0 and RAID10 are a bit tricky that we need to do the math\nof striping.\n\nThis is the kernel equivalent of Naohiro's user-space commit:\n\"btrfs-progs: zoned: fix alloc_offset calculation for partly\nconventional block groups\".\n\nReviewed-by: Naohiro Aota <naohiro.aota@wdc.com>\nSigned-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c0d90a79e8e65b89037508276b2b31f41a1b3783"
            },
            {
              "sha": "a05dd8ae5cbb1cb45f349922cfea4f548a5e5d6f",
              "author": {
                "email": "kasong@tencent.com",
                "name": "Kairui Song"
              },
              "message": "mm/shmem, swap: fix softlockup with mTHP swapin\n\nFollowing softlockup can be easily reproduced on my test machine with:\n\necho always > /sys/kernel/mm/transparent_hugepage/hugepages-64kB/enabled\nswapon /dev/zram0 # zram0 is a 48G swap device\nmkdir -p /sys/fs/cgroup/memory/test\necho 1G > /sys/fs/cgroup/test/memory.max\necho $BASHPID > /sys/fs/cgroup/test/cgroup.procs\nwhile true; do\n    dd if=/dev/zero of=/tmp/test.img bs=1M count=5120\n    cat /tmp/test.img > /dev/null\n    rm /tmp/test.img\ndone\n\nThen after a while:\nwatchdog: BUG: soft lockup - CPU#0 stuck for 763s! [cat:5787]\nModules linked in: zram virtiofs\nCPU: 0 UID: 0 PID: 5787 Comm: cat Kdump: loaded Tainted: G             L      6.15.0.orig-gf3021d9246bc-dirty #118 PREEMPT(voluntary)·\nTainted: [L]=SOFTLOCKUP\nHardware name: Red Hat KVM/RHEL-AV, BIOS 0.0.0 02/06/2015\nRIP: 0010:mpol_shared_policy_lookup+0xd/0x70\nCode: e9 b8 b4 ff ff 31 c0 c3 cc cc cc cc 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 41 54 55 53 <48> 8b 1f 48 85 db 74 41 4c 8d 67 08 48 89 fb 48 89 f5 4c 89 e7 e8\nRSP: 0018:ffffc90002b1fc28 EFLAGS: 00000202\nRAX: 00000000001c20ca RBX: 0000000000724e1e RCX: 0000000000000001\nRDX: ffff888118e214c8 RSI: 0000000000057d42 RDI: ffff888118e21518\nRBP: 000000000002bec8 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000bf4 R11: 0000000000000000 R12: 0000000000000001\nR13: 00000000001c20ca R14: 00000000001c20ca R15: 0000000000000000\nFS:  00007f03f995c740(0000) GS:ffff88a07ad9a000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f03f98f1000 CR3: 0000000144626004 CR4: 0000000000770eb0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <TASK>\n shmem_alloc_folio+0x31/0xc0\n shmem_swapin_folio+0x309/0xcf0\n ? filemap_get_entry+0x117/0x1e0\n ? xas_load+0xd/0xb0\n ? filemap_get_entry+0x101/0x1e0\n shmem_get_folio_gfp+0x2ed/0x5b0\n shmem_file_read_iter+0x7f/0x2e0\n vfs_read+0x252/0x330\n ksys_read+0x68/0xf0\n do_syscall_64+0x4c/0x1c0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\nRIP: 0033:0x7f03f9a46991\nCode: 00 48 8b 15 81 14 10 00 f7 d8 64 89 02 b8 ff ff ff ff eb bd e8 20 ad 01 00 f3 0f 1e fa 80 3d 35 97 10 00 00 74 13 31 c0 0f 05 <48> 3d 00 f0 ff ff 77 4f c3 66 0f 1f 44 00 00 55 48 89 e5 48 83 ec\nRSP: 002b:00007fff3c52bd28 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\nRAX: ffffffffffffffda RBX: 0000000000040000 RCX: 00007f03f9a46991\nRDX: 0000000000040000 RSI: 00007f03f98ba000 RDI: 0000000000000003\nRBP: 00007fff3c52bd50 R08: 0000000000000000 R09: 00007f03f9b9a380\nR10: 0000000000000022 R11: 0000000000000246 R12: 0000000000040000\nR13: 00007f03f98ba000 R14: 0000000000000003 R15: 0000000000000000\n </TASK>\n\nThe reason is simple, readahead brought some order 0 folio in swap cache,\nand the swapin mTHP folio being allocated is in conflict with it, so\nswapcache_prepare fails and causes shmem_swap_alloc_folio to return\n-EEXIST, and shmem simply retries again and again causing this loop.\n\nFix it by applying a similar fix for anon mTHP swapin.\n\nThe performance change is very slight, time of swapin 10g zero folios\nwith shmem (test for 12 times):\nBefore:  2.47s\nAfter:   2.48s\n\n[kasong@tencent.com: add comment]\n  Link: https://lkml.kernel.org/r/20250610181645.45922-1-ryncsn@gmail.com\nLink: https://lkml.kernel.org/r/20250610181645.45922-1-ryncsn@gmail.com\nLink: https://lkml.kernel.org/r/20250609171751.36305-1-ryncsn@gmail.com\nFixes: 1dd44c0af4fa (\"mm: shmem: skip swapcache for swapin of synchronous swap device\")\nSigned-off-by: Kairui Song <kasong@tencent.com>\nReviewed-by: Barry Song <baohua@kernel.org>\nAcked-by: Nhat Pham <nphamcs@gmail.com>\nReviewed-by: Baolin Wang <baolin.wang@linux.alibaba.com>\nCc: Baoquan He <bhe@redhat.com>\nCc: Chris Li <chrisl@kernel.org>\nCc: Hugh Dickins <hughd@google.com>\nCc: Kemeng Shi <shikemeng@huaweicloud.com>\nCc: Usama Arif <usamaarif642@gmail.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a05dd8ae5cbb1cb45f349922cfea4f548a5e5d6f"
            },
            {
              "sha": "965f87700adbcc6d72430f524d88135027f5bba3",
              "author": {
                "email": "shivankg@amd.com",
                "name": "Shivank Garg"
              },
              "message": "selftests/mm: increase timeout from 180 to 900 seconds\n\nThe mm selftests are timing out with the current 180-second limit.\nTesting shows that run_vmtests.sh takes approximately 11 minutes\n(664 seconds) to complete.\n\nIncrease the timeout to 900 seconds (15 minutes) to provide sufficient\nbuffer for the tests to complete successfully.\n\nLink: https://lkml.kernel.org/r/20250609120606.73145-2-shivankg@amd.com\nSigned-off-by: Shivank Garg <shivankg@amd.com>\nCc: Shuah Khan <shuah@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/965f87700adbcc6d72430f524d88135027f5bba3"
            },
            {
              "sha": "517f496e1e61bd169d585dab4dd77e7147506322",
              "author": {
                "email": "david@redhat.com",
                "name": "David Hildenbrand"
              },
              "message": "mm/gup: revert \"mm: gup: fix infinite loop within __get_longterm_locked\"\n\nAfter commit 1aaf8c122918 (\"mm: gup: fix infinite loop within\n__get_longterm_locked\") we are able to longterm pin folios that are not\nsupposed to get longterm pinned, simply because they temporarily have the\nLRU flag cleared (esp.  temporarily isolated).\n\nFor example, two __get_longterm_locked() callers can race, or\n__get_longterm_locked() can race with anything else that temporarily\nisolates folios.\n\nThe introducing commit mentions the use case of a driver that uses\nvm_ops->fault to insert pages allocated through cma_alloc() into the page\ntables, assuming they can later get longterm pinned.  These pages/ folios\nwould never have the LRU flag set and consequently cannot get isolated. \nThere is no known in-tree user making use of that so far, fortunately.\n\nTo handle that in the future -- and avoid retrying forever to\nisolate/migrate them -- we will need a different mechanism for the CMA\narea *owner* to indicate that it actually already allocated the page and\nis fine with longterm pinning it.  The LRU flag is not suitable for that.\n\nProbably we can lookup the relevant CMA area and query the bitmap; we only\nhave have to care about some races, probably.  If already allocated, we\ncould just allow longterm pinning)\n\nAnyhow, let's fix the \"must not be longterm pinned\" problem first by\nreverting the original commit.\n\nLink: https://lkml.kernel.org/r/20250611131314.594529-1-david@redhat.com\nFixes: 1aaf8c122918 (\"mm: gup: fix infinite loop within __get_longterm_locked\")\nSigned-off-by: David Hildenbrand <david@redhat.com>\nCloses: https://lore.kernel.org/all/20250522092755.GA3277597@tiffany/\nReported-by: Hyesoo Yu <hyesoo.yu@samsung.com>\nReviewed-by: John Hubbard <jhubbard@nvidia.com>\nCc: Jason Gunthorpe <jgg@ziepe.ca>\nCc: Peter Xu <peterx@redhat.com>\nCc: Zhaoyang Huang <zhaoyang.huang@unisoc.com>\nCc: Aijun Sun <aijun.sun@unisoc.com>\nCc: Alistair Popple <apopple@nvidia.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/517f496e1e61bd169d585dab4dd77e7147506322"
            },
            {
              "sha": "0ea148a799198518d8ebab63ddd0bb6114a103bc",
              "author": {
                "email": "kasong@tencent.com",
                "name": "Kairui Song"
              },
              "message": "mm: userfaultfd: fix race of userfaultfd_move and swap cache\n\nThis commit fixes two kinds of races, they may have different results:\n\nBarry reported a BUG_ON in commit c50f8e6053b0, we may see the same\nBUG_ON if the filemap lookup returned NULL and folio is added to swap\ncache after that.\n\nIf another kind of race is triggered (folio changed after lookup) we\nmay see RSS counter is corrupted:\n\n[  406.893936] BUG: Bad rss-counter state mm:ffff0000c5a9ddc0\ntype:MM_ANONPAGES val:-1\n[  406.894071] BUG: Bad rss-counter state mm:ffff0000c5a9ddc0\ntype:MM_SHMEMPAGES val:1\n\nBecause the folio is being accounted to the wrong VMA.\n\nI'm not sure if there will be any data corruption though, seems no. \nThe issues above are critical already.\n\n\nOn seeing a swap entry PTE, userfaultfd_move does a lockless swap cache\nlookup, and tries to move the found folio to the faulting vma.  Currently,\nit relies on checking the PTE value to ensure that the moved folio still\nbelongs to the src swap entry and that no new folio has been added to the\nswap cache, which turns out to be unreliable.\n\nWhile working and reviewing the swap table series with Barry, following\nexisting races are observed and reproduced [1]:\n\nIn the example below, move_pages_pte is moving src_pte to dst_pte, where\nsrc_pte is a swap entry PTE holding swap entry S1, and S1 is not in the\nswap cache:\n\nCPU1                               CPU2\nuserfaultfd_move\n  move_pages_pte()\n    entry = pte_to_swp_entry(orig_src_pte);\n    // Here it got entry = S1\n    ... < interrupted> ...\n                                   <swapin src_pte, alloc and use folio A>\n                                   // folio A is a new allocated folio\n                                   // and get installed into src_pte\n                                   <frees swap entry S1>\n                                   // src_pte now points to folio A, S1\n                                   // has swap count == 0, it can be freed\n                                   // by folio_swap_swap or swap\n                                   // allocator's reclaim.\n                                   <try to swap out another folio B>\n                                   // folio B is a folio in another VMA.\n                                   <put folio B to swap cache using S1 >\n                                   // S1 is freed, folio B can use it\n                                   // for swap out with no problem.\n                                   ...\n    folio = filemap_get_folio(S1)\n    // Got folio B here !!!\n    ... < interrupted again> ...\n                                   <swapin folio B and free S1>\n                                   // Now S1 is free to be used again.\n                                   <swapout src_pte & folio A using S1>\n                                   // Now src_pte is a swap entry PTE\n                                   // holding S1 again.\n    folio_trylock(folio)\n    move_swap_pte\n      double_pt_lock\n      is_pte_pages_stable\n      // Check passed because src_pte == S1\n      folio_move_anon_rmap(...)\n      // Moved invalid folio B here !!!\n\nThe race window is very short and requires multiple collisions of multiple\nrare events, so it's very unlikely to happen, but with a deliberately\nconstructed reproducer and increased time window, it can be reproduced\neasily.\n\nThis can be fixed by checking if the folio returned by filemap is the\nvalid swap cache folio after acquiring the folio lock.\n\nAnother similar race is possible: filemap_get_folio may return NULL, but\nfolio (A) could be swapped in and then swapped out again using the same\nswap entry after the lookup.  In such a case, folio (A) may remain in the\nswap cache, so it must be moved too:\n\nCPU1                               CPU2\nuserfaultfd_move\n  move_pages_pte()\n    entry = pte_to_swp_entry(orig_src_pte);\n    // Here it got entry = S1, and S1 is not in swap cache\n    folio = filemap_get_folio(S1)\n    // Got NULL\n    ... < interrupted again> ...\n                                   <swapin folio A and free S1>\n                                   <swapout folio A re-using S1>\n    move_swap_pte\n      double_pt_lock\n      is_pte_pages_stable\n      // Check passed because src_pte == S1\n      folio_move_anon_rmap(...)\n      // folio A is ignored !!!\n\nFix this by checking the swap cache again after acquiring the src_pte\nlock.  And to avoid the filemap overhead, we check swap_map directly [2].\n\nThe SWP_SYNCHRONOUS_IO path does make the problem more complex, but so far\nwe don't need to worry about that, since folios can only be exposed to the\nswap cache in the swap out path, and this is covered in this patch by\nchecking the swap cache again after acquiring the src_pte lock.\n\nTesting with a simple C program that allocates and moves several GB of\nmemory did not show any observable performance change.\n\nLink: https://lkml.kernel.org/r/20250604151038.21968-1-ryncsn@gmail.com\nFixes: adef440691ba (\"userfaultfd: UFFDIO_MOVE uABI\")\nSigned-off-by: Kairui Song <kasong@tencent.com>\nCloses: https://lore.kernel.org/linux-mm/CAMgjq7B1K=6OOrK2OUZ0-tqCzi+EJt+2_K97TPGoSt=9+JwP7Q@mail.gmail.com/ [1]\nLink: https://lore.kernel.org/all/CAGsJ_4yJhJBo16XhiC-nUzSheyX-V3-nFE+tAi=8Y560K8eT=A@mail.gmail.com/ [2]\nReviewed-by: Lokesh Gidra <lokeshgidra@google.com>\nAcked-by: Peter Xu <peterx@redhat.com>\nReviewed-by: Suren Baghdasaryan <surenb@google.com>\nReviewed-by: Barry Song <baohua@kernel.org>\nReviewed-by: Chris Li <chrisl@kernel.org>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: David Hildenbrand <david@redhat.com>\nCc: Kairui Song <kasong@tencent.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0ea148a799198518d8ebab63ddd0bb6114a103bc"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-23T22:09:16Z"
      },
      {
        "id": "51196471974",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25049125686,
          "size": 1,
          "distinct_size": 1,
          "ref": "refs/heads/master",
          "head": "86731a2a651e58953fc949573895f2fa6d456841",
          "before": "b67ec639010f7d2ce2b467cef36f3e5e785d8d50",
          "commits": [
            {
              "sha": "86731a2a651e58953fc949573895f2fa6d456841",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Linux 6.16-rc3",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/86731a2a651e58953fc949573895f2fa6d456841"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-22T20:42:31Z"
      },
      {
        "id": "51196471839",
        "type": "CreateEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "ref": "v6.16-rc3",
          "ref_type": "tag",
          "master_branch": "master",
          "description": "Linux kernel source tree",
          "pusher_type": "user"
        },
        "public": true,
        "created_at": "2025-06-22T20:42:30Z"
      },
      {
        "id": "51196317784",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 25049021512,
          "size": 2,
          "distinct_size": 2,
          "ref": "refs/heads/main",
          "head": "d255d2fd7fbc8aa92c8146fd5bb3cea3d8dfdca7",
          "before": "8644dfb6938228f1541247b85edd9b031cb32f2d",
          "commits": [
            {
              "sha": "fd0ca05d8a0b366562b2484b56dd83bb7b069839",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "RJ45: hopefully make the base board actually work\n\nOk, with some boards back and populated, that whole \"feed signal over\nRJ45\" didn't work at all.  I still think the concept should work, but my\nimplementation of it is obviously very broken.\n\nThe op amp output to the effect ends up oscillating wildly at a\nfrequency of a few MHz.  And while I might have screwed something else\nup, I think it's because of a capacitive load in the form of that cable.\n\nAccording to random searches I did, the minimal fix is typically to add\na small resistive load in series on the output.  So I did that.\n\nBut thinking about it, the other end is very possibly going to have the\nsame problem, and none of the existing effects boards were designed with\nany of this in mind.\n\nSo I will also be updating the test board at the other end of the cable\nto do active buffering and I suspect I really should rebias the signal\ntoo at that point so that the existing effects boards see the\ntraditional VGND setup instead of the quick hack that just passively\nchanged the rules under them.\n\nIt may obviously still be the case that this is all just misguided\ngarbage, but before throwing it in the bin, let's try to do it right.\nThat includes adding some transmission line simulation, even if that\ndidn't actually show the issue (with or without the series resistor).\n\nMaybe it's something else entirely that I'm not seeing / understanding.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/fd0ca05d8a0b366562b2484b56dd83bb7b069839"
            },
            {
              "sha": "d255d2fd7fbc8aa92c8146fd5bb3cea3d8dfdca7",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "RJ45: update the \"effect conversion\" board to be active\n\n... and hopefully make it work right.\n\nThe old hacky one was truly just a hack, and was a passive feed-through\nof the signals from the RJ45 jack to the old effect board pin headers.\n\nThat was hacky mainly because it ignored the whole new world order wrt\nvoltages (ie the RJ45 cable carries dual voltage rails, the old effect\nboards expect the VGND thing).\n\nBut it was also hacky because it expected the effects board to just deal\nwith the fact that the output now went to that RJ45 jack - and that\nobviously didn't work very well for the base board, so why would it work\nfor the effects boards?\n\nSo this redoes the conversion board to actually buffer and rebias the\nsignals, and it basically looks a lot like the old VGND board except it\ndoesn't have a stomp switch or audio jacks, because all of that is\nobviously on the new RJ45 base board.\n\nI put all the components on the front, which in hindsight might have\nbeen a mistake: it means that the joiner and splitter boards won't work\nbecause they won't physically fit any more.  But if we want those in the\nnew RJ45 regime, I think they probably make more sense as actual new\nboards anyway.\n\nWill this work out ok? I still have no idea.  But nothing for it but\ntry.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/d255d2fd7fbc8aa92c8146fd5bb3cea3d8dfdca7"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-22T20:29:34Z"
      },
      {
        "id": "51195877186",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25048734165,
          "size": 60,
          "distinct_size": 60,
          "ref": "refs/heads/master",
          "head": "b67ec639010f7d2ce2b467cef36f3e5e785d8d50",
          "before": "739a6c93cc755c0daf3a7e57e018a8c61047cd90",
          "commits": [
            {
              "sha": "4f6fc782128355931527cefe3eb45338abd8ab39",
              "author": {
                "email": "peterz@infradead.org",
                "name": "Peter Zijlstra"
              },
              "message": "perf: Fix sample vs do_exit()\n\nBaisheng Gao reported an ARM64 crash, which Mark decoded as being a\nsynchronous external abort -- most likely due to trying to access\nMMIO in bad ways.\n\nThe crash further shows perf trying to do a user stack sample while in\nexit_mmap()'s tlb_finish_mmu() -- i.e. while tearing down the address\nspace it is trying to access.\n\nIt turns out that we stop perf after we tear down the userspace mm; a\nreceipie for disaster, since perf likes to access userspace for\nvarious reasons.\n\nFlip this order by moving up where we stop perf in do_exit().\n\nAdditionally, harden PERF_SAMPLE_CALLCHAIN and PERF_SAMPLE_STACK_USER\nto abort when the current task does not have an mm (exit_mm() makes\nsure to set current->mm = NULL; before commencing with the actual\nteardown). Such that CPU wide events don't trip on this same problem.\n\nFixes: c5ebcedb566e (\"perf: Add ability to attach user stack dump to sample\")\nReported-by: Baisheng Gao <baisheng.gao@unisoc.com>\nSuggested-by: Mark Rutland <mark.rutland@arm.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20250605110815.GQ39944@noisy.programming.kicks-ass.net",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4f6fc782128355931527cefe3eb45338abd8ab39"
            },
            {
              "sha": "61988e36dc5457cdff7ae7927e8d9ad1419ee998",
              "author": {
                "email": "peterz@infradead.org",
                "name": "Peter Zijlstra"
              },
              "message": "perf: Fix cgroup state vs ERROR\n\nWhile chasing down a missing perf_cgroup_event_disable() elsewhere,\nLeo Yan found that both perf_put_aux_event() and\nperf_remove_sibling_event() were also missing one.\n\nSpecifically, the rule is that events that switch to OFF,ERROR need to\ncall perf_cgroup_event_disable().\n\nUnify the disable paths to ensure this.\n\nFixes: ab43762ef010 (\"perf: Allow normal events to output AUX data\")\nFixes: 9f0c4fa111dc (\"perf/core: Add a new PERF_EV_CAP_SIBLING event capability\")\nReported-by: Leo Yan <leo.yan@arm.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20250605123343.GD35970@noisy.programming.kicks-ass.net",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/61988e36dc5457cdff7ae7927e8d9ad1419ee998"
            },
            {
              "sha": "3b7a34aebbdf2a4b7295205bf0c654294283ec82",
              "author": {
                "email": "yeoreum.yun@arm.com",
                "name": "Yeoreum Yun"
              },
              "message": "perf: Fix dangling cgroup pointer in cpuctx\n\nCommit a3c3c6667(\"perf/core: Fix child_total_time_enabled accounting\nbug at task exit\") moves the event->state update to before\nlist_del_event(). This makes the event->state test in list_del_event()\nalways false; never calling perf_cgroup_event_disable().\n\nAs a result, cpuctx->cgrp won't be cleared properly; causing havoc.\n\nFixes: a3c3c6667(\"perf/core: Fix child_total_time_enabled accounting bug at task exit\")\nSigned-off-by: Yeoreum Yun <yeoreum.yun@arm.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nTested-by: David Wang <00107082@163.com>\nLink: https://lore.kernel.org/all/aD2TspKH%2F7yvfYoO@e129823.arm.com/",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3b7a34aebbdf2a4b7295205bf0c654294283ec82"
            },
            {
              "sha": "3172fb986666dfb71bf483b6d3539e1e587fa197",
              "author": {
                "email": "luogengkun@huaweicloud.com",
                "name": "Luo Gengkun"
              },
              "message": "perf/core: Fix WARN in perf_cgroup_switch()\n\nThere may be concurrency between perf_cgroup_switch and\nperf_cgroup_event_disable. Consider the following scenario: after a new\nperf cgroup event is created on CPU0, the new event may not trigger\na reprogramming, causing ctx->is_active to be 0. In this case, when CPU1\ndisables this perf event, it executes __perf_remove_from_context->\nlist _del_event->perf_cgroup_event_disable on CPU1, which causes a race\nwith perf_cgroup_switch running on CPU0.\n\nThe following describes the details of this concurrency scenario:\n\nCPU0\t\t\t\t\t\tCPU1\n\nperf_cgroup_switch:\n   ...\n   # cpuctx->cgrp is not NULL here\n   if (READ_ONCE(cpuctx->cgrp) == NULL)\n   \treturn;\n\n\t\t\t\t\t\tperf_remove_from_context:\n\t\t\t\t\t\t   ...\n\t\t\t\t\t\t   raw_spin_lock_irq(&ctx->lock);\n\t\t\t\t\t\t   ...\n\t\t\t\t\t\t   # ctx->is_active == 0 because reprogramm is not\n\t\t\t\t\t\t   # tigger, so CPU1 can do __perf_remove_from_context\n\t\t\t\t\t\t   # for CPU0\n\t\t\t\t\t\t   __perf_remove_from_context:\n\t\t\t\t\t\t         perf_cgroup_event_disable:\n\t\t\t\t\t\t\t    ...\n\t\t\t\t\t\t\t    if (--ctx->nr_cgroups)\n\t\t\t\t\t\t\t    ...\n\n   # this warning will happened because CPU1 changed\n   # ctx.nr_cgroups to 0.\n   WARN_ON_ONCE(cpuctx->ctx.nr_cgroups == 0);\n\n[peterz: use guard instead of goto unlock]\nFixes: db4a835601b7 (\"perf/core: Set cgroup in CPU contexts for new cgroup events\")\nSigned-off-by: Luo Gengkun <luogengkun@huaweicloud.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20250604033924.3914647-3-luogengkun@huaweicloud.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3172fb986666dfb71bf483b6d3539e1e587fa197"
            },
            {
              "sha": "49b393af3130c7712c7e8f215f4126c9a8060fa6",
              "author": {
                "email": "peterz@infradead.org",
                "name": "Peter Zijlstra"
              },
              "message": "perf: Add comment to enum perf_event_state\n\nBetter describe the event states.\n\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nReviewed-by: Leo Yan <leo.yan@arm.com>\nLink: https://lkml.kernel.org/r/20250604135801.GK38114@noisy.programming.kicks-ass.net",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/49b393af3130c7712c7e8f215f4126c9a8060fa6"
            },
            {
              "sha": "1a9dcf69c7a97e733aa2fc026db22f22928ca7b7",
              "author": {
                "email": "bigeasy@linutronix.de",
                "name": "Sebastian Andrzej Siewior"
              },
              "message": "selftests/futex: getopt() requires int as return value.\n\nMark reported that futex_priv_hash fails on ARM64.\nIt turns out that the command line parsing does not terminate properly\nand ends in the default case assuming an invalid option was passed.\n\nUse an int as the return type for getopt().\n\nCloses: https://lore.kernel.org/all/31869a69-063f-44a3-a079-ba71b2506cce@sirena.org.uk/\nFixes: 3163369407baf (\"selftests/futex: Add futex_numa_mpol\")\nFixes: cda95faef7bcf (\"selftests/futex: Add futex_priv_hash\")\nReported-by: Mark Brown <broonie@kernel.org>\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20250528085521.1938355-2-bigeasy@linutronix.de",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1a9dcf69c7a97e733aa2fc026db22f22928ca7b7"
            },
            {
              "sha": "0ecb4232fc65e659ca7020f8bb2e0fc347acfb7d",
              "author": {
                "email": "bigeasy@linutronix.de",
                "name": "Sebastian Andrzej Siewior"
              },
              "message": "selftests/futex: Set the home_node in futex_numa_mpol\n\nThe test fails at the MPOL step if multiple nodes are available. The\nreason is that mbind() sets the policy but the home_node, which is\nretrieved by the futex code, is not set. This causes to retrieve the\ncurrent node and with multiple nodes it fails on one of the iterations.\n\nUse numa_set_mempolicy_home_node() to set the expected node.\nUse ksft_exit_fail_msg() to fail and exit in order not to confuse ktap.\n\nFixes: 3163369407baf (\"selftests/futex: Add futex_numa_mpol\")\nSuggested-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20250528085521.1938355-3-bigeasy@linutronix.de",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0ecb4232fc65e659ca7020f8bb2e0fc347acfb7d"
            },
            {
              "sha": "8337204c58899fe422db765b481711eb2d95eb0b",
              "author": {
                "email": "peterz@infradead.org",
                "name": "Peter Zijlstra"
              },
              "message": "futex: Handle invalid node numbers supplied by user\n\nsyzbot used a negative node number which was not rejected early and led\nto invalid memory access in node_possible().\n\nReject negative node numbers except for FUTEX_NO_NODE.\n\n[bigeasy: Keep the FUTEX_NO_NODE check]\n\nCloses: https://lore.kernel.org/all/6835bfe3.a70a0220.253bc2.00b5.GAE@google.com/\nFixes: cec199c5e39bd (\"futex: Implement FUTEX2_NUMA\")\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nReported-by: syzbot+9afaf6749e3a7aa1bdf3@syzkaller.appspotmail.com\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20250528085521.1938355-4-bigeasy@linutronix.de",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8337204c58899fe422db765b481711eb2d95eb0b"
            },
            {
              "sha": "bc4394e5e79cdda1b0997e0be1d65e242f523f02",
              "author": {
                "email": "kan.liang@linux.intel.com",
                "name": "Kan Liang"
              },
              "message": "perf: Fix the throttle error of some clock events\n\nBoth ARM and IBM CI reports RCU stall, which can be reproduced by the\nbelow perf command.\n  perf record -a -e cpu-clock -- sleep 2\n\nThe issue is introduced by the generic throttle patch set, which\nunconditionally invoke the event_stop() when throttle is triggered.\n\nThe cpu-clock and task-clock are two special SW events, which rely on\nthe hrtimer. The throttle is invoked in the hrtimer handler. The\nevent_stop()->hrtimer_cancel() waits for the handler to finish, which is\na deadlock. Instead of invoking the stop(), the HRTIMER_NORESTART should\nbe used to stop the timer.\n\nThere may be two ways to fix it:\n - Introduce a PMU flag to track the case. Avoid the event_stop in\n   perf_event_throttle() if the flag is detected.\n   It has been implemented in the\n   https://lore.kernel.org/lkml/20250528175832.2999139-1-kan.liang@linux.intel.com/\n   The new flag was thought to be an overkill for the issue.\n - Add a check in the event_stop. Return immediately if the throttle is\n   invoked in the hrtimer handler. Rely on the existing HRTIMER_NORESTART\n   method to stop the timer.\n\nThe latter is implemented here.\n\nMove event->hw.interrupts = MAX_INTERRUPTS before the stop(). It makes\nthe order the same as perf_event_unthrottle(). Except the patch, no one\nchecks the hw.interrupts in the stop(). There is no impact from the\norder change.\n\nWhen stops in the throttle, the event should not be updated,\nstop(event, 0). But the cpu_clock_event_stop() doesn't handle the flag.\nIn logic, it's wrong. But it didn't bring any problems with the old\ncode, because the stop() was not invoked when handling the throttle.\nChecking the flag before updating the event.\n\nFixes: 9734e25fbf5a (\"perf: Fix the throttle logic for a group\")\nCloses: https://lore.kernel.org/lkml/20250527161656.GJ2566836@e132581.arm.com/\nCloses: https://lore.kernel.org/lkml/djxlh5fx326gcenwrr52ry3pk4wxmugu4jccdjysza7tlc5fef@ktp4rffawgcw/\nCloses: https://lore.kernel.org/lkml/8e8f51d8-af64-4d9e-934b-c0ee9f131293@linux.ibm.com/\nCloses: https://lore.kernel.org/lkml/4ce106d0-950c-aadc-0b6a-f0215cd39913@maine.edu/\nReported-by: Leo Yan <leo.yan@arm.com>\nReported-by: Aishwarya TCV <aishwarya.tcv@arm.com>\nReported-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>\nReported-by: Venkat Rao Bagalkote <venkat88@linux.ibm.com>\nReported-by: Vince Weaver <vincent.weaver@maine.edu>\nSigned-off-by: Kan Liang <kan.liang@linux.intel.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nReviewed-by: Ian Rogers <irogers@google.com>\nLink: https://lkml.kernel.org/r/20250606192546.915765-1-kan.liang@linux.intel.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/bc4394e5e79cdda1b0997e0be1d65e242f523f02"
            },
            {
              "sha": "69a14d146f3b87819f3fb73ed5d1de3e1fa680c1",
              "author": {
                "email": "bigeasy@linutronix.de",
                "name": "Sebastian Andrzej Siewior"
              },
              "message": "futex: Verify under the lock if hash can be replaced\n\nOnce the global hash is requested there is no way back to switch back to\nthe per-task private hash. This is checked at the begin of the function.\n\nIt is possible that two threads simultaneously request the global hash\nand both pass the initial check and block later on the\nmm::futex_hash_lock. In this case the first thread performs the switch\nto the global hash. The second thread will also attempt to switch to the\nglobal hash and while doing so, accessing the nonexisting slot 1 of the\nstruct futex_private_hash.\nThe same applies if the hash is made immutable: There is no reference\ncounting and the hash must not be replaced.\n\nVerify under mm_struct::futex_phash that neither the global hash nor an\nimmutable hash in use.\n\nTested-by: \"Lai, Yi\" <yi1.lai@linux.intel.com>\nReported-by: \"Lai, Yi\" <yi1.lai@linux.intel.com>\nCloses: https://lore.kernel.org/all/aDwDw9Aygqo6oAx+@ly-workstation/\nFixes: bd54df5ea7cad (\"futex: Allow to resize the private local hash\")\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lore.kernel.org/all/20250610104400.1077266-5-bigeasy@linutronix.de/",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/69a14d146f3b87819f3fb73ed5d1de3e1fa680c1"
            },
            {
              "sha": "903cc7096db22f889d48e2cee8840709ce04fdac",
              "author": {
                "email": "akhilrajeev@nvidia.com",
                "name": "Akhil R"
              },
              "message": "dt-bindings: i2c: nvidia,tegra20-i2c: Specify the required properties\n\nSpecify the properties which are essential and which are not for the\nTegra I2C driver to function correctly. This was not added correctly when\nthe TXT binding was converted to yaml. All the existing DT nodes have\nthese properties already and hence this does not break the ABI.\n\ndmas and dma-names which were specified as a must in the TXT binding\nis now made optional since the driver can work in PIO mode if dmas are\nmissing.\n\nFixes: f10a9b722f80 (\"dt-bindings: i2c: tegra: Convert to json-schema”)\nSigned-off-by: Akhil R <akhilrajeev@nvidia.com>\nCc: <stable@vger.kernel.org> # v5.17+\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nSigned-off-by: Andi Shyti <andi@smida.it>\nLink: https://lore.kernel.org/r/20250603153022.39434-1-akhilrajeev@nvidia.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/903cc7096db22f889d48e2cee8840709ce04fdac"
            },
            {
              "sha": "614b1c3cbfb0ecbafd40284d2f8e67c865818714",
              "author": {
                "email": "wsa+renesas@sang-engineering.com",
                "name": "Wolfram Sang"
              },
              "message": "i2c: use inclusive callbacks in struct i2c_algorithm\n\nConvert the I2C subsystem to drop using the 'master_'-prefixed callbacks\nin favor of the simplified ones. Fix alignment of '=' while here.\n\nSigned-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/614b1c3cbfb0ecbafd40284d2f8e67c865818714"
            },
            {
              "sha": "b0823d5fbacb1c551d793cbfe7af24e0d1fa45ed",
              "author": {
                "email": "kan.liang@linux.intel.com",
                "name": "Kan Liang"
              },
              "message": "perf/x86/intel: Fix crash in icl_update_topdown_event()\n\nThe perf_fuzzer found a hard-lockup crash on a RaptorLake machine:\n\n  Oops: general protection fault, maybe for address 0xffff89aeceab400: 0000\n  CPU: 23 UID: 0 PID: 0 Comm: swapper/23\n  Tainted: [W]=WARN\n  Hardware name: Dell Inc. Precision 9660/0VJ762\n  RIP: 0010:native_read_pmc+0x7/0x40\n  Code: cc e8 8d a9 01 00 48 89 03 5b cd cc cc cc cc 0f 1f ...\n  RSP: 000:fffb03100273de8 EFLAGS: 00010046\n  ....\n  Call Trace:\n    <TASK>\n    icl_update_topdown_event+0x165/0x190\n    ? ktime_get+0x38/0xd0\n    intel_pmu_read_event+0xf9/0x210\n    __perf_event_read+0xf9/0x210\n\nCPUs 16-23 are E-core CPUs that don't support the perf metrics feature.\nThe icl_update_topdown_event() should not be invoked on these CPUs.\n\nIt's a regression of commit:\n\n  f9bdf1f95339 (\"perf/x86/intel: Avoid disable PMU if !cpuc->enabled in sample read\")\n\nThe bug introduced by that commit is that the is_topdown_event() function\nis mistakenly used to replace the is_topdown_count() call to check if the\ntopdown functions for the perf metrics feature should be invoked.\n\nFix it.\n\nFixes: f9bdf1f95339 (\"perf/x86/intel: Avoid disable PMU if !cpuc->enabled in sample read\")\nCloses: https://lore.kernel.org/lkml/352f0709-f026-cd45-e60c-60dfd97f73f3@maine.edu/\nReported-by: Vince Weaver <vincent.weaver@maine.edu>\nSigned-off-by: Kan Liang <kan.liang@linux.intel.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nSigned-off-by: Ingo Molnar <mingo@kernel.org>\nTested-by: Vince Weaver <vincent.weaver@maine.edu>\nCc: stable@vger.kernel.org # v6.15+\nLink: https://lore.kernel.org/r/20250612143818.2889040-1-kan.liang@linux.intel.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b0823d5fbacb1c551d793cbfe7af24e0d1fa45ed"
            },
            {
              "sha": "2b32fc8ff08deac3aa509f321a28e21b1eea5525",
              "author": {
                "email": "briannorris@chromium.org",
                "name": "Brian Norris"
              },
              "message": "genirq/cpuhotplug: Rebalance managed interrupts across multi-CPU hotplug\n\nCommit 788019eb559f (\"genirq: Retain disable depth for managed interrupts\nacross CPU hotplug\") intended to only decrement the disable depth once per\nmanaged shutdown, but instead it decrements for each CPU hotplug in the\naffinity mask, until its depth reaches a point where it finally gets\nre-started.\n\nFor example, consider:\n\n1. Interrupt is affine to CPU {M,N}\n2. disable_irq() -> depth is 1\n3. CPU M goes offline -> interrupt migrates to CPU N / depth is still 1\n4. CPU N goes offline -> irq_shutdown() / depth is 2\n5. CPU N goes online\n    -> irq_restore_affinity_of_irq()\n       -> irqd_is_managed_and_shutdown()==true\n          -> irq_startup_managed() -> depth is 1\n6. CPU M goes online\n    -> irq_restore_affinity_of_irq()\n       -> irqd_is_managed_and_shutdown()==true\n          -> irq_startup_managed() -> depth is 0\n          *** BUG: driver expects the interrupt is still disabled ***\n             -> irq_startup() -> irqd_clr_managed_shutdown()\n7. enable_irq() -> depth underflow / unbalanced enable_irq() warning\n\nThis should clear the managed-shutdown flag at step 6, so that further\nhotplugs don't cause further imbalance.\n\nNote: It might be cleaner to also remove the irqd_clr_managed_shutdown()\ninvocation from __irq_startup_managed(). But this is currently not possible\nbecause of irq_update_affinity_desc() as it sets IRQD_MANAGED_SHUTDOWN and\nexpects irq_startup() to clear it.\n\nFixes: 788019eb559f (\"genirq: Retain disable depth for managed interrupts across CPU hotplug\")\nReported-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>\nSigned-off-by: Brian Norris <briannorris@chromium.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nTested-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>\nLink: https://lore.kernel.org/all/20250612183303.3433234-2-briannorris@chromium.org",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2b32fc8ff08deac3aa509f321a28e21b1eea5525"
            },
            {
              "sha": "72218d74c9c57b8ea36c2a58875dff406fc10462",
              "author": {
                "email": "briannorris@chromium.org",
                "name": "Brian Norris"
              },
              "message": "genirq/cpuhotplug: Restore affinity even for suspended IRQ\n\nCommit 788019eb559f (\"genirq: Retain disable depth for managed interrupts\nacross CPU hotplug\") tried to make managed shutdown/startup properly\nreference counted, but it missed the fact that the unplug and hotplug code\nhas an intentional imbalance by skipping IRQS_SUSPENDED interrupts on\nthe \"restore\" path.\n\nThis means that if a managed-affinity interrupt was both suspended and\nmanaged-shutdown (such as may happen during system suspend / S3), resume\nskips calling irq_startup_managed(), and would again have an unbalanced\ndepth this time, with a positive value (i.e., remaining unexpectedly\nmasked).\n\nThis IRQS_SUSPENDED check was introduced in commit a60dd06af674\n(\"genirq/cpuhotplug: Skip suspended interrupts when restoring affinity\")\nfor essentially the same reason as commit 788019eb559f, to prevent that\nirq_startup() would unconditionally re-enable an interrupt too early.\n\nBecause irq_startup_managed() now respsects the disable-depth count, the\nIRQS_SUSPENDED check is not longer needed, and instead, it causes harm.\n\nThus, drop the IRQS_SUSPENDED check, and restore balance.\n\nThis effectively reverts commit a60dd06af674 (\"genirq/cpuhotplug: Skip\nsuspended interrupts when restoring affinity\"), because it is replaced\nby commit 788019eb559f (\"genirq: Retain disable depth for managed\ninterrupts across CPU hotplug\").\n\nFixes: 788019eb559f (\"genirq: Retain disable depth for managed interrupts across CPU hotplug\")\nReported-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>\nSigned-off-by: Brian Norris <briannorris@chromium.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nTested-by: Aleksandrs Vinarskis <alex.vinarskis@gmail.com>\nLink: https://lore.kernel.org/all/20250612183303.3433234-3-briannorris@chromium.org\nCloses: https://lore.kernel.org/lkml/24ec4adc-7c80-49e9-93ee-19908a97ab84@gmail.com/",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/72218d74c9c57b8ea36c2a58875dff406fc10462"
            },
            {
              "sha": "8a2277a3c9e4cc5398f80821afe7ecbe9bdf2819",
              "author": {
                "email": "gye976@gmail.com",
                "name": "Gyeyoung Baek"
              },
              "message": "genirq/irq_sim: Initialize work context pointers properly\n\nInitialize `ops` member's pointers properly by using kzalloc() instead of\nkmalloc() when allocating the simulation work context. Otherwise the\npointers contain random content leading to invalid dereferencing.\n\nSigned-off-by: Gyeyoung Baek <gye976@gmail.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nLink: https://lore.kernel.org/all/20250612124827.63259-1-gye976@gmail.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8a2277a3c9e4cc5398f80821afe7ecbe9bdf2819"
            },
            {
              "sha": "594902c986e269660302f09df9ec4bf1cf017b77",
              "author": {
                "email": "qinyuntan@linux.alibaba.com",
                "name": "Qinyun Tan"
              },
              "message": "x86,fs/resctrl: Remove inappropriate references to cacheinfo in the resctrl subsystem\n\nIn the resctrl subsystem's Sub-NUMA Cluster (SNC) mode, the rdt_mon_domain\nstructure representing a NUMA node relies on the cacheinfo interface\n(rdt_mon_domain::ci) to store L3 cache information (e.g., shared_cpu_map)\nfor monitoring. The L3 cache information of a SNC NUMA node determines\nwhich domains are summed for the \"top level\" L3-scoped events.\n\nrdt_mon_domain::ci is initialized using the first online CPU of a NUMA\nnode. When this CPU goes offline, its shared_cpu_map is cleared to contain\nonly the offline CPU itself. Subsequently, attempting to read counters\nvia smp_call_on_cpu(offline_cpu) fails (and error ignored), returning\nzero values for \"top-level events\" without any error indication.\n\nReplace the cacheinfo references in struct rdt_mon_domain and struct\nrmid_read with the cacheinfo ID (a unique identifier for the L3 cache).\n\nrdt_domain_hdr::cpu_mask contains the online CPUs associated with that\ndomain. When reading \"top-level events\", select a CPU from\nrdt_domain_hdr::cpu_mask and utilize its L3 shared_cpu_map to determine\nvalid CPUs for reading RMID counter via the MSR interface.\n\nConsidering all CPUs associated with the L3 cache improves the chances\nof picking a housekeeping CPU on which the counter reading work can be\nqueued, avoiding an unnecessary IPI.\n\nFixes: 328ea68874642 (\"x86/resctrl: Prepare for new Sub-NUMA Cluster (SNC) monitor files\")\nSigned-off-by: Qinyun Tan <qinyuntan@linux.alibaba.com>\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>\nReviewed-by: Reinette Chatre <reinette.chatre@intel.com>\nTested-by: Tony Luck <tony.luck@intel.com>\nLink: https://lore.kernel.org/20250530182053.37502-2-qinyuntan@linux.alibaba.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/594902c986e269660302f09df9ec4bf1cf017b77"
            },
            {
              "sha": "b2e673ae53ef4b943f68585207a5f21cfc9a0714",
              "author": {
                "email": "avadhut.naik@amd.com",
                "name": "Avadhut Naik"
              },
              "message": "EDAC/amd64: Correct number of UMCs for family 19h models 70h-7fh\n\nAMD's Family 19h-based Models 70h-7fh support 4 unified memory controllers\n(UMC) per processor die.\n\nThe amd64_edac driver, however, assumes only 2 UMCs are supported since\nmax_mcs variable for the models has not been explicitly set to 4. The same\nresults in incomplete or incorrect memory information being logged to dmesg by\nthe module during initialization in some instances.\n\nFixes: 6c79e42169fe (\"EDAC/amd64: Add support for ECC on family 19h model 60h-7Fh\")\nCloses: https://lore.kernel.org/all/27dc093f-ce27-4c71-9e81-786150a040b6@reox.at/\nReported-by: reox <mailinglist@reox.at>\nSigned-off-by: Avadhut Naik <avadhut.naik@amd.com>\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>\nCc: stable@kernel.org\nLink: https://lore.kernel.org/20250613005233.2330627-1-avadhut.naik@amd.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b2e673ae53ef4b943f68585207a5f21cfc9a0714"
            },
            {
              "sha": "6aba0cb5bba6141158d5449f2cf53187b7f755f9",
              "author": {
                "email": "apatel@ventanamicro.com",
                "name": "Anup Patel"
              },
              "message": "RISC-V: KVM: Fix the size parameter check in SBI SFENCE calls\n\nAs-per the SBI specification, an SBI remote fence operation applies\nto the entire address space if either:\n1) start_addr and size are both 0\n2) size is equal to 2^XLEN-1\n\n>From the above, only #1 is checked by SBI SFENCE calls so fix the\nsize parameter check in SBI SFENCE calls to cover #2 as well.\n\nFixes: 13acfec2dbcc (\"RISC-V: KVM: Add remote HFENCE functions based on VCPU requests\")\nReviewed-by: Atish Patra <atishp@rivosinc.com>\nSigned-off-by: Anup Patel <apatel@ventanamicro.com>\nLink: https://lore.kernel.org/r/20250605061458.196003-2-apatel@ventanamicro.com\nSigned-off-by: Anup Patel <anup@brainfault.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6aba0cb5bba6141158d5449f2cf53187b7f755f9"
            },
            {
              "sha": "2e7be162996640bbe3b6da694cc064c511b8a5d9",
              "author": {
                "email": "apatel@ventanamicro.com",
                "name": "Anup Patel"
              },
              "message": "RISC-V: KVM: Don't treat SBI HFENCE calls as NOPs\n\nThe SBI specification clearly states that SBI HFENCE calls should\nreturn SBI_ERR_NOT_SUPPORTED when one of the target hart doesn’t\nsupport hypervisor extension (aka nested virtualization in-case\nof KVM RISC-V).\n\nFixes: c7fa3c48de86 (\"RISC-V: KVM: Treat SBI HFENCE calls as NOPs\")\nReviewed-by: Atish Patra <atishp@rivosinc.com>\nSigned-off-by: Anup Patel <apatel@ventanamicro.com>\nLink: https://lore.kernel.org/r/20250605061458.196003-3-apatel@ventanamicro.com\nSigned-off-by: Anup Patel <anup@brainfault.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2e7be162996640bbe3b6da694cc064c511b8a5d9"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-22T19:54:52Z"
      },
      {
        "id": "51177149852",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25036308941,
          "size": 10,
          "distinct_size": 10,
          "ref": "refs/heads/master",
          "head": "739a6c93cc755c0daf3a7e57e018a8c61047cd90",
          "before": "f7301f856d351f068f807d0a3d442b85b2c6a01d",
          "commits": [
            {
              "sha": "32ce6b3a83b71d8abf0c0837dc78775f16c9902f",
              "author": {
                "email": "chuck.lever@oracle.com",
                "name": "Chuck Lever"
              },
              "message": "NFSD: Avoid corruption of a referring call list\n\nThe new code neglects to remove a freshly-allocated RCL from the\ncallback's referring call list when no matching referring call is\nfound.\n\nReported-by: kernel test robot <lkp@intel.com>\nReported-by: Dan Carpenter <dan.carpenter@linaro.org>\nCloses: https://lore.kernel.org/r/202505171002.cE46sdj5-lkp@intel.com/\nFixes: 4f3c8d8c9e10 (\"NFSD: Implement CB_SEQUENCE referring call lists\")\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/32ce6b3a83b71d8abf0c0837dc78775f16c9902f"
            },
            {
              "sha": "8b3ac9fabaa825b7bae850ee7b4580c5cba32699",
              "author": {
                "email": "bcodding@redhat.com",
                "name": "Benjamin Coddington"
              },
              "message": "SUNRPC: Cleanup/fix initial rq_pages allocation\n\nWhile investigating some reports of memory-constrained NUMA machines\nfailing to mount v3 and v4.0 nfs mounts, we found that svc_init_buffer()\nwas not attempting to retry allocations from the bulk page allocator.\nTypically, this results in a single page allocation being returned and\nthe mount attempt fails with -ENOMEM.  A retry would have allowed the mount\nto succeed.\n\nAdditionally, it seems that the bulk allocation in svc_init_buffer() is\nredundant because svc_alloc_arg() will perform the required allocation and\ndoes the correct thing to retry the allocations.\n\nThe call to allocate memory in svc_alloc_arg() drops the preferred node\nargument, but I expect we'll still allocate on the preferred node because\nthe allocation call happens within the svc thread context, which chooses\nthe node with memory closest to the current thread's execution.\n\nThis patch cleans out the bulk allocation in svc_init_buffer() to allow\nsvc_alloc_arg() to handle the allocation/retry logic for rq_pages.\n\nSigned-off-by: Benjamin Coddington <bcodding@redhat.com>\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nFixes: ed603bcf4fea (\"sunrpc: Replace the rq_pages array with dynamically-allocated memory\")\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8b3ac9fabaa825b7bae850ee7b4580c5cba32699"
            },
            {
              "sha": "905eeb2b7c33adda23a966aeb811ab4cb9e62031",
              "author": {
                "email": "ishitatsuyuki@google.com",
                "name": "Tatsuyuki Ishi"
              },
              "message": "erofs: impersonate the opener's credentials when accessing backing file\n\nPreviously, file operations on a file-backed mount used the current\nprocess' credentials to access the backing FD. Attempting to do so on\nAndroid lead to SELinux denials, as ACL rules on the backing file (e.g.\n/system/apex/foo.apex) is restricted to a small set of process.\nArguably, this error is redundant and leaking implementation details, as\naccess to files on a mount is already ACL'ed by path.\n\nInstead, override to use the opener's cred when accessing the backing\nfile. This makes the behavior similar to a loop-backed mount, which\nuses kworker cred when accessing the backing file and does not cause\nSELinux denials.\n\nSigned-off-by: Tatsuyuki Ishi <ishitatsuyuki@google.com>\nReviewed-by: Gao Xiang <hsiangkao@linux.alibaba.com>\nReviewed-by: Hongbo Li <lihongbo22@huawei.com>\nLink: https://lore.kernel.org/r/20250612-b4-erofs-impersonate-v1-1-8ea7d6f65171@google.com\nSigned-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/905eeb2b7c33adda23a966aeb811ab4cb9e62031"
            },
            {
              "sha": "30b58444807c93bffeaba7d776110f2a909d2f9a",
              "author": {
                "email": "hsiangkao@linux.alibaba.com",
                "name": "Gao Xiang"
              },
              "message": "erofs: remove unused trace event erofs_destroy_inode\n\nThe trace event `erofs_destroy_inode` was added but remains unused. This\nunused event contributes approximately 5KB to the kernel module size.\n\nReported-by: Steven Rostedt <rostedt@goodmis.org>\nCloses: https://lore.kernel.org/r/20250612224906.15000244@batman.local.home\nFixes: 13f06f48f7bf (\"staging: erofs: support tracepoint\")\nCc: stable@vger.kernel.org\nReviewed-by: Hongbo Li <lihongbo22@huawei.com>\nSigned-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>\nLink: https://lore.kernel.org/r/20250617054056.3232365-1-hsiangkao@linux.alibaba.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/30b58444807c93bffeaba7d776110f2a909d2f9a"
            },
            {
              "sha": "7869738b6908eec7755818aaf6f3aa068b2f0e1b",
              "author": {
                "email": "hsiangkao@linux.alibaba.com",
                "name": "Gao Xiang"
              },
              "message": "erofs: refuse crafted out-of-file-range encoded extents\n\nCrafted encoded extents could record out-of-range `lstart`, which should\nnot happen in normal cases.\n\nIt caused an iomap_iter_done() complaint [1] reported by syzbot.\n\n[1] https://lore.kernel.org/r/684cb499.a00a0220.c6bd7.0010.GAE@google.com\n\nFixes: 1d191b4ca51d (\"erofs: implement encoded extent metadata\")\nReported-and-tested-by: syzbot+d8f000c609f05f52d9b5@syzkaller.appspotmail.com\nCloses: https://syzkaller.appspot.com/bug?extid=d8f000c609f05f52d9b5\nSigned-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>\nLink: https://lore.kernel.org/r/20250619032839.2642193-1-hsiangkao@linux.alibaba.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7869738b6908eec7755818aaf6f3aa068b2f0e1b"
            },
            {
              "sha": "8ea688a3372e8369dc04395b39b4e71a6d91d4d5",
              "author": {
                "email": "jlayton@kernel.org",
                "name": "Jeff Layton"
              },
              "message": "nfsd: use threads array as-is in netlink interface\n\nThe old nfsdfs interface for starting a server with multiple pools\nhandles the special case of a single entry array passed down from\nuserland by distributing the threads over every NUMA node.\n\nThe netlink control interface however constructs an array of length\nnfsd_nrpools() and fills any unprovided slots with 0's. This behavior\ndefeats the special casing that the old interface relies on.\n\nChange nfsd_nl_threads_set_doit() to pass down the array from userland\nas-is.\n\nFixes: 7f5c330b2620 (\"nfsd: allow passing in array of thread counts via netlink\")\nCc: stable@vger.kernel.org\nReported-by: Mike Snitzer <snitzer@kernel.org>\nCloses: https://lore.kernel.org/linux-nfs/aDC-ftnzhJAlwqwh@kernel.org/\nSigned-off-by: Jeff Layton <jlayton@kernel.org>\nReviewed-by: Simon Horman <horms@kernel.org>\nTested-by: Mike Snitzer <snitzer@kernel.org>\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8ea688a3372e8369dc04395b39b4e71a6d91d4d5"
            },
            {
              "sha": "94d10a4dba0bc482f2b01e39f06d5513d0f75742",
              "author": {
                "email": "jlayton@kernel.org",
                "name": "Jeff Layton"
              },
              "message": "sunrpc: handle SVC_GARBAGE during svc auth processing as auth error\n\ntianshuo han reported a remotely-triggerable crash if the client sends a\nkernel RPC server a specially crafted packet. If decoding the RPC reply\nfails in such a way that SVC_GARBAGE is returned without setting the\nrq_accept_statp pointer, then that pointer can be dereferenced and a\nvalue stored there.\n\nIf it's the first time the thread has processed an RPC, then that\npointer will be set to NULL and the kernel will crash. In other cases,\nit could create a memory scribble.\n\nThe server sunrpc code treats a SVC_GARBAGE return from svc_authenticate\nor pg_authenticate as if it should send a GARBAGE_ARGS reply. RFC 5531\nsays that if authentication fails that the RPC should be rejected\ninstead with a status of AUTH_ERR.\n\nHandle a SVC_GARBAGE return as an AUTH_ERROR, with a reason of\nAUTH_BADCRED instead of returning GARBAGE_ARGS in that case. This\nsidesteps the whole problem of touching the rpc_accept_statp pointer in\nthis situation and avoids the crash.\n\nCc: stable@kernel.org\nFixes: 29cd2927fb91 (\"SUNRPC: Fix encoding of accepted but unsuccessful RPC replies\")\nReported-by: tianshuo han <hantianshuo233@gmail.com>\nReviewed-by: Chuck Lever <chuck.lever@oracle.com>\nSigned-off-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Chuck Lever <chuck.lever@oracle.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/94d10a4dba0bc482f2b01e39f06d5513d0f75742"
            },
            {
              "sha": "417b8af2e30d7f131682a893ad79c506fd39c624",
              "author": {
                "email": "hsiangkao@linux.alibaba.com",
                "name": "Gao Xiang"
              },
              "message": "erofs: remove a superfluous check for encoded extents\n\nIt is possible when an inode is split into segments for multi-threaded\ncompression, and the tail extent of a segment could also be small.\n\nFixes: 1d191b4ca51d (\"erofs: implement encoded extent metadata\")\nSigned-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>\nLink: https://lore.kernel.org/r/20250620153108.1368029-1-hsiangkao@linux.alibaba.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/417b8af2e30d7f131682a893ad79c506fd39c624"
            },
            {
              "sha": "1f9378d4a7dd862b28d83a062a2dcc6ef1a0daa7",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'erofs-for-6.16-rc3-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs\n\nPull erofs fixes from Gao Xiang:\n\n - Use the mounter’s credentials for file-backed mounts to resolve\n   Android SELinux permission issues\n\n - Remove the unused trace event `erofs_destroy_inode`\n\n - Error out on crafted out-of-file-range encoded extents\n\n - Remove an incorrect check for encoded extents\n\n* tag 'erofs-for-6.16-rc3-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs:\n  erofs: remove a superfluous check for encoded extents\n  erofs: refuse crafted out-of-file-range encoded extents\n  erofs: remove unused trace event erofs_destroy_inode\n  erofs: impersonate the opener's credentials when accessing backing file",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1f9378d4a7dd862b28d83a062a2dcc6ef1a0daa7"
            },
            {
              "sha": "739a6c93cc755c0daf3a7e57e018a8c61047cd90",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'nfsd-6.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/cel/linux\n\nPull nfsd fixes from Chuck Lever:\n\n - Two fixes for commits in the nfsd-6.16 merge\n\n - One fix for the recently-added NFSD netlink facility\n\n - One fix for a remote SunRPC crasher\n\n* tag 'nfsd-6.16-1' of git://git.kernel.org/pub/scm/linux/kernel/git/cel/linux:\n  sunrpc: handle SVC_GARBAGE during svc auth processing as auth error\n  nfsd: use threads array as-is in netlink interface\n  SUNRPC: Cleanup/fix initial rq_pages allocation\n  NFSD: Avoid corruption of a referring call list",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/739a6c93cc755c0daf3a7e57e018a8c61047cd90"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-21T16:33:47Z"
      },
      {
        "id": "51176553668",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25035908179,
          "size": 30,
          "distinct_size": 30,
          "ref": "refs/heads/master",
          "head": "f7301f856d351f068f807d0a3d442b85b2c6a01d",
          "before": "3f75bfff44be0646580fe4efda45d646f9c1693b",
          "commits": [
            {
              "sha": "907a7a2e5bf40c6a359b2f6cc53d6fdca04009e0",
              "author": {
                "email": "mario.limonciello@amd.com",
                "name": "Mario Limonciello"
              },
              "message": "PCI/PM: Set up runtime PM even for devices without PCI PM\n\n4d4c10f763d7 (\"PCI: Explicitly put devices into D0 when initializing\")\nintended to put PCI devices into D0, but in doing so unintentionally\nchanged runtime PM initialization not to occur on devices that don't\nsupport PCI PM.  This caused a regression in vfio-pci due to an imbalance\nwith its use.\n\nAdjust the logic in pci_pm_init() so that even if PCI PM isn't supported\nruntime PM is still initialized.\n\nFixes: 4d4c10f763d7 (\"PCI: Explicitly put devices into D0 when initializing\")\nReported-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>\nCloses: https://lore.kernel.org/linux-pci/20250424043232.1848107-1-superm1@kernel.org/T/#m7e8929d6421690dc8bd6dc639d86c2b4db27cbc4\nReported-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nCloses: https://lore.kernel.org/linux-pci/20250424043232.1848107-1-superm1@kernel.org/T/#m40d277dcdb9be64a1609a82412d1aa906263e201\nSigned-off-by: Mario Limonciello <mario.limonciello@amd.com>\nSigned-off-by: Bjorn Helgaas <bhelgaas@google.com>\nTested-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>\nTested-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nReviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>\nAcked-by: Rafael J. Wysocki <rafael@kernel.org>\nCc: Alex Williamson <alex.williamson@redhat.com>\nLink: https://patch.msgid.link/20250611233117.61810-1-superm1@kernel.org",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/907a7a2e5bf40c6a359b2f6cc53d6fdca04009e0"
            },
            {
              "sha": "070b315333ee942f2cc69d02a864945c9bc27ef2",
              "author": {
                "email": "ctshao@google.com",
                "name": "Chun-Tse Shao"
              },
              "message": "perf test: Restrict uniquifying test to machines with 'uncore_imc'\n\nThe test would fail if target machine does not have 'uncore_imc'\ndevices.\n\nSince event uniquifying behavior is similar among different\narchitectures, we are restricting the test to only run on machines with\n`uncore_imc` devices.\n\nSuggested-by: Ian Rogers <irogers@google.com>\nSigned-off-by: Chun-Tse Shao <ctshao@google.com>\nTested-by: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nLink: https://lore.kernel.org/r/20250521224513.1104129-1-ctshao@google.com\n[ Skip the test, i.e. return 2, instead of returning 0 as if the test had succeed ]\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/070b315333ee942f2cc69d02a864945c9bc27ef2"
            },
            {
              "sha": "11cfaf37d6a79447bde8192e2e3bb2877932b82b",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers: Update the fs headers with the kernel sources\n\nTo pick up changes from:\n\n  5d894321c49e6137 (\"fs: add atomic write unit max opt to statx\")\n  a516403787e08119 (\"fs/proc: extend the PAGEMAP_SCAN ioctl to report guard regions\")\n  c07d3aede2b26830 (\"fscrypt: add support for hardware-wrapped keys\")\n\nThese are used to beautify fs syscall arguments, albeit the changes in\nthis update are not affecting those beautifiers.\n\nThis addresses these tools/ build warnings:\n\n  Warning: Kernel ABI header differences:\n  diff -u tools/include/uapi/linux/fscrypt.h include/uapi/linux/fscrypt.h\n  diff -u tools/include/uapi/linux/stat.h include/uapi/linux/stat.h\n  diff -u tools/perf/trace/beauty/include/uapi/linux/fs.h include/uapi/linux/fs.h\n  diff -u tools/perf/trace/beauty/include/uapi/linux/stat.h include/uapi/linux/stat.h\n\nPlease see tools/include/uapi/README for details (it's in the first patch\nof this series).\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Andrei Vagin <avagin@gmail.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Darrick J. Wong <djwong@kernel.org>\nCc: Eric Biggers <ebiggers@google.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: John Garry <john.g.garry@oracle.com>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Liam R. Howlett <liam.howlett@oracle.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nLink: https://lore.kernel.org/r/aEce1keWdO-vGeqe@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/11cfaf37d6a79447bde8192e2e3bb2877932b82b"
            },
            {
              "sha": "bbeb1088a40b0da8b832d72e05e1c1cb71535712",
              "author": {
                "email": "namhyung@kernel.org",
                "name": "Namhyung Kim"
              },
              "message": "perf mem: Document new output fields (op, cache, mem, dtlb, snoop)\n\nUpdate the documentation of the new fields with examples and caveats.\n\nAlso update the related documentation for AMD IBS.\n\nReviewed-by: Ravi Bangoria <ravi.bangoria@amd.com>\nSigned-off-by: Namhyung Kim <namhyung@kernel.org>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nLink: https://lore.kernel.org/r/20250610005742.2173050-1-namhyung@kernel.org\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/bbeb1088a40b0da8b832d72e05e1c1cb71535712"
            },
            {
              "sha": "3ce66a48a685f27a931e5bdffb637751c58df7d9",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers UAPI: Sync linux/prctl.h with the kernel sources to pick FUTEX knob\n\nTo pick the changes in:\n\n  63e8595c060a1fef (\"futex: Allow to make the private hash immutable\")\n  80367ad01d93ac78 (\"futex: Add basic infrastructure for local task local hash\")\n\nThat adds a FUTEX knob:\n\n  $ tools/perf/trace/beauty/prctl_option.sh > before\n  $ cp include/uapi/linux/prctl.h tools/perf/trace/beauty/include/uapi/linux/prctl.h\n  $ tools/perf/trace/beauty/prctl_option.sh > after\n  $ diff -u before after\n  --- before\t2025-06-09 14:50:45.162579336 -0300\n  +++ after\t2025-06-09 14:50:52.797660024 -0300\n  @@ -72,6 +72,7 @@\n   \t[75] = \"SET_SHADOW_STACK_STATUS\",\n   \t[76] = \"LOCK_SHADOW_STACK_STATUS\",\n   \t[77] = \"TIMER_CREATE_RESTORE_IDS\",\n  +\t[78] = \"FUTEX_HASH\",\n   };\n   static const char *prctl_set_mm_options[] = {\n   \t[1] = \"START_CODE\",\n  $\n\nThat now will be used to decode the syscall option and also to compose\nfilters, for instance:\n\n  [root@five ~]# perf trace -e syscalls:sys_enter_prctl --filter option==SET_NAME\n       0.000 Isolated Servi/3474327 syscalls:sys_enter_prctl(option: SET_NAME, arg2: 0x7f23f13b7aee)\n       0.032 DOM Worker/3474327 syscalls:sys_enter_prctl(option: SET_NAME, arg2: 0x7f23deb25670)\n       7.920 :3474328/3474328 syscalls:sys_enter_prctl(option: SET_NAME, arg2: 0x7f23e24fbb10)\n       7.935 StreamT~s #374/3474328 syscalls:sys_enter_prctl(option: SET_NAME, arg2: 0x7f23e24fb970)\n       8.400 Isolated Servi/3474329 syscalls:sys_enter_prctl(option: SET_NAME, arg2: 0x7f23e24bab10)\n       8.418 StreamT~s #374/3474329 syscalls:sys_enter_prctl(option: SET_NAME, arg2: 0x7f23e24ba970)\n  ^C[root@five ~]#\n\nThis addresses this perf build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/perf/trace/beauty/include/uapi/linux/prctl.h include/uapi/linux/prctl.h\n\nAcked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nLink: https://lore.kernel.org/r/aEiYOtKkrVDT03hZ@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3ce66a48a685f27a931e5bdffb637751c58df7d9"
            },
            {
              "sha": "f1e30a4269f9636ffe6b0556f336633fac524ba7",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools kvm headers arm64: Update KVM header from the kernel sources\n\nTo pick the changes from:\n\n  b7628c7973765c85 (\"KVM: arm64: Allow userspace to limit the number of PMU counters for EL2 VMs\")\n\nThat doesn't result in any changes in tooling (built on a Raspberry PI 5\nrunning Debian GNU/Linux 12 (bookworm)), only addresses this perf build\nwarning:\n\nWarning: Kernel ABI header differences:\n  diff -u tools/arch/arm64/include/uapi/asm/kvm.h arch/arm64/include/uapi/asm/kvm.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Marc Zyngier <maz@kernel.org>\nCc: Namhyung Kim <namhyung@kernel.org>\nLink: https://lore.kernel.org/r/\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f1e30a4269f9636ffe6b0556f336633fac524ba7"
            },
            {
              "sha": "c30c18709587bba7753f8ee2419bacc9100d6b40",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers UAPI: Sync KVM's vmx.h header with the kernel sources\n\nTo pick the changes in:\n\n  6c441e4d6e729616 (\"KVM: TDX: Handle EXIT_REASON_OTHER_SMI\")\n  c42856af8f70d983 (\"KVM: TDX: Add a place holder for handler of TDX hypercalls (TDG.VP.VMCALL)\")\n\nThat makes 'perf kvm-stat' aware of this new TDCALL exit reason, thus\naddressing the following perf build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/arch/x86/include/uapi/asm/vmx.h arch/x86/include/uapi/asm/vmx.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: Isaku Yamahata <isaku.yamahata@intel.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nLink: https://lore.kernel.org/r/aErcVn_4plQyODR1@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c30c18709587bba7753f8ee2419bacc9100d6b40"
            },
            {
              "sha": "da845e4bf4587cf4a212b607b6d508b00eab5217",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers x86 svm: Sync svm headers with the kernel sources\n\nTo pick the changes in:\n\n  827547bc3a2a2af6 (\"KVM: SVM: Add architectural definitions/assets for Bus Lock Threshold\")\n\nThat triggers:\n\n  CC      /tmp/build/perf-tools/arch/x86/util/kvm-stat.o\n  LD      /tmp/build/perf-tools/arch/x86/util/perf-util-in.o\n  LD      /tmp/build/perf-tools/arch/x86/perf-util-in.o\n  LD      /tmp/build/perf-tools/arch/perf-util-in.o\n  LD      /tmp/build/perf-tools/perf-util-in.o\n  AR      /tmp/build/perf-tools/libperf-util.a\n  LINK    /tmp/build/perf-tools/perf\n\nThe SVM_EXIT_BUS_LOCK exit reason was added to SVM_EXIT_REASONS, used in\nkvm-stat.c.\n\nThis addresses this perf build warning:\n\n Warning: Kernel ABI header differences:\n  diff -u tools/arch/x86/include/uapi/asm/svm.h arch/x86/include/uapi/asm/svm.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Nikunj A Dadhania <nikunj@amd.com>\nCc: Sean Christopherson <seanjc@google.com>\nLink: https://lore.kernel.org/r/aErcjuTTCVEZ-8Nb@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/da845e4bf4587cf4a212b607b6d508b00eab5217"
            },
            {
              "sha": "8fc50bec411e9cc7bba441dc6f7de9af30ea9cbb",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers UAPI: Sync kvm header with the kernel sources\n\nTo pick the changes in:\n\n  c9c1e20b4c7d60fa (\"KVM: x86: Introduce Intel specific quirk KVM_X86_QUIRK_IGNORE_GUEST_PAT\")\n  012426d6f59cab21 (\"KVM: TDX: Finalize VM initialization\")\n  c846b451d3c5d4ba (\"KVM: TDX: Add an ioctl to create initial guest memory\")\n  488808e682e72bdb (\"KVM: x86: Introduce KVM_TDX_GET_CPUID\")\n  a50f673f25e0ba2b (\"KVM: TDX: Do TDX specific vcpu initialization\")\n  0186dd29a251866d (\"KVM: TDX: add ioctl to initialize VM with TDX specific parameters\")\n  61bb28279623b636 (\"KVM: TDX: Get system-wide info about TDX module on initialization\")\n  b2aaf38ced6905b8 (\"KVM: TDX: Add place holder for TDX VM specific mem_enc_op ioctl\")\n\nThis addresses these perf build warnings:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/arch/x86/include/uapi/asm/kvm.h arch/x86/include/uapi/asm/kvm.h\n\nPlease see tools/include/uapi/README for further details.\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: Isaku Yamahata <isaku.yamahata@intel.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Xiaoyao Li <xiaoyao.li@intel.com>\nCc: Yan Zhao <yan.y.zhao@intel.com>\nLink: https://lore.kernel.org/r/aErqLPktXIzGyS-m@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8fc50bec411e9cc7bba441dc6f7de9af30ea9cbb"
            },
            {
              "sha": "47684bfb7c3405aa8f7bfb31f2aa642ffd2b640f",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "perf beauty: Update copy of linux/socket.h with the kernel sources\n\nTo pick the changes in:\n\n  b1e904999542ad67 (\"net: pass const to msg_data_left()\")\n\nThat don't result in any changes in the tables generated from that\nheader.\n\nThis silences this perf build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/perf/trace/beauty/include/linux/socket.h include/linux/socket.h\n\nPlease see tools/include/uapi/README for details.\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Breno Leitao <leitao@debian.org>\nCc: Ian Rogers <irogers@google.com>\nCc: Jakub Kicinski <kuba@kernel.org>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nLink: https://lore.kernel.org/r/aErrK24XLUILFH_P@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/47684bfb7c3405aa8f7bfb31f2aa642ffd2b640f"
            },
            {
              "sha": "c71bc5995409395d5c9094144534912886fd09a7",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers UAPI: Sync the drm/drm.h with the kernel sources\n\nPicking the changes from:\n\n  c2d3a730069545f2 (\"drm/syncobj: Extend EXPORT_SYNC_FILE for timeline syncobjs\")\n\nSilencing these perf build warnings:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/include/uapi/drm/drm.h include/uapi/drm/drm.h\n\nNo changes in tooling as these are just C comment documentation changes:\n\n  $ tools/perf/trace/beauty/drm_ioctl.sh > before\n  $ cp include/uapi/drm/drm.h tools/include/uapi/drm/drm.h\n  $ tools/perf/trace/beauty/drm_ioctl.sh > after\n  $ diff -u before after\n  $\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Christian König <christian.koenig@amd.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Rob Clark <robin.clark@oss.qualcomm.com>\nLink: https://lore.kernel.org/r/aErtHs3T2hdPjjHx@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c71bc5995409395d5c9094144534912886fd09a7"
            },
            {
              "sha": "aa69783a5920d5924d95a198917fa3dd9c2c84a3",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers UAPI: Sync linux/kvm.h with the kernel sources\n\nTo pick the changes in:\n\n  5b9db9c16f428ada (\"RISC-V: KVM: add KVM_CAP_RISCV_MP_STATE_RESET\")\n  a7484c80e5ca1ae0 (\"KVM: arm64: Allow userspace to request KVM_ARM_VCPU_EL2*\")\n  79462faa2b2aa89d (\"KVM: TDX: Handle TDG.VP.VMCALL<ReportFatalError>\")\n\nThat just rebuilds perf, as these patches don't add any new KVM ioctl to\nbe harvested for the the 'perf trace' ioctl syscall argument\nbeautifiers.\n\nThis addresses this perf build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/include/uapi/linux/kvm.h include/uapi/linux/kvm.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Anup Patel <anup@brainfault.org>\nCc: Binbin Wu <binbin.wu@linux.intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Marc Zyngier <maz@kernel.org>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Radim Krčmář <rkrcmar@ventanamicro.com>\nLink: https://lore.kernel.org/r/aEruUUJvR0bfCg7_@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/aa69783a5920d5924d95a198917fa3dd9c2c84a3"
            },
            {
              "sha": "00c8fde72fe2cdbd3892fbdc338c2d3a66ec8db3",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers: Update the copy of x86's mem{cpy,set}_64.S used in 'perf bench'\n\nAlso add SYM_PIC_ALIAS() to tools/perf/util/include/linux/linkage.h.\n\nThis is to get the changes from:\n\n  419cbaf6a56a6e4b (\"x86/boot: Add a bunch of PIC aliases\")\n\nThat addresses these perf tools build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/arch/x86/lib/memcpy_64.S arch/x86/lib/memcpy_64.S\n    diff -u tools/arch/x86/lib/memset_64.S arch/x86/lib/memset_64.S\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ard Biesheuvel <ardb@kernel.org>\nCc: Ian Rogers <irogers@google.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nLink: https://lore.kernel.org/r/aEry7L3fibwIG5au@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/00c8fde72fe2cdbd3892fbdc338c2d3a66ec8db3"
            },
            {
              "sha": "3417404c6f83c5d72d69ae81ded914bdc3841a49",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers: Syncronize linux/build_bug.h with the kernel sources\n\nTo pick up the changes in:\n\n  243c90e917f5cfc9 (\"build_bug.h: more user friendly error messages in BUILD_BUG_ON_ZERO()\")\n\nThis also needed to pick the __BUILD_BUG_ON_ZERO_MSG() in\nlinux/compiler.h, that needed to be polished to avoid hitting old clang\nproblems with _Static_assert on arrays of structs:\n\n  Debian clang version 11.0.1-2~deb10u1\n\n  Debian clang version 11.0.1-2~deb10u1\n  $ make NO_LIBTRACEEVENT=1 ARCH= CROSS_COMPILE= EXTRA_CFLAGS= -C tools/perf O=/tmp/build/perf CC=clang\n  <SNIP>\n  btf_dump.c:895:18: error: type name does not allow storage class to be specified\n          for (i = 0; i < ARRAY_SIZE(pads); i++) {\n                          ^\n  /git/perf-6.16.0-rc1/tools/include/linux/kernel.h:91:59: note: expanded from macro 'ARRAY_SIZE'\n  #define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]) + __must_be_array(arr))\n                                                            ^\n  /git/perf-6.16.0-rc1/tools/include/linux/compiler-gcc.h:26:28: note: expanded from macro '__must_be_array'\n  #define __must_be_array(a)      BUILD_BUG_ON_ZERO(__same_type((a), &(a)[0]))\n                                  ^\n  /git/perf-6.16.0-rc1/tools/include/linux/build_bug.h:17:2: note: expanded from macro 'BUILD_BUG_ON_ZERO'\n          __BUILD_BUG_ON_ZERO_MSG(e, ##__VA_ARGS__, #e \" is true\")\n          ^\n  /git/perf-6.16.0-rc1/tools/include/linux/compiler.h:248:67: note: expanded from macro '__BUILD_BUG_ON_ZERO_MSG'\n  #define __BUILD_BUG_ON_ZERO_MSG(e, msg, ...) ((int)sizeof(struct {_Static_assert(!(e), msg);}))\n                                                                    ^\n  /usr/include/x86_64-linux-gnu/sys/cdefs.h:438:5: note: expanded from macro '_Static_assert'\n      extern int (*__Static_assert_function (void)) \\\n      ^\n\nThese also failed:\n\ntoolsbuilder@five:~$ grep FAIL dm.log/summary | grep clang\n   1    72.87 almalinux:8    : FAIL clang version 19.1.7 ( 19.1.7-2.module_el8.10.0+3990+33d0d926)\n  15    73.39 centos:stream  : FAIL clang version 17.0.6 (Red Hat 17.0.6-1.module_el8+767+9fa966b8)\n  36    87.14 opensuse:15.4  : FAIL clang version 15.0.7\n  37    80.08 opensuse:15.5  : FAIL clang version 15.0.7\n  40    72.12 oraclelinux:8  : FAIL clang version 16.0.6 (Red Hat 16.0.6-2.0.1.module+el8.9.0+90129+d3ee8717)\n  42    74.12 rockylinux:8   : FAIL clang version 16.0.6 (Red Hat 16.0.6-2.module+el8.9.0+1651+e10a8f6d)\ntoolsbuilder@five:~$\n\nThis addresses this perf build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/include/linux/build_bug.h include/linux/build_bug.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Vincent Mailhol <mailhol.vincent@wanadoo.fr>\nCc: Yury Norov <yury.norov@gmail.com>\nLink: https://lore.kernel.org/r/aEszb7SSIJB6Lp6f@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3417404c6f83c5d72d69ae81ded914bdc3841a49"
            },
            {
              "sha": "6143374c6dc874d301dc16612aed144bf4544bae",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools arch x86: Sync the msr-index.h copy with the kernel sources\n\nTo pick up the changes from these csets:\n\n  159013a7ca18c271 (\"x86/its: Enumerate Indirect Target Selection (ITS) bug\")\n  f4138de5e41fae1a (\"x86/msr: Standardize on u64 in <asm/msr-index.h>\")\n  ec980e4facef8110 (\"perf/x86/intel: Support auto counter reload\")\n\nThat cause no changes to tooling as it doesn't include a new MSR to be\ncaptured by the tools/perf/trace/beauty/tracepoints/x86_msr.sh script.\n\nJust silences this perf build warning:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/arch/x86/include/asm/msr-index.h arch/x86/include/asm/msr-index.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nLink: https://lore.kernel.org/r/aEtAUg83OQGx8Kay@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6143374c6dc874d301dc16612aed144bf4544bae"
            },
            {
              "sha": "bb6b4143503750318a3f85975186db899a3caaf2",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools arch amd ibs: Sync ibs.h with the kernel sources\n\nTo pick up the changes from:\n\n  861c6b1185fbb2e3 (\"x86/platform/amd: Add standard header guards to <asm/amd/ibs.h>\")\n\nA small change to tools/perf/check-headers.sh was made to cope with the\nmove of this header done in:\n\n  3846389c03a85188 (\"x86/platform/amd: Move the <asm/amd-ibs.h> header to <asm/amd/ibs.h>\")\n\nThat don't result in any changes in the tools, just address this perf\nbuild warning:\n\nWarning: Kernel ABI header differences:\n  diff -u tools/arch/x86/include/asm/amd/ibs.h arch/x86/include/asm/amd/ibs.h\n\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nLink: https://lore.kernel.org/r/aEtCi0pup5FEwnzn@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/bb6b4143503750318a3f85975186db899a3caaf2"
            },
            {
              "sha": "fc92099902fbf21000554678a47654b029c15a4d",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "tools headers: Synchronize linux/bits.h with the kernel sources\n\nTo pick up the changes in this cset:\n\n  1e7933a575ed8af4 (\"uapi: Revert \"bitops: avoid integer overflow in GENMASK(_ULL)\"\")\n  5b572e8a9f3dcd6e (\"bits: introduce fixed-type BIT_U*()\")\n  19408200c094858d (\"bits: introduce fixed-type GENMASK_U*()\")\n  31299a5e02112411 (\"bits: add comments and newlines to #if, #else and #endif directives\")\n\nThis addresses these perf build warnings:\n\n  Warning: Kernel ABI header differences:\n    diff -u tools/include/linux/bits.h include/linux/bits.h\n\nPlease see tools/include/uapi/README for further details.\n\nAcked-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>\nCc: I Hsin Cheng <richard120310@gmail.com>\nCc: Yury Norov <yury.norov@gmail.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: James Clark <james.clark@linaro.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Lucas De Marchi <lucas.demarchi@intel.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Yury Norov <yury.norov@gmail.com>\nLink: https://lore.kernel.org/r/aEr0ZJ60EbshEy6p@x1\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fc92099902fbf21000554678a47654b029c15a4d"
            },
            {
              "sha": "ebec62bc7ec435b475722a5467d67c720a1ad79f",
              "author": {
                "email": "irogers@google.com",
                "name": "Ian Rogers"
              },
              "message": "perf evsel: Missed close() when probing hybrid core PMUs\n\nAdd missing close() to avoid leaking perf events.\n\nIn past perfs this mattered little as the function was just used by 'perf\nlist'.\n\nAs the function is now used to detect hybrid PMUs leaking the perf event\nis somewhat more painful.\n\nFixes: b41f1cec91c37eee (\"perf list: Skip unsupported events\")\nSigned-off-by: Ian Rogers <irogers@google.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Michael Petlan <mpetlan@redhat.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Namhyung Kim <namhyung.kim@lge.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Tiezhu Yang <yangtiezhu@loongson.cn>\nLink: https://lore.kernel.org/r/20250614004108.1650988-2-irogers@google.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ebec62bc7ec435b475722a5467d67c720a1ad79f"
            },
            {
              "sha": "19f4422d485b2d0a935117a1a16015328f99be25",
              "author": {
                "email": "irogers@google.com",
                "name": "Ian Rogers"
              },
              "message": "perf test: Directory file descriptor leak\n\nAdd missed close when iterating over the script directories.\n\nFixes: f3295f5b067d3c26 (\"perf tests: Use scandirat for shell script finding\")\nSigned-off-by: Ian Rogers <irogers@google.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Kan Liang <kan.liang@linux.intel.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Michael Petlan <mpetlan@redhat.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Tiezhu Yang <yangtiezhu@loongson.cn>\nLink: https://lore.kernel.org/r/20250614004108.1650988-1-irogers@google.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/19f4422d485b2d0a935117a1a16015328f99be25"
            },
            {
              "sha": "1c85c94b3767895d70b7a5a49b111f974f5660ec",
              "author": {
                "email": "acme@redhat.com",
                "name": "Arnaldo Carvalho de Melo"
              },
              "message": "perf bench futex: Fix prctl include in musl libc\n\nNamhyung Kim reported:\n\n  I've updated the perf-tools-next to v6.16-rc1 and found a build error\n  like below on alpine linux 3.18.\n\n    In file included from bench/futex.c:6:\n    /usr/include/sys/prctl.h:88:8: error: redefinition of 'struct prctl_mm_map'\n       88 | struct prctl_mm_map {\n          |        ^~~~~~~~~~~~\n    In file included from bench/futex.c:5:\n    /linux/tools/include/uapi/linux/prctl.h:134:8: note: originally defined here\n      134 | struct prctl_mm_map {\n          |        ^~~~~~~~~~~~\n    make[4]: *** [/linux/tools/build/Makefile.build:86: /build/bench/futex.o] Error 1\n\n  git bisect says it's the first commit introduced the failure.\n\nSo both /usr/include/sys/prctl.h and /linux/tools/include/uapi/linux/prctl.h\nprovide struct prctl_mm_map but their include guard must be different.\n\n/usr/include/sys/prctl.h provided by glibc contains the\nprctl() declaration. It includes also linux/prctl.h.\n\nThe /usr/include/sys/prctl.h on alpine linux is different. This is\nprobably coming from musl. It contains the PR_* definition and the\nprctl() declaration.  So it clashes here because now the one struct is\navailable twice.\n\nThe man page for prctl(2) says:\n\n|       #include <linux/prctl.h>  /* Definition of PR_* constants */\n|       #include <sys/prctl.h>\n\nso musl doesn't follow this.\n\nSo don't include linux/prctl.h explicitely and add some new defines\nneeded if they aren't available.\n\nAcked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nReported-by: Namhyung Kim <namhyung@kernel.org>\nCloses: https://lore.kernel.org/r/20250611092542.F4ooE2FL@linutronix.de\nLink: https://www.openwall.com/lists/musl/2025/06/12/11\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1c85c94b3767895d70b7a5a49b111f974f5660ec"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-21T15:45:20Z"
      },
      {
        "id": "51169515896",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25031222926,
          "size": 9,
          "distinct_size": 9,
          "ref": "refs/heads/master",
          "head": "3f75bfff44be0646580fe4efda45d646f9c1693b",
          "before": "11313e2f78128c948e9b4eb58b3dacfc30964700",
          "commits": [
            {
              "sha": "d8ab68bdb294b09a761e967dad374f2965e1913f",
              "author": {
                "email": "mlombard@redhat.com",
                "name": "Maurizio Lombardi"
              },
              "message": "scsi: target: Fix NULL pointer dereference in core_scsi3_decode_spec_i_port()\n\nThe function core_scsi3_decode_spec_i_port(), in its error code path,\nunconditionally calls core_scsi3_lunacl_undepend_item() passing the\ndest_se_deve pointer, which may be NULL.\n\nThis can lead to a NULL pointer dereference if dest_se_deve remains\nunset.\n\nSPC-3 PR SPEC_I_PT: Unable to locate dest_tpg\nUnable to handle kernel paging request at virtual address dfff800000000012\nCall trace:\n  core_scsi3_lunacl_undepend_item+0x2c/0xf0 [target_core_mod] (P)\n  core_scsi3_decode_spec_i_port+0x120c/0x1c30 [target_core_mod]\n  core_scsi3_emulate_pro_register+0x6b8/0xcd8 [target_core_mod]\n  target_scsi3_emulate_pr_out+0x56c/0x840 [target_core_mod]\n\nFix this by adding a NULL check before calling\ncore_scsi3_lunacl_undepend_item()\n\nSigned-off-by: Maurizio Lombardi <mlombard@redhat.com>\nLink: https://lore.kernel.org/r/20250612101556.24829-1-mlombard@redhat.com\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nReviewed-by: John Meneghini <jmeneghi@redhat.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d8ab68bdb294b09a761e967dad374f2965e1913f"
            },
            {
              "sha": "2a8a5a5dd06eef580f9818567773fd75057cb875",
              "author": {
                "email": "v.shevtsov@mt-integration.ru",
                "name": "Vitaliy Shevtsov"
              },
              "message": "scsi: elx: efct: Fix memory leak in efct_hw_parse_filter()\n\nstrsep() modifies the address of the pointer passed to it so that it no\nlonger points to the original address. This means kfree() gets the wrong\npointer.\n\nFix this by passing unmodified pointer returned from kstrdup() to\nkfree().\n\nFound by Linux Verification Center (linuxtesting.org) with Svace.\n\nFixes: 4df84e846624 (\"scsi: elx: efct: Driver initialization routines\")\nSigned-off-by: Vitaliy Shevtsov <v.shevtsov@mt-integration.ru>\nLink: https://lore.kernel.org/r/20250612163616.24298-1-v.shevtsov@mt-integration.ru\nReviewed-by: Daniel Wagner <dwagner@suse.de>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2a8a5a5dd06eef580f9818567773fd75057cb875"
            },
            {
              "sha": "635e118317ffa773f6d25ec6a71b7927d7e8886a",
              "author": {
                "email": "miquel.raynal@bootlin.com",
                "name": "Miquel Raynal"
              },
              "message": "Revert \"mtd: core: always create master device\"\n\nThe idea behind this patch was to always let a \"master\" mtd device\navailable to anchor runtime PM. Historically, there was no mtd device\nrepresenting the whole storage as soon as partitions were coming into\nplay. The introduction of CONFIG_MTD_PARTITIONED_MASTER allowed to keep\nthis \"master\" device, but was not enabled by default to avoid breaking\nexisting users (otherwise the mtd device numbering would be totally\nmessed up with an off by 1, at least).\n\nThe approach of adding an mtd_master class on top of partitioned mtd\ndevices is breaking the mtd core in many creative ways, so better think\nagain this approach and revert the faulty changes for now.\n\nThis reverts commit 0aa7b390fc40a871267a2328bbbefca8b37ad307.\n\nFixes: 0aa7b390fc40 (\"mtd: core: always create master device\")\nTested-by: Guenter Roeck <linux@roeck-us.net>\nAcked-by: Guenter Roeck <linux@roeck-us.net>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/635e118317ffa773f6d25ec6a71b7927d7e8886a"
            },
            {
              "sha": "60dffe96fab00cee7ef7f1b151da485d42ccb33a",
              "author": {
                "email": "miquel.raynal@bootlin.com",
                "name": "Miquel Raynal"
              },
              "message": "mtd: spinand: winbond: Fix W35N number of planes/LUN\n\nThere's been a mistake when extracting the geometry of the W35N02 and\nW35N04 chips from the datasheet. There is a single plane, however there\nare respectively 2 and 4 LUNs. They are actually referred in the\ndatasheet as dies (equivalent of target), but as there is no die select\noperation and the chips only feature a single configuration register for\nthe entire chip (instead of one per die), we can reasonably assume we\nare talking about LUNs and not dies.\n\nReported-by: Andreas Dannenberg <dannenberg@ti.com>\nSuggested-by: Vignesh Raghavendra <vigneshr@ti.com>\nFixes: 25e08bf66660 (\"mtd: spinand: winbond: Add support for W35N02JW and W35N04JW chips\")\nCc: stable@vger.kernel.org\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/60dffe96fab00cee7ef7f1b151da485d42ccb33a"
            },
            {
              "sha": "29384bbb1a2a5926f97b8cbe469081e7a1770dea",
              "author": {
                "email": "miquel.raynal@bootlin.com",
                "name": "Miquel Raynal"
              },
              "message": "mtd: spinand: winbond: Increase maximum frequency on an octal operation\n\nThe default number of dummy cycles is 16 in octal I/O mode (1S-8S-8S),\nand with this default configuration the maximum frequency is higher than\nwhat is being advertised. There are higher and lower frequency\npossibilities, which involve making changes in the number of dummy\ncycles through the VCR register. At this stage, let's just describe the\ndefault configuration correctly. There should be no functional change.\n\nFixes: 1ac5ff2f2ad6 (\"mtd: spinand: winbond: Add octal support\")\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/29384bbb1a2a5926f97b8cbe469081e7a1770dea"
            },
            {
              "sha": "dba90f5a79c13936de4273a19e67908a0c296afe",
              "author": {
                "email": "miquel.raynal@bootlin.com",
                "name": "Miquel Raynal"
              },
              "message": "mtd: spinand: winbond: Prevent unsupported frequencies on dual/quad I/O variants\n\nDual and quad capable chips natively support dual and quad I/O variants\nat up to 104MHz (1-2-2 and 1-4-4 operations). Reaching the maximum speed\nof 166MHz is theoretically possible (while still unsupported in the\nfield) by adding a few more dummy cycles. Let's be accurate and clearly\nstate this limit.\n\nSetting a maximum frequency implies adding the frequency parameter to\nthe macro, which is done using a variadic argument to avoid impacting\nall the other drivers which already make use of this macro.\n\nFixes: 1ea808b4d15b (\"mtd: spinand: winbond: Update the *JW chip definitions\")\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/dba90f5a79c13936de4273a19e67908a0c296afe"
            },
            {
              "sha": "6463cbe08b0cbf9bba8763306764f5fd643023e1",
              "author": {
                "email": "pmartin-gomez@freebox.fr",
                "name": "Pablo Martin-Gomez"
              },
              "message": "mtd: spinand: fix memory leak of ECC engine conf\n\nMemory allocated for the ECC engine conf is not released during spinand\ncleanup. Below kmemleak trace is seen for this memory leak:\n\nunreferenced object 0xffffff80064f00e0 (size 8):\n  comm \"swapper/0\", pid 1, jiffies 4294937458\n  hex dump (first 8 bytes):\n    00 00 00 00 00 00 00 00                          ........\n  backtrace (crc 0):\n    kmemleak_alloc+0x30/0x40\n    __kmalloc_cache_noprof+0x208/0x3c0\n    spinand_ondie_ecc_init_ctx+0x114/0x200\n    nand_ecc_init_ctx+0x70/0xa8\n    nanddev_ecc_engine_init+0xec/0x27c\n    spinand_probe+0xa2c/0x1620\n    spi_mem_probe+0x130/0x21c\n    spi_probe+0xf0/0x170\n    really_probe+0x17c/0x6e8\n    __driver_probe_device+0x17c/0x21c\n    driver_probe_device+0x58/0x180\n    __device_attach_driver+0x15c/0x1f8\n    bus_for_each_drv+0xec/0x150\n    __device_attach+0x188/0x24c\n    device_initial_probe+0x10/0x20\n    bus_probe_device+0x11c/0x160\n\nFix the leak by calling nanddev_ecc_engine_cleanup() inside\nspinand_cleanup().\n\nSigned-off-by: Pablo Martin-Gomez <pmartin-gomez@freebox.fr>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6463cbe08b0cbf9bba8763306764f5fd643023e1"
            },
            {
              "sha": "a765b9e6db4082eefe6e1581a9495518685e7abf",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Two small and obvious driver fixes\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: elx: efct: Fix memory leak in efct_hw_parse_filter()\n  scsi: target: Fix NULL pointer dereference in core_scsi3_decode_spec_i_port()",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a765b9e6db4082eefe6e1581a9495518685e7abf"
            },
            {
              "sha": "3f75bfff44be0646580fe4efda45d646f9c1693b",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'mtd/fixes-for-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/mtd/linux\n\nPull mtd fixes from Miquel Raynal:\n \"The main fix that really needs to get in is the revert of the patch\n  adding the new mtd_master class, because it entirely fails the\n  partitioning if a specific Kconfig option is set. We need to think how\n  to handle that differently, so let's revert it as we need to get back\n  to the pen and paper situation again.\n\n  Otherwise the definition of some Winbond SPI NAND chips are receiving\n  some fixes (geometry and maximum frequency, mostly).\n\n  And finally a small memory leak gets also fixed\"\n\n* tag 'mtd/fixes-for-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/mtd/linux:\n  mtd: spinand: fix memory leak of ECC engine conf\n  mtd: spinand: winbond: Prevent unsupported frequencies on dual/quad I/O variants\n  mtd: spinand: winbond: Increase maximum frequency on an octal operation\n  mtd: spinand: winbond: Fix W35N number of planes/LUN\n  Revert \"mtd: core: always create master device\"",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3f75bfff44be0646580fe4efda45d646f9c1693b"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-21T05:42:37Z"
      },
      {
        "id": "51169437406",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 25031171446,
          "size": 1,
          "distinct_size": 1,
          "ref": "refs/heads/main",
          "head": "8644dfb6938228f1541247b85edd9b031cb32f2d",
          "before": "861988319969d0ccbb749bc5f2c4d57ba1f0d408",
          "commits": [
            {
              "sha": "8644dfb6938228f1541247b85edd9b031cb32f2d",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Work on signal generation for simulation some more\n\nIt turns out that I was wrong about there being something wrong with the\nImSquared circuit: it seems to work just fine, and the fact that the\ninput signal gets used for both the blending and the multiplier input\nappears perfectly ok.\n\nThe impedance into the multiplier should be very high as-is.  Famous\nlast confused words.\n\nWhat confused me was misreading the output signal: I had expected hard\nedges from the triangle input, and so I assumed that the soft curve was\ndue to some saturation or soft clipping issue and was blaming something\ngoing wrong in the circuit.\n\nBut that was a complete thinko: the soft output curve was in fact just\nthe parabola of the triange wave (locally a linear \"y=ax+b\" function\nwhen *not* looking at the peaks) being squared and becoming second-order\nfunction (\"y=az^2+b\").\n\nSo those soft signals had nothing to do with the actual peaks of the\ntriangle - quite the opposite.  They were from the linear part of the\ntriangle wave when it switched signs.\n\nErgo, it actually worked exactly as designed, and I just misread the\noutput because I didn't line up the peaks and troughs correctly.\n\nThat said, the input signal is still much too simplistic.  The triangle\nwave was better than a pure sine wave, but I want more dynamic range to\nsee any actual clipping issues.  So of the native signal generator\nfunctions, let's try the amplitude-modulated signal instead, which gives\na combination of \"quiet\" and \"loud\" sections.\n\nThat already shows an interesting artifact: the output signal is\nobviously a linear function of the current (it's the voltage drop over\nthe resistor R2), and I was naively expecting it to be centered around a\ncenter voltage (the \"half of the 1mA current\" point, so roughly centered\nat 8V in between the 7-9V peaks).\n\nAnd it *is* technically centered right around the expected location, but\nit's the *differential* output Vd(OUT1,OUT2) that is so centered.\n\nAnd we obviously only tap one side (OUT1), and that's not centered\nbecause that \"x squared\" function is obviously all one sign.  So you\nactually get two disjoint OUT1/OUT2 voltage signals, and when you tap\nonly one side, you get this unbalanced thing.\n\nThe re-biasing to GNDREF then _slightly_ ends up also centering things,\nbut unless you are willing to lose a lot of low frequencies, not very\nmuch.  So a more interesting amplitude-modulated input signal shows\nthese kinds of effects very clearly.\n\nWill this matter? Probably not.  The signal might sound bad for any\nnumber of reasons, and I doubt the partial biasing is a big issue.  But\nthis does make it clear that I need to use better input waveforms to see\nissues like this.\n\nThe voltage-modulated signal is clearly a more interesting signal to\ntest.  There are probably better ones still, but let's at least take\nthat baby step.\n\nYou can change the amplitude numbers to actually see clear clipping\neffects.  That's partially what the 'input' pot is supposed to be about,\nbut we have a definite voltage range for the input that the multiplier\nbiasing points work for, and that input range may be a bit too limited.\n\nI clearly tuned this for the 0.1-0.2V amplitude range, and it shows.\n\nOf course, maybe that \"more distortion at higher signal amplitude\nlevels\" is a good thing.  It's obviously how diode clipping works, so\nit's certainly very traditional.  But I was kind of chasing the\ndistortion just from the frequency doubling part.\n\nThat said, I did hope that \"small signals result in smaller distortion\"\nwould make this multiplier a better-sounding octave-up effect than the\nrectifier (along with the lack of introduced harsh edges at sign\ncrossing).\n\nSo \"more distortion at high volume\" _might_ be a feature, even if that\ndistortion then comes from the clipping in addition to the frequency\ndoubling.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/8644dfb6938228f1541247b85edd9b031cb32f2d"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-21T05:34:19Z"
      },
      {
        "id": "51156664146",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25024116478,
          "size": 38,
          "distinct_size": 38,
          "ref": "refs/heads/master",
          "head": "11313e2f78128c948e9b4eb58b3dacfc30964700",
          "before": "75f5f23f8787c5e184fcb2fbcd02d8e9317dc5e7",
          "commits": [
            {
              "sha": "22188b9df60dde48eaba276da22062aaf8e12dfe",
              "author": {
                "email": "harshit.m.mogalapalli@oracle.com",
                "name": "Harshit Mogalapalli"
              },
              "message": "ASoC: cs48l32: Fix a signedness bug in cs48l32_hw_params()\n\nThere is a type promotion that can happen when freq(u32) variable is\ncomapared with sclk_target(integer), when sclk_target is a negative\nvalue it promotes to a large postive integer which might not be a\nproblem in this particular case as the condition evaluates to false\nwhen that happens, but bail out early when sclk_target has negative\nerror codes.\n\n\tcs48l32_sclk_rates[i].freq >= sclk_target\n\nFix this by adding a negative error check when\nsnd_soc_tdm_params_to_bclk() fails\n\nFixes: e2bcbf99d045 (\"ASoC: cs48l32: Add driver for Cirrus Logic CS48L32 audio DSP\")\nSigned-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>\nLink: https://patch.msgid.link/20250603214813.197346-1-harshit.m.mogalapalli@oracle.com\nReviewed-by: Richard Fitzgerald <rf@opensource.cirrus.com>\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/22188b9df60dde48eaba276da22062aaf8e12dfe"
            },
            {
              "sha": "b44b2694005b501b2eaeb56aa778f3ca22de4659",
              "author": {
                "email": "zhangyi@everest-semi.com",
                "name": "Zhang Yi"
              },
              "message": "ASoC: codecs: ES8326: Modify initialization configuration\n\nModify the value of ES8326_SDINOUT1_IO in the initialization\n\nSigned-off-by: Zhang Yi <zhangyi@everest-semi.com>\nLink: https://patch.msgid.link/20250604061821.2678-1-zhangyi@everest-semi.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b44b2694005b501b2eaeb56aa778f3ca22de4659"
            },
            {
              "sha": "a4e469c1e2e0ec7f08fff9ed29f5500f187ba9f2",
              "author": {
                "email": "chenhuacai@loongson.cn",
                "name": "Huacai Chen"
              },
              "message": "ASoC: loongson: Fix build warnings about export.h\n\nAfter commit 25704938c86d7b2 (\"scripts/misc-check: check missing #include\n<linux/export.h> when W=1\") and 1239f681359926101e (\"scripts/misc-check:\ncheck unnecessary #include <linux/export.h> when W=1\"), we get some build\nwarnings with W=1:\n\nsound/soc/loongson/loongson_i2s.c: warning: EXPORT_SYMBOL() is used, but #include <linux/export.h> is missing\n\nSo fix these build warnings for ASoC/Loongson.\n\nSigned-off-by: Huacai Chen <chenhuacai@loongson.cn>\nLink: https://patch.msgid.link/20250608142737.168829-1-chenhuacai@loongson.cn\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a4e469c1e2e0ec7f08fff9ed29f5500f187ba9f2"
            },
            {
              "sha": "c987a390f1b3b8bdac11031d7004e3410fe259bd",
              "author": {
                "email": "tiwai@suse.de",
                "name": "Takashi Iwai"
              },
              "message": "ALSA: hda/intel: Add Thinkpad E15 to PM deny list\n\nLenovo Thinkpad E15 with Conexant CX8070 codec seems causing ugly\nnoises after runtime-PM suspend.  Disable the codec runtime PM as a\nworkaround.\n\nLink: https://bugzilla.kernel.org/show_bug.cgi?id=220210\nCc: <stable@vger.kernel.org>\nLink: https://patch.msgid.link/20250608091415.21170-1-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c987a390f1b3b8bdac11031d7004e3410fe259bd"
            },
            {
              "sha": "f00de8e82cab24ef2e2cae0b297b4dc46c3e37ca",
              "author": {
                "email": "listout@listout.xyz",
                "name": "Brahmajit Das"
              },
              "message": "ALSA: ctxfi: Replace deprecated strcpy() with strscpy()\n\nstrcpy() is deprecated; use strscpy() instead. Use strscpy() to copy the\nlong name because there's no string to format with sprintf().\n\nNo functional changes intended.\n\nLink: https://github.com/KSPP/linux/issues/88\n\nSigned-off-by: Brahmajit Das <listout@listout.xyz>\nLink: https://patch.msgid.link/20250606204000.8156-1-listout@listout.xyz\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f00de8e82cab24ef2e2cae0b297b4dc46c3e37ca"
            },
            {
              "sha": "a0914bf56e26d2cf457690602883f9cd2ec2c646",
              "author": {
                "email": "edip@medip.dev",
                "name": "Edip Hazuri"
              },
              "message": "ALSA: hda/realtek - Add mute LED support for HP Victus 16-s1xxx and HP Victus 15-fa1xxx\n\nThe mute led on those laptops is using ALC245 but requires a quirk to work\nThis patch enables the existing quirk for the devices.\n\nTested on my Victus 16-s1011nt Laptop and my friend's Victus\n15-fa1xxx. The LED behaviour works as intended.\n\nCc: <stable@vger.kernel.org>\nSigned-off-by: Edip Hazuri <edip@medip.dev>\nLink: https://patch.msgid.link/20250609075943.13934-2-edip@medip.dev\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a0914bf56e26d2cf457690602883f9cd2ec2c646"
            },
            {
              "sha": "c6451a7325874c119def1d4094f6815c0c8fdc23",
              "author": {
                "email": "chris.chiu@canonical.com",
                "name": "Chris Chiu"
              },
              "message": "ALSA: hda/realtek: Fix built-in mic on ASUS VivoBook X513EA\n\nThe built-in mic of ASUS VivoBook X513EA is broken recently by the\nfix of the pin sort. The fixup ALC256_FIXUP_ASUS_MIC_NO_PRESENCE\nis working for addressing the regression, too.\n\nFixes: 3b4309546b48 (\"ALSA: hda: Fix headset detection failure due to unstable sort\")\nSigned-off-by: Chris Chiu <chris.chiu@canonical.com>\nCc: <stable@vger.kernel.org>\nLink: https://patch.msgid.link/20250610035607.690771-1-chris.chiu@canonical.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c6451a7325874c119def1d4094f6815c0c8fdc23"
            },
            {
              "sha": "7b23887a0c70d15459f02c51651a111e9e5cab86",
              "author": {
                "email": "rf@opensource.cirrus.com",
                "name": "Richard Fitzgerald"
              },
              "message": "ALSA: hda/realtek: Add quirk for Asus GU605C\n\nThe GU605C has similar audio hardware to the GU605M so apply the\nsame quirk.\n\nNote that in the linked bugzilla there are two separate problems\nwith the GU605C. This patch fixes one of the problems, so I haven't\nadded a Closes: tag.\n\nSigned-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>\nReported-by: Nick Karaolidis <nick@karaolidis.com>\nLink: https://bugzilla.kernel.org/show_bug.cgi?id=220152\nCc: <stable@vger.kernel.org>\nLink: https://patch.msgid.link/20250609102125.63196-1-rf@opensource.cirrus.com\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7b23887a0c70d15459f02c51651a111e9e5cab86"
            },
            {
              "sha": "ed29e073ba93f2d52832804cabdd831d5d357d33",
              "author": {
                "email": "tiwai@suse.de",
                "name": "Takashi Iwai"
              },
              "message": "ALSA: sb: Don't allow changing the DMA mode during operations\n\nWhen a PCM stream is already running, one shouldn't change the DMA\nmode via kcontrol, which may screw up the hardware.  Return -EBUSY\ninstead.\n\nLink: https://bugzilla.kernel.org/show_bug.cgi?id=218185\nLink: https://patch.msgid.link/20250610064322.26787-1-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ed29e073ba93f2d52832804cabdd831d5d357d33"
            },
            {
              "sha": "4c267ae2ef349639b4d9ebf00dd28586a82fdbe6",
              "author": {
                "email": "tiwai@suse.de",
                "name": "Takashi Iwai"
              },
              "message": "ALSA: sb: Force to disable DMAs once when DMA mode is changed\n\nWhen the DMA mode is changed on the (still real!) SB AWE32 after\nplaying a stream and closing, the previous DMA setup was still\nsilently kept, and it can confuse the hardware, resulting in the\nunexpected noises.  As a workaround, enforce the disablement of DMA\nsetups when the DMA setup is changed by the kcontrol.\n\nhttps://bugzilla.kernel.org/show_bug.cgi?id=218185\nLink: https://patch.msgid.link/20250610064322.26787-2-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4c267ae2ef349639b4d9ebf00dd28586a82fdbe6"
            },
            {
              "sha": "e0d4a0f1d066f14522049e827107a577444d9183",
              "author": {
                "email": "shenyang39@huawei.com",
                "name": "Yang Shen"
              },
              "message": "MAINTAINERS: Update HiSilicon GPIO driver maintainer\n\nAdd Yang Shen as the maintainer of the HiSilicon GPIO driver,\nreplacing Jay Fang.\n\nSigned-off-by: Yang Shen <shenyang39@huawei.com>\nReviewed-by: Jay Fang <f.fangjian@huawei.com>\nLink: https://lore.kernel.org/r/20250529034023.3780376-1-shenyang39@huawei.com\nSigned-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e0d4a0f1d066f14522049e827107a577444d9183"
            },
            {
              "sha": "6325766d69900d1aa9733fc7572456fc4427b708",
              "author": {
                "email": "thorsten.blum@linux.dev",
                "name": "Thorsten Blum"
              },
              "message": "ASoC: sdw_utils: Fix potential NULL pointer deref in is_sdca_endpoint_present()\n\nCheck the return value of kzalloc() and exit early to avoid a potential\nNULL pointer dereference.\n\nCc: stable@vger.kernel.org\nFixes: 4f8ef33dd44a (\"ASoC: soc_sdw_utils: skip the endpoint that doesn't present\")\nSigned-off-by: Thorsten Blum <thorsten.blum@linux.dev>\nLink: https://patch.msgid.link/20250610103225.1475-2-thorsten.blum@linux.dev\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6325766d69900d1aa9733fc7572456fc4427b708"
            },
            {
              "sha": "72f37957007d25f4290e3ba40d40aaec1dd0b0cf",
              "author": {
                "email": "zhoubinbin@loongson.cn",
                "name": "Binbin Zhou"
              },
              "message": "gpio: loongson-64bit: Correct Loongson-7A2000 ACPI GPIO access mode\n\nAccording to the description of the Loongson-7A2000 ACPI GPIO register in\nthe manual, its access mode should be BIT_CTRL_MODE, otherwise there maybe\nsome unpredictable behavior.\n\nCc: stable@vger.kernel.org\nFixes: 44fe79020b91 (\"gpio: loongson-64bit: Add more gpio chip support\")\nSigned-off-by: Binbin Zhou <zhoubinbin@loongson.cn>\nReviewed-by: Huacai Chen <chenhuacai@loongson.cn>\nLink: https://lore.kernel.org/r/20250610115926.347845-1-zhoubinbin@loongson.cn\nSigned-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/72f37957007d25f4290e3ba40d40aaec1dd0b0cf"
            },
            {
              "sha": "d1fc7687959b0fbf335815a8d808e6076b969309",
              "author": {
                "email": "rf@opensource.cirrus.com",
                "name": "Richard Fitzgerald"
              },
              "message": "ASoC: cs35l56: Use SoundWire address as firmware name suffix for new silicon\n\nUse the SoundWire link number and device unique ID as the firmware file\nqualifier suffix on CS35L57, CS35L63 and revisions of CS35L56 after B0. The\nchange in wm_adsp needed to support this has been included in this patch\nbecause it is fairly trivial.\n\nOriginally, the firmware file names indicated which amplifier instance they\nwere for by appending the ALSA prefix string. This is the standard ASoC way\nof distinguishing different instances of the same device. However, on\nSoundWire systems the SoundWire physical unique address is available as a\nunique identifier for each amp, and this address is hardwired by a pin on\nthe amp.\n\nThe firmware files are specific for each physical amp so they must be\napplied to that amp. Using the ALSA prefix for the filename qualifier means\nthat to name a firmware file it must be determined what prefix string the\nmachine driver will assign to each device and then use that to name the\nfirmware file correctly. This is straightforward in traditional ASoC\nsystems where the machine driver is specific to a particular piece of\nhardware. But on SoundWire the machine driver is generic and can handle a\nvery wide range of hardware. It is more difficult to determine exactly what\nthe prefix will be on any particular production device, and more prone to\nmistakes. Also, when the machine driver switches to generating this\nautomatically from SDCA properties in ACPI, there is an additional layer of\ncomplexity in determining the mapping. This uncertainty is unnecessary\nbecause the firmware is built for a specific amp. with known address, so we\ncan use that directly instead of introducing the redundant intermediate\nalias. This ensures the firmware is applied to the amp it was intended for.\n\nThere have not been any firmwares published for CS35L57 or CS35L63, so\nthese can safely be switched to using the SoundWire unique address as the\nsuffix string. Also note that the machine driver in older kernel version\nonly has match entries for the CS35L56 Soundwire identity so any future\nproduct with a cs35L57 or CS35L63 would require a new kernel anyway.\n\nThere are already many published firmware for CS35L56 B0 silicon so this\nkeeps the original naming scheme on those, to preserve backward\ncompatibility.\n\nNote that although sdw_slave.id contains a unique_id field, this cannot\nbe trusted because the SoundWire core code also puts magic values into it\nthat it uses as a flag. So the unique ID is read from the chip register.\n\nSigned-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>\nLink: https://patch.msgid.link/20250612121428.1667-2-rf@opensource.cirrus.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d1fc7687959b0fbf335815a8d808e6076b969309"
            },
            {
              "sha": "e5d5b3aebdc8acf9f52d1369a7744a2ab9ca591c",
              "author": {
                "email": "rf@opensource.cirrus.com",
                "name": "Richard Fitzgerald"
              },
              "message": "ASoC: cs35l56: Use SoundWire address as alternate firmware suffix on L56 B0\n\nUse the SoundWire link number and device unique ID as the firmware file\nqualifier suffix on CS35L56 B0 if .bin files are not found with the older\nsuffix. Some changes in wm_adsp needed to support this have been included\nin this patch because they are trivial.\n\nThe allows future products with CS35L56 B0 silicon to use the same firmware\nfile naming as CS35L57 and cs35L63, while retaining backward compatibility\nfor firmware that has already been published with the old naming scheme.\n\nThe old suffix is searched first, partly because there are already many\nfiles using that naming scheme, but also because they are a smaller subset\nof all the possible fallback name options offered by wm_adsp so we know\nthat it will either find the qualified files or fail. All the firmware\nfiles already published have the wmfw qualified with only the ACPI SSID and\nthe bin files qualified with both SSID and the suffix.\n\nOriginally, the firmware file names indicated which amplifier instance they\nwere for by appending the ALSA prefix string. This is the standard ASoC way\nof distinguishing different instances of the same device. However, on\nSoundWire systems the SoundWire physical unique address is available as a\nunique identifier for each amp, and this address is hardwired by the\naddress pin on the amp.\n\nThe firmware files are specific for each physical amp so they must be\napplied to that amp. Using the ALSA prefix for the filename qualifier means\nthat to name a firmware file it must be determined what prefix string the\nmachine driver will assign to each device and then use that to name the\nfirmware file correctly. This is straightforward in traditional ASoC\nsystems where the machine driver is specific to a particular piece of\nhardware. But on SoundWire the machine driver is generic and can handle a\nvery wide range of hardware. It is more difficult to determine exactly what\nthe prefix will be on any particular production device, and more prone to\nmistakes. Also, when the machine driver switches to generating this\nautomatically from SDCA properties in ACPI, there is an additional layer of\ncomplexity in determining the mapping. This uncertainty is unnecessary\nbecause the firmware is built for a specific amp. with known address, so we\ncan use that directly instead of introducing a redundant intermediate\nalias. This ensures the firmware is applied to the amp it was intended for.\n\nThere are already many published firmware for CS35L56 B0 silicon so this\nfirst looks for the original name suffix, to keep backward compatibility.\nIf this doesn't find .bin files it will switch to using the new name suffix\nso that future products using CS35L56 B0 can start to use the new suffix.\n\nSigned-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>\nLink: https://patch.msgid.link/20250612121428.1667-3-rf@opensource.cirrus.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e5d5b3aebdc8acf9f52d1369a7744a2ab9ca591c"
            },
            {
              "sha": "fa8fae5f82e48db1a06ba570a2a3fdc087fc93c0",
              "author": {
                "email": "rf@opensource.cirrus.com",
                "name": "Richard Fitzgerald"
              },
              "message": "ASoC: doc: cs35l56: Update to add new SoundWire firmware filename suffix\n\nAdd the new firmware filename suffix used for SoundWire systems with\nCS35L57, CS35L63 or CS35L56 later than B0 silicon. This uses the SoundWire\nphysical address of the amp to identify which firmware file to load on that\namp.\n\nSigned-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>\nLink: https://patch.msgid.link/20250612121428.1667-4-rf@opensource.cirrus.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fa8fae5f82e48db1a06ba570a2a3fdc087fc93c0"
            },
            {
              "sha": "ba06528ad5a31923efc24324706116ccd17e12d8",
              "author": {
                "email": "santesegabriel@gmail.com",
                "name": "Gabriel Santese"
              },
              "message": "ASoC: amd: yc: Add quirk for MSI Bravo 17 D7VF internal mic\n\nMSI Bravo 17 (D7VF), like other laptops from the family,\nhas broken ACPI tables and needs a quirk for internal mic\nto work properly.\n\nSigned-off-by: Gabriel Santese <santesegabriel@gmail.com>\nLink: https://patch.msgid.link/20250530005444.23398-1-santesegabriel@gmail.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ba06528ad5a31923efc24324706116ccd17e12d8"
            },
            {
              "sha": "c0c7fa4e7a512006710c8e4d6b6f7b40c9f786cd",
              "author": {
                "email": "lpieralisi@kernel.org",
                "name": "Lorenzo Pieralisi"
              },
              "message": "docs: arm64: Fix ICC_SRE_EL2 register typo in booting.rst\n\nFix trivial ICC_SRE_EL2 register spelling typo in booting.rst.\n\nSigned-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>\nCc: Jonathan Corbet <corbet@lwn.net>\nCc: Will Deacon <will@kernel.org>\nCC: Catalin Marinas <catalin.marinas@arm.com>\nLink: https://lore.kernel.org/r/20250610120935.852034-1-lpieralisi@kernel.org\nSigned-off-by: Will Deacon <will@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c0c7fa4e7a512006710c8e4d6b6f7b40c9f786cd"
            },
            {
              "sha": "650768c512faba8070bf4cfbb28c95eb5cd203f3",
              "author": {
                "email": "dev.jain@arm.com",
                "name": "Dev Jain"
              },
              "message": "arm64: Restrict pagetable teardown to avoid false warning\n\nCommit 9c006972c3fe (\"arm64: mmu: drop pXd_present() checks from\npXd_free_pYd_table()\") removes the pxd_present() checks because the\ncaller checks pxd_present(). But, in case of vmap_try_huge_pud(), the\ncaller only checks pud_present(); pud_free_pmd_page() recurses on each\npmd through pmd_free_pte_page(), wherein the pmd may be none. Thus it is\npossible to hit a warning in the latter, since pmd_none => !pmd_table().\nThus, add a pmd_present() check in pud_free_pmd_page().\n\nThis problem was found by code inspection.\n\nFixes: 9c006972c3fe (\"arm64: mmu: drop pXd_present() checks from pXd_free_pYd_table()\")\nCc: stable@vger.kernel.org\nReported-by: Ryan Roberts <ryan.roberts@arm.com>\nAcked-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Dev Jain <dev.jain@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nReviewed-by: Anshuman Khandual <anshuman.khandual@arm.com>\nReviewed-by: Ryan Roberts <ryan.roberts@arm.com>\nLink: https://lore.kernel.org/r/20250527082633.61073-1-dev.jain@arm.com\nSigned-off-by: Will Deacon <will@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/650768c512faba8070bf4cfbb28c95eb5cd203f3"
            },
            {
              "sha": "d2be3270f40b1330f8c1c9512c59dd085a758ac0",
              "author": {
                "email": "broonie@kernel.org",
                "name": "Mark Brown"
              },
              "message": "arm64/gcs: Don't call gcs_free() during flush_gcs()\n\nCurrently we call gcs_free() during flush_gcs() to reset the thread\nstate for GCS. This includes unmapping any kernel allocated GCS, but\nthis is redundant when doing a flush_thread() since we are\nreinitialising the thread memory too. Inline the reinitialisation of the\nthread struct.\n\nSigned-off-by: Mark Brown <broonie@kernel.org>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nLink: https://lore.kernel.org/r/20250611-arm64-gcs-flush-thread-v1-1-cc26feeddabd@kernel.org\nSigned-off-by: Will Deacon <will@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d2be3270f40b1330f8c1c9512c59dd085a758ac0"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-20T17:28:09Z"
      },
      {
        "id": "51132312840",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25012228902,
          "size": 69,
          "distinct_size": 69,
          "ref": "refs/heads/master",
          "head": "75f5f23f8787c5e184fcb2fbcd02d8e9317dc5e7",
          "before": "41687a5c6f8b07ad0850d6c46452376d54fe9b65",
          "commits": [
            {
              "sha": "83c4c67076c209787515e06fffd41dd0bdab09b9",
              "author": {
                "email": "james.a.macinnes@gmail.com",
                "name": "James A. MacInnes"
              },
              "message": "drm/msm/dp: Disable wide bus support for SDM845\n\nWhen widebus was enabled for DisplayPort in commit c7c412202623\n(\"drm/msm/dp: enable widebus on all relevant chipsets\") it was clarified\nthat it is only supported on DPU 5.0.0 onwards which includes SC7180 on\nDPU revision 6.2.  However, this patch missed that the description\nstructure for SC7180 is also reused for SDM845 (because of identical\nio_start address) which is only DPU 4.0.0, leading to a wrongly enbled\nwidebus feature and corruption on that platform.\n\nCreate a separate msm_dp_desc_sdm845 structure for this SoC compatible,\nwith the wide_bus_supported flag turned off.\n\nFixes: c7c412202623 (\"drm/msm/dp: enable widebus on all relevant chipsets\")\nSigned-off-by: James A. MacInnes <james.a.macinnes@gmail.com>\n[DB: reworded commit text following Marijn's suggestion]\nReviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>\nReviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>\nPatchwork: https://patchwork.freedesktop.org/patch/636944/\nLink: https://lore.kernel.org/r/20250212-sdm845_dp-v2-1-4954e51458f4@gmail.com\nSigned-off-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/83c4c67076c209787515e06fffd41dd0bdab09b9"
            },
            {
              "sha": "146e87f3e11de0dfa091ff87e34b4bc6eec761a4",
              "author": {
                "email": "james.a.macinnes@gmail.com",
                "name": "James A. MacInnes"
              },
              "message": "drm/msm/disp: Correct porch timing for SDM845\n\nType-C DisplayPort inoperable due to incorrect porch settings.\n- Re-used wide_bus_en as flag to prevent porch shifting\n\nFixes: c943b4948b58 (\"drm/msm/dp: add displayPort driver support\")\nSigned-off-by: James A. MacInnes <james.a.macinnes@gmail.com>\nReviewed-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nPatchwork: https://patchwork.freedesktop.org/patch/636945/\nLink: https://lore.kernel.org/r/20250212-sdm845_dp-v2-2-4954e51458f4@gmail.com\nSigned-off-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/146e87f3e11de0dfa091ff87e34b4bc6eec761a4"
            },
            {
              "sha": "8a48e35becb214743214f5504e726c3ec131cd6d",
              "author": {
                "email": "krzysztof.kozlowski@linaro.org",
                "name": "Krzysztof Kozlowski"
              },
              "message": "drm/msm/dsi/dsi_phy_10nm: Fix missing initial VCO rate\n\nDriver unconditionally saves current state on first init in\ndsi_pll_10nm_init(), but does not save the VCO rate, only some of the\ndivider registers.  The state is then restored during probe/enable via\nmsm_dsi_phy_enable() -> msm_dsi_phy_pll_restore_state() ->\ndsi_10nm_pll_restore_state().\n\nRestoring calls dsi_pll_10nm_vco_set_rate() with\npll_10nm->vco_current_rate=0, which basically overwrites existing rate of\nVCO and messes with clock hierarchy, by setting frequency to 0 to clock\ntree.  This makes anyway little sense - VCO rate was not saved, so\nshould not be restored.\n\nIf PLL was not configured configure it to minimum rate to avoid glitches\nand configuring entire in clock hierarchy to 0 Hz.\n\nSuggested-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nLink: https://lore.kernel.org/r/sz4kbwy5nwsebgf64ia7uq4ee7wbsa5uy3xmlqwcstsbntzcov@ew3dcyjdzmi2/\nSigned-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nFixes: a4ccc37693a2 (\"drm/msm/dsi_pll_10nm: restore VCO rate during\nReviewed-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nPatchwork: https://patchwork.freedesktop.org/patch/654796/\nLink: https://lore.kernel.org/r/20250520111325.92352-2-krzysztof.kozlowski@linaro.org\nSigned-off-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8a48e35becb214743214f5504e726c3ec131cd6d"
            },
            {
              "sha": "5d319f75ccf7f0927425a7545aa1a22b3eedc189",
              "author": {
                "email": "robdclark@chromium.org",
                "name": "Rob Clark"
              },
              "message": "drm/msm: Fix a fence leak in submit error path\n\nIn error paths, we could unref the submit without calling\ndrm_sched_entity_push_job(), so msm_job_free() will never get\ncalled.  Since drm_sched_job_cleanup() will NULL out the\ns_fence, we can use that to detect this case.\n\nSigned-off-by: Rob Clark <robdclark@chromium.org>\nPatchwork: https://patchwork.freedesktop.org/patch/653584/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5d319f75ccf7f0927425a7545aa1a22b3eedc189"
            },
            {
              "sha": "f681c2aa8676a890eacc84044717ab0fd26e058f",
              "author": {
                "email": "robdclark@chromium.org",
                "name": "Rob Clark"
              },
              "message": "drm/msm: Fix another leak in the submit error path\n\nput_unused_fd() doesn't free the installed file, if we've already done\nfd_install().  So we need to also free the sync_file.\n\nSigned-off-by: Rob Clark <robdclark@chromium.org>\nPatchwork: https://patchwork.freedesktop.org/patch/653583/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f681c2aa8676a890eacc84044717ab0fd26e058f"
            },
            {
              "sha": "0c5fea1eb0dc234cd321bcd19a6bd0f51273b4c6",
              "author": {
                "email": "cwabbott0@gmail.com",
                "name": "Connor Abbott"
              },
              "message": "drm/msm: Don't use a worker to capture fault devcoredump\n\nNow that we use a threaded IRQ, it should be safe to do this in the\nfault handler.\n\nWe can also remove fault_info from struct msm_gpu and just pass it\ndirectly.\n\nSigned-off-by: Connor Abbott <cwabbott0@gmail.com>\nPatchwork: https://patchwork.freedesktop.org/patch/654889/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0c5fea1eb0dc234cd321bcd19a6bd0f51273b4c6"
            },
            {
              "sha": "dedf404be8cf97e6fabbed7ad97000ab816897eb",
              "author": {
                "email": "cwabbott0@gmail.com",
                "name": "Connor Abbott"
              },
              "message": "drm/msm: Delete resume_translation()\n\nUnused since the previous commit.\n\nSigned-off-by: Connor Abbott <cwabbott0@gmail.com>\nPatchwork: https://patchwork.freedesktop.org/patch/654890/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/dedf404be8cf97e6fabbed7ad97000ab816897eb"
            },
            {
              "sha": "b13044092c1e30453d2f7e9be596d3a2616582a0",
              "author": {
                "email": "cwabbott0@gmail.com",
                "name": "Connor Abbott"
              },
              "message": "drm/msm: Temporarily disable stall-on-fault after a page fault\n\nWhen things go wrong, the GPU is capable of quickly generating millions\nof faulting translation requests per second. When that happens, in the\nstall-on-fault model each access will stall until it wins the race to\nsignal the fault and then the RESUME register is written. This slows\nprocessing page faults to a crawl as the GPU can generate faults much\nfaster than the CPU can acknowledge them. It also means that all\navailable resources in the SMMU are saturated waiting for the stalled\ntransactions, so that other transactions such as transactions generated\nby the GMU, which shares translation resources with the GPU, cannot\nproceed. This causes a GMU watchdog timeout, which leads to a failed\nreset because GX cannot collapse when there is a transaction pending and\na permanently hung GPU.\n\nOn older platforms with qcom,smmu-v2, it seems that when one transaction\nis stalled subsequent faulting transactions are terminated, which avoids\nthis problem, but the MMU-500 follows the spec here.\n\nTo work around these problems, disable stall-on-fault as soon as we get a\npage fault until a cooldown period after pagefaults stop. This allows\nthe GMU some guaranteed time to continue working. We only use\nstall-on-fault to halt the GPU while we collect a devcoredump and we\nalways terminate the transaction afterward, so it's fine to miss some\nsubsequent page faults. We also keep it disabled so long as the current\ndevcoredump hasn't been deleted, because in that case we likely won't\ncapture another one if there's a fault.\n\nAfter this commit HFI messages still occasionally time out, because the\ncrashdump handler doesn't run fast enough to let the GMU resume, but the\ndriver seems to recover from it. This will probably go away after the\nHFI timeout is increased.\n\nSigned-off-by: Connor Abbott <cwabbott0@gmail.com>\nReviewed-by: Rob Clark <robdclark@gmail.com>\nPatchwork: https://patchwork.freedesktop.org/patch/654891/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b13044092c1e30453d2f7e9be596d3a2616582a0"
            },
            {
              "sha": "b1c9e797ad37d188675505b66a3a4bbeea5d9560",
              "author": {
                "email": "cwabbott0@gmail.com",
                "name": "Connor Abbott"
              },
              "message": "drm/msm: Fix CP_RESET_CONTEXT_STATE bitfield names\n\nBased on kgsl.\n\nFixes: af66706accdf (\"drm/msm/a6xx: Add skeleton A7xx support\")\nSigned-off-by: Connor Abbott <cwabbott0@gmail.com>\nPatchwork: https://patchwork.freedesktop.org/patch/654922/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b1c9e797ad37d188675505b66a3a4bbeea5d9560"
            },
            {
              "sha": "2b520c6104f34e3a548525173c38ebca4402cac3",
              "author": {
                "email": "cwabbott0@gmail.com",
                "name": "Connor Abbott"
              },
              "message": "drm/msm/a7xx: Call CP_RESET_CONTEXT_STATE\n\nCalling this packet is necessary when we switch contexts because there\nare various pieces of state used by userspace to synchronize between BR\nand BV that are persistent across submits and we need to make sure that\nthey are in a \"safe\" state when switching contexts. Otherwise a\nuserspace submission in one context could cause another context to\nfunction incorrectly and hang, effectively a denial of service (although\nwithout leaking data). This was missed during initial a7xx bringup.\n\nFixes: af66706accdf (\"drm/msm/a6xx: Add skeleton A7xx support\")\nSigned-off-by: Connor Abbott <cwabbott0@gmail.com>\nPatchwork: https://patchwork.freedesktop.org/patch/654924/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2b520c6104f34e3a548525173c38ebca4402cac3"
            },
            {
              "sha": "ba64c6737f8656aa86e9fbcc1ff56e56316e62f6",
              "author": {
                "email": "reatmon@ti.com",
                "name": "Ryan Eatmon"
              },
              "message": "drivers: gpu: drm: msm: registers: improve reproducibility\n\nThe files generated by gen_header.py capture the source path to the\ninput files and the date.  While that can be informative, it varies\nbased on where and when the kernel was built as the full path is\ncaptured.\n\nSince all of the files that this tool is run on is under the drivers\ndirectory, this modifies the application to strip all of the path before\ndrivers.  Additionally it prints <stripped> instead of the date.\n\nSigned-off-by: Ryan Eatmon <reatmon@ti.com>\nSigned-off-by: Bruce Ashfield <bruce.ashfield@gmail.com>\nSigned-off-by: Viswanath Kraleti <viswanath.kraleti@oss.qualcomm.com>\nAcked-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nPatchwork: https://patchwork.freedesktop.org/patch/655599/\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ba64c6737f8656aa86e9fbcc1ff56e56316e62f6"
            },
            {
              "sha": "1453b532d193a0b1b94429c657365e14dd4f361e",
              "author": {
                "email": "robin.clark@oss.qualcomm.com",
                "name": "Rob Clark"
              },
              "message": "drm/msm: Rename add_components_mdp()\n\nTo better match add_gpu_components().\n\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>\nReviewed-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nPatchwork: https://patchwork.freedesktop.org/patch/657700/",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1453b532d193a0b1b94429c657365e14dd4f361e"
            },
            {
              "sha": "1efb73791c828f3d1ac68ebbc5eddc35a562f9d0",
              "author": {
                "email": "robin.clark@oss.qualcomm.com",
                "name": "Rob Clark"
              },
              "message": "drm/msm/adreno: Pass device_node to find_chipid()\n\nWe are going to want to re-use this before the component is bound, when\nwe don't yet have the device pointer (but we do have the of node).\n\nv2: use %pOF\n\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>\nReviewed-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nPatchwork: https://patchwork.freedesktop.org/patch/657705/",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1efb73791c828f3d1ac68ebbc5eddc35a562f9d0"
            },
            {
              "sha": "0838fc3e6718743d595bf26e0e69ae55aa51fad1",
              "author": {
                "email": "robin.clark@oss.qualcomm.com",
                "name": "Rob Clark"
              },
              "message": "drm/msm/adreno: Check for recognized GPU before bind\n\nIf we have a newer dtb than kernel, we could end up in a situation where\nthe GPU device is present in the dtb, but not in the drivers device\ntable.  We don't want this to prevent the display from probing.  So\ncheck that we recognize the GPU before adding the GPU component.\n\nv2: use %pOF\n\nSigned-off-by: Rob Clark <robin.clark@oss.qualcomm.com>\nReviewed-by: Dmitry Baryshkov <dmitry.baryshkov@oss.qualcomm.com>\nPatchwork: https://patchwork.freedesktop.org/patch/657701/",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0838fc3e6718743d595bf26e0e69ae55aa51fad1"
            },
            {
              "sha": "e479da4054875c4cc53a7fb956ebff03d2dac939",
              "author": {
                "email": "jkeeping@inmusicbrands.com",
                "name": "John Keeping"
              },
              "message": "drm/ssd130x: fix ssd132x_clear_screen() columns\n\nThe number of columns relates to the width, not the height.  Use the\ncorrect variable.\n\nSigned-off-by: John Keeping <jkeeping@inmusicbrands.com>\nReviewed-by: Javier Martinez Canillas <javierm@redhat.com>\nFixes: fdd591e00a9c (\"drm/ssd130x: Add support for the SSD132x OLED controller family\")\nLink: https://lore.kernel.org/r/20250611111307.1814876-1-jkeeping@inmusicbrands.com\nSigned-off-by: Javier Martinez Canillas <javierm@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e479da4054875c4cc53a7fb956ebff03d2dac939"
            },
            {
              "sha": "8ecbad4853f83d9853d7bb0c2d8373afab8851d3",
              "author": {
                "email": "alexander.stein@ew.tq-group.com",
                "name": "Alexander Stein"
              },
              "message": "drm/arm/malidp: Silence informational message\n\nWhen checking for unsupported expect an error is printed every time.\nThis spams the log for platforms where this is expected, e.g. ls1028a\nhaving a Vivante (etnaviv) GPU and Mali display processor.\n\nSigned-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>\nSigned-off-by: Liviu Dudau <liviu.dudau@arm.com>\nLink: https://lore.kernel.org/r/20250523064042.3275926-1-alexander.stein@ew.tq-group.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8ecbad4853f83d9853d7bb0c2d8373afab8851d3"
            },
            {
              "sha": "d742f3ec1cb91c4dd86b981f55cd291e07f03094",
              "author": {
                "email": "tzimmermann@suse.de",
                "name": "Thomas Zimmermann"
              },
              "message": "drm/ast: Do not include <linux/export.h>\n\nFix the compile-time warning\n\n  drivers/gpu/drm/ast/ast_mode.c: warning: EXPORT_SYMBOL() is not used, but #include <linux/export.h> is present\n\nSigned-off-by: Thomas Zimmermann <tzimmermann@suse.de>\nReviewed-by: Jocelyn Falempe <jfalempe@redhat.com>\nLink: https://lore.kernel.org/r/20250612084257.200907-1-tzimmermann@suse.de",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d742f3ec1cb91c4dd86b981f55cd291e07f03094"
            },
            {
              "sha": "2e3395ab2a358ba8d1c80d8df35dcfb882cfc28e",
              "author": {
                "email": "tzimmermann@suse.de",
                "name": "Thomas Zimmermann"
              },
              "message": "drm/mgag200: Do not include <linux/export.h>\n\nFix the compile-time warning\n\n  drivers/gpu/drm/mgag200/mgag200_ddc.c: warning: EXPORT_SYMBOL() is not used, but #include <linux/export.h> is present\n\nSigned-off-by: Thomas Zimmermann <tzimmermann@suse.de>\nReviewed-by: Jocelyn Falempe <jfalempe@redhat.com>\nLink: https://lore.kernel.org/r/20250612085308.203861-1-tzimmermann@suse.de",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2e3395ab2a358ba8d1c80d8df35dcfb882cfc28e"
            },
            {
              "sha": "ac90aad0e9bf7c37e706fdc08ce763a553890bdf",
              "author": {
                "email": "ebiggers@google.com",
                "name": "Eric Biggers"
              },
              "message": "crypto: testmgr - reinstate kconfig control over full self-tests\n\nCommit 698de822780f (\"crypto: testmgr - make it easier to enable the\nfull set of tests\") removed support for building kernels that run only\nthe \"fast\" set of crypto self-tests by default.  This assumed that\nnearly everyone actually wanted the full set of tests, *if* they had\nalready chosen to enable the tests at all.\n\nUnfortunately, it turns out that both Debian and Fedora intentionally\nhave the crypto self-tests enabled in their production kernels.  And for\nproduction kernels we do need to keep the testing time down, which\nimplies just running the \"fast\" tests, not the full set of tests.\n\nFor Fedora, a reason for enabling the tests in production is that they\nare being (mis)used to meet the FIPS 140-3 pre-operational testing\nrequirement.\n\nHowever, the other reason for enabling the tests in production, which\napplies to both distros, is that they provide some value in protecting\nusers from buggy drivers.  Unfortunately, the crypto/ subsystem has many\nbuggy and untested drivers for off-CPU hardware accelerators on rare\nplatforms.  These broken drivers get shipped to users, and there have\nbeen multiple examples of the tests preventing these buggy drivers from\nbeing used.  So effectively, the tests are being relied on in production\nkernels.  I think this is kind of crazy (untested drivers should just\nnot be enabled at all), but that seems to be how things work currently.\n\nThus, reintroduce a kconfig option that controls the level of testing.\nCall it CRYPTO_SELFTESTS_FULL instead of the original name\nCRYPTO_MANAGER_EXTRA_TESTS, which was slightly misleading.\n\nMoreover, given the \"production kernel\" use case, make CRYPTO_SELFTESTS\ndepend on EXPERT instead of DEBUG_KERNEL.\n\nI also haven't reinstated all the #ifdefs in crypto/testmgr.c.  Instead,\njust rely on the compiler to optimize out unused code.\n\nFixes: 40b9969796bf (\"crypto: testmgr - replace CRYPTO_MANAGER_DISABLE_TESTS with CRYPTO_SELFTESTS\")\nFixes: 698de822780f (\"crypto: testmgr - make it easier to enable the full set of tests\")\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/ac90aad0e9bf7c37e706fdc08ce763a553890bdf"
            },
            {
              "sha": "80626ae6ffe57917915c6e6d8ea1e908689954fd",
              "author": {
                "email": "colin.i.king@gmail.com",
                "name": "Colin Ian King"
              },
              "message": "drm/nouveau/gsp: Fix potential integer overflow on integer shifts\n\nThe left shift int 32 bit integer constants 1 is evaluated using 32 bit\narithmetic and then assigned to a 64 bit unsigned integer. In the case\nwhere the shift is 32 or more this can lead to an overflow. Avoid this\nby shifting using the BIT_ULL macro instead.\n\nFixes: 6c3ac7bcfcff (\"drm/nouveau/gsp: support deeper page tables in COPY_SERVER_RESERVED_PDES\")\nSigned-off-by: Colin Ian King <colin.i.king@gmail.com>\nSigned-off-by: Danilo Krummrich <dakr@kernel.org>\nLink: https://lore.kernel.org/r/20250522131512.2768310-1-colin.i.king@gmail.com",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/80626ae6ffe57917915c6e6d8ea1e908689954fd"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-20T06:33:05Z"
      },
      {
        "id": "51125150535",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25008400033,
          "size": 4,
          "distinct_size": 4,
          "ref": "refs/heads/master",
          "head": "41687a5c6f8b07ad0850d6c46452376d54fe9b65",
          "before": "5c8013ae2e86ec36b07500ba4cacb14ab4d6f728",
          "commits": [
            {
              "sha": "d57e92dd660014ccac884eda616cafc7b04601e0",
              "author": {
                "email": "treding@nvidia.com",
                "name": "Thierry Reding"
              },
              "message": "spi: tegra210-qspi: Remove cache operations\n\nThe DMA memory for this driver is allocated using dma_alloc_coherent(),\nwhich ends up mapping the allocated memory as uncached. Performing the\nvarious dma_sync_*() operations on this memory causes issues during SPI\nflashing:\n\n[    7.818017] pc : dcache_inval_poc+0x40/0x58\n[    7.822128] lr : arch_sync_dma_for_cpu+0x2c/0x4c\n[    7.826854] sp : ffff80008193bcf0\n[    7.830267] x29: ffff80008193bcf0 x28: ffffa3fe5ff1e908 x27: ffffa3fe627bb130\n[    7.837528] x26: ffff000086952180 x25: ffff00008015c8ac x24: ffff000086c9b480\n[    7.844878] x23: ffff00008015c800 x22: 0000000000000002 x21: 0000000000010000\n[    7.852229] x20: 0000000106dae000 x19: ffff000080112410 x18: 0000000000000001\n[    7.859580] x17: ffff000080159400 x16: ffffa3fe607a9bd8 x15: ffff0000eac1b180\n[    7.866753] x14: 000000000000000c x13: 0000000000000001 x12: 000000000000025a\n[    7.874104] x11: 0000000000000000 x10: 7f73e96357f6a07f x9 : db1fc8072a7f5e3a\n[    7.881365] x8 : ffff000086c9c588 x7 : ffffa3fe607a9bd8 x6 : ffff80008193bc28\n[    7.888630] x5 : 000000000000ffff x4 : 0000000000000009 x3 : 000000000000003f\n[    7.895892] x2 : 0000000000000040 x1 : ffff000086dbe000 x0 : ffff000086db0000\n[    7.903155] Call trace:\n[    7.905606]  dcache_inval_poc+0x40/0x58 (P)\n[    7.909804]  iommu_dma_sync_single_for_cpu+0xb4/0xb8\n[    7.914617]  __dma_sync_single_for_cpu+0x158/0x194\n[    7.919428]  __this_module+0x5b020/0x5baf8 [spi_tegra210_quad]\n[    7.925291]  irq_thread_fn+0x2c/0xc0\n[    7.928966]  irq_thread+0x16c/0x318\n[    7.932467]  kthread+0x12c/0x214\n\nFix this by removing all calls to the dma_sync_*() functions. This isn't\nideal because DMA is used only for relatively large (> 64 words or 256\nbytes) and using uncached memory for this might be slow. Reworking this\nto use cached memory for faster access and reintroducing the cache\nmaintenance calls is probably worth a follow-up patch.\n\nReported-by: Brad Griffis <bgriffis@nvidia.com>\nFixes: 017f1b0bae08 (\"spi: tegra210-quad: Add support for internal DMA\")\nSigned-off-by: Thierry Reding <treding@nvidia.com>\nLink: https://patch.msgid.link/20250613123037.2082788-1-thierry.reding@gmail.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d57e92dd660014ccac884eda616cafc7b04601e0"
            },
            {
              "sha": "8acfb165a492251a08a22a4fa6497a131e8c2609",
              "author": {
                "email": "heiko@sntech.de",
                "name": "Heiko Stuebner"
              },
              "message": "regulator: fan53555: add enable_time support and soft-start times\n\nThe datasheets for all the fan53555 variants (and clones using the same\ninterface) define so called soft start times, from enabling the regulator\nuntil at least some percentage of the output (i.e. 92% for the rk860x\ntypes) are available.\n\nThe regulator framework supports this with the enable_time property\nbut currently the fan53555 driver does not define enable_times for any\nvariant.\n\nI ran into a problem with this while testing the new driver for the\nRockchip NPUs (rocket), which does runtime-pm including disabling and\nenabling a rk8602 as needed. When reenabling the regulator while running\na load, fatal hangs could be observed while enabling the associated\npower-domain, which the regulator supplies.\n\nExperimentally setting the regulator to always-on, made the issue\ndisappear, leading to the missing delay to let power stabilize.\nAnd as expected, setting the enable-time to a non-zero value\naccording to the datasheet also resolved the regulator-issue.\n\nThe datasheets in nearly all cases only specify \"typical\" values,\nexcept for the fan53555 type 08. There both a typical and maximum\nvalue are listed - 40uS apart.\n\nFor all typical values I've added 100uS to be on the safe side.\nIndividual details for the relevant regulators below:\n\n- fan53526:\n  The datasheet for all variants lists a typical value of 150uS, so\n  make that 250uS with safety margin.\n- fan53555:\n  types 08 and 18 (unsupported) are given a typical enable time of 135uS\n  but also a maximum of 175uS so use that value. All the other types only\n  have a typical time in the datasheet of 300uS, so give a bit margin by\n  setting it to 400uS.\n- rk8600 + rk8602:\n  Datasheet reports a typical value of 260us, so use 360uS to be safe.\n- syr82x + syr83x:\n  All datasheets report typical soft-start values of 300uS for these\n  regulators, so use 400uS.\n- tcs452x:\n  Datasheet sadly does not report a soft-start time, so I've not set\n  an enable-time\n\nSigned-off-by: Heiko Stuebner <heiko@sntech.de>\nLink: https://patch.msgid.link/20250606190418.478633-1-heiko@sntech.de\nSigned-off-by: Mark Brown <broonie@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/8acfb165a492251a08a22a4fa6497a131e8c2609"
            },
            {
              "sha": "e0990236bbdc96440bfc4a5b24b5dd811fd2210d",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'regulator-fix-v6.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator\n\nPull regulator fix from Mark Brown:\n \"One patch here from Heiko which fixes stability issues on some\n  Rockchip platforms by implementing soft start support and providing\n  startup time information for their regulators\"\n\n* tag 'regulator-fix-v6.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator:\n  regulator: fan53555: add enable_time support and soft-start times",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e0990236bbdc96440bfc4a5b24b5dd811fd2210d"
            },
            {
              "sha": "41687a5c6f8b07ad0850d6c46452376d54fe9b65",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'spi-fix-v6.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi\n\nPull spi fix from Mark Brown:\n \"One fix here from Thierry, fixing crashes caused by attempting to do\n  cache sync operations on uncached memory on Tegra platforms\"\n\n* tag 'spi-fix-v6.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi:\n  spi: tegra210-qspi: Remove cache operations",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/41687a5c6f8b07ad0850d6c46452376d54fe9b65"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-20T00:52:22Z"
      },
      {
        "id": "51117092804",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 25004020832,
          "size": 1,
          "distinct_size": 1,
          "ref": "refs/heads/main",
          "head": "861988319969d0ccbb749bc5f2c4d57ba1f0d408",
          "before": "89298f8bfd86f1d61ca3e76123c3b8f31c9277dc",
          "commits": [
            {
              "sha": "861988319969d0ccbb749bc5f2c4d57ba1f0d408",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Use better signals for simulation\n\nI really need to learn not to use a sine signal for simulation input\ntesting: it makes the output look artificially good and hides problems.\n\nI had fixed that problem for the control voltage in the multiplier\ncircuit, but then never did it for the main input signal, because the\nend result looked so \"obviously correct\".\n\nBut then I got suspicious, and sure enough, when I start using a more\ninteresting main signal the picture changes.  It's not doing a proper\nmultiplication in the ImSquared circuit.  Maybe that might be ok for\nsound, but it's not what I wanted the circuit to actually do.\n\nYes, VSIN is really easy to use, and it's a pain to set up something\neven as simple as a triangle wave, and ngspice seems to get unhappier\nabout abrupt edges so simulation is more prone to problems.\n\nBut making a signal that is more triangle-wave like is not _that_ hard,\nand at least shows when the end result has soft clipping or other simple\nissues, and sure enough...\n\nNote that the multiplier itself seems ok.  The problem is in the\nImSquared circuit, and I think I see what it is: blending in the\noriginal signal - even when it's not used - messes up the impedance of\nthe input signal to the multiplier, and I may just need to add a buffer\nthere too.\n\nThis doesn't do that fix, this just fixes the simulation input so that\nyou can see the problem clearly.  Maybe some day I'll learn this lesson.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/861988319969d0ccbb749bc5f2c4d57ba1f0d408"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-19T18:21:43Z"
      },
      {
        "id": "51116150929",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25003523311,
          "size": 71,
          "distinct_size": 71,
          "ref": "refs/heads/master",
          "head": "5c8013ae2e86ec36b07500ba4cacb14ab4d6f728",
          "before": "24770983ccfec854d89da9d87ca5f2c9efc695fc",
          "commits": [
            {
              "sha": "5466491c9e3309ed5c7adbb8fad6e93fcc9a8fe9",
              "author": {
                "email": "brett.creeley@amd.com",
                "name": "Brett Creeley"
              },
              "message": "ionic: Prevent driver/fw getting out of sync on devcmd(s)\n\nSome stress/negative firmware testing around devcmd(s) returning\nEAGAIN found that the done bit could get out of sync in the\nfirmware when it wasn't cleared in a retry case.\n\nWhile here, change the type of the local done variable to a bool\nto match the return type from ionic_dev_cmd_done().\n\nFixes: ec8ee714736e (\"ionic: stretch heartbeat detection\")\nSigned-off-by: Brett Creeley <brett.creeley@amd.com>\nSigned-off-by: Shannon Nelson <shannon.nelson@amd.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nLink: https://patch.msgid.link/20250609212827.53842-1-shannon.nelson@amd.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5466491c9e3309ed5c7adbb8fad6e93fcc9a8fe9"
            },
            {
              "sha": "1224b218a4b9203656ecc932152f4c81a97b4fcc",
              "author": {
                "email": "horms@kernel.org",
                "name": "Simon Horman"
              },
              "message": "pldmfw: Select CRC32 when PLDMFW is selected\n\npldmfw calls crc32 code and depends on it being enabled, else\nthere is a link error as follows. So PLDMFW should select CRC32.\n\n  lib/pldmfw/pldmfw.o: In function `pldmfw_flash_image':\n  pldmfw.c:(.text+0x70f): undefined reference to `crc32_le_base'\n\nThis problem was introduced by commit b8265621f488 (\"Add pldmfw library\nfor PLDM firmware update\").\n\nIt manifests as of commit d69ea414c9b4 (\"ice: implement device flash\nupdate via devlink\").\n\nAnd is more likely to occur as of commit 9ad19171b6d6 (\"lib/crc: remove\nunnecessary prompt for CONFIG_CRC32 and drop 'default y'\").\n\nFound by chance while exercising builds based on tinyconfig.\n\nFixes: b8265621f488 (\"Add pldmfw library for PLDM firmware update\")\nSigned-off-by: Simon Horman <horms@kernel.org>\nReviewed-by: Jacob Keller <jacob.e.keller@intel.com>\nLink: https://patch.msgid.link/20250613-pldmfw-crc32-v1-1-f3fad109eee6@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1224b218a4b9203656ecc932152f4c81a97b4fcc"
            },
            {
              "sha": "a85b8544d46390469b6ca72d6bfd3ecb7be985ff",
              "author": {
                "email": "johannes.berg@intel.com",
                "name": "Johannes Berg"
              },
              "message": "wifi: remove zero-length arrays\n\nAll of these are really meant to be variable-length, and\nin the case of s1g_beacon it's actually accessed. Make that\none in particular, and a couple of others (that aren't used\nas arrays now), actually variable.\n\nReported-by: syzbot+fd222bb38e916df26fa4@syzkaller.appspotmail.com\nFixes: 1e1f706fc2ce (\"wifi: cfg80211/mac80211: correctly parse S1G beacon optional elements\")\nLink: https://patch.msgid.link/20250614003037.a3e82e882251.I2e8b58e56ff2a9f8b06c66f036578b7c1d4e4685@changeid\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a85b8544d46390469b6ca72d6bfd3ecb7be985ff"
            },
            {
              "sha": "d1b1a5eb27c4948e8811cf4dbb05aaf3eb10700c",
              "author": {
                "email": "johannes.berg@intel.com",
                "name": "Johannes Berg"
              },
              "message": "wifi: mac80211: drop invalid source address OCB frames\n\nIn OCB, don't accept frames from invalid source addresses\n(and in particular don't try to create stations for them),\ndrop the frames instead.\n\nReported-by: syzbot+8b512026a7ec10dcbdd9@syzkaller.appspotmail.com\nCloses: https://lore.kernel.org/r/6788d2d9.050a0220.20d369.0028.GAE@google.com/\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>\nTested-by: syzbot+8b512026a7ec10dcbdd9@syzkaller.appspotmail.com\nLink: https://patch.msgid.link/20250616171838.7433379cab5d.I47444d63c72a0bd58d2e2b67bb99e1fea37eec6f@changeid\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d1b1a5eb27c4948e8811cf4dbb05aaf3eb10700c"
            },
            {
              "sha": "d19bac3d4edc4ab92e90d1c6bf68620192254b4b",
              "author": {
                "email": "johannes.berg@intel.com",
                "name": "Johannes Berg"
              },
              "message": "wifi: mac80211: don't WARN for late channel/color switch\n\nThere's really no value in the WARN stack trace etc., the reason\nfor this happening isn't directly related to the calling function\nanyway. Also, syzbot has been observing it constantly, and there's\nno way we can resolve it there - those systems are just slow.\n\nInstead print an error message (once) and add a comment about what\nreally causes this message.\n\nReported-by: syzbot+468656785707b0e995df@syzkaller.appspotmail.com\nReported-by: syzbot+18c783c5cf6a781e3e2c@syzkaller.appspotmail.com\nReported-by: syzbot+d5924d5cffddfccab68e@syzkaller.appspotmail.com\nReported-by: syzbot+7d73d99525d1ff7752ef@syzkaller.appspotmail.com\nReported-by: syzbot+8e6e002c74d1927edaf5@syzkaller.appspotmail.com\nReported-by: syzbot+97254a3b10c541879a65@syzkaller.appspotmail.com\nReported-by: syzbot+dfd1fd46a1960ad9c6ec@syzkaller.appspotmail.com\nReported-by: syzbot+85e0b8d12d9ca877d806@syzkaller.appspotmail.com\nLink: https://patch.msgid.link/20250617104902.146e10919be1.I85f352ca4a2dce6f556e5ff45ceaa5f3769cb5ce@changeid\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d19bac3d4edc4ab92e90d1c6bf68620192254b4b"
            },
            {
              "sha": "7b4ac12cc929e281cf7edc22203e0533790ebc2b",
              "author": {
                "email": "bigeasy@linutronix.de",
                "name": "Sebastian Andrzej Siewior"
              },
              "message": "openvswitch: Allocate struct ovs_pcpu_storage dynamically\n\nPERCPU_MODULE_RESERVE defines the maximum size that can by used for the\nper-CPU data size used by modules. This is 8KiB.\n\nCommit 035fcdc4d240c (\"openvswitch: Merge three per-CPU structures into\none\") restructured the per-CPU memory allocation for the module and\nmoved the separate alloc_percpu() invocations at module init time to a\nstatic per-CPU variable which is allocated by the module loader.\n\nThe size of the per-CPU data section for openvswitch is 6488 bytes which\nis ~80% of the available per-CPU memory. Together with a few other\nmodules it is easy to exhaust the available 8KiB of memory.\n\nAllocate ovs_pcpu_storage dynamically at module init time.\n\nReported-by: Gal Pressman <gal@nvidia.com>\nCloses: https://lore.kernel.org/all/c401e017-f8db-4f57-a1cd-89beb979a277@nvidia.com\nFixes: 035fcdc4d240c (\"openvswitch: Merge three per-CPU structures into one\")\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nReviewed-by: Aaron Conole <aconole@redhat.com>\nLink: https://patch.msgid.link/20250613123629.-XSoQTCu@linutronix.de\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7b4ac12cc929e281cf7edc22203e0533790ebc2b"
            },
            {
              "sha": "db22720545207f734aaa9d9f71637bfc8b0155e0",
              "author": {
                "email": "brett.werling@garmin.com",
                "name": "Brett Werling"
              },
              "message": "can: tcan4x5x: fix power regulator retrieval during probe\n\nFixes the power regulator retrieval in tcan4x5x_can_probe() by ensuring\nthe regulator pointer is not set to NULL in the successful return from\ndevm_regulator_get_optional().\n\nFixes: 3814ca3a10be (\"can: tcan4x5x: tcan4x5x_can_probe(): turn on the power before parsing the config\")\nSigned-off-by: Brett Werling <brett.werling@garmin.com>\nLink: https://patch.msgid.link/20250612191825.3646364-1-brett.werling@garmin.com\nCc: stable@vger.kernel.org\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/db22720545207f734aaa9d9f71637bfc8b0155e0"
            },
            {
              "sha": "5d3bc9e5e725aa36cca9b794e340057feb6880b4",
              "author": {
                "email": "krikku@gmail.com",
                "name": "Krishna Kumar"
              },
              "message": "net: ice: Perform accurate aRFS flow match\n\nThis patch fixes an issue seen in a large-scale deployment under heavy\nincoming pkts where the aRFS flow wrongly matches a flow and reprograms the\nNIC with wrong settings. That mis-steering causes RX-path latency spikes\nand noisy neighbor effects when many connections collide on the same\nhash (some of our production servers have 20-30K connections).\n\nset_rps_cpu() calls ndo_rx_flow_steer() with flow_id that is calculated by\nhashing the skb sized by the per rx-queue table size. This results in\nmultiple connections (even across different rx-queues) getting the same\nhash value. The driver steer function modifies the wrong flow to use this\nrx-queue, e.g.: Flow#1 is first added:\n    Flow#1:  <ip1, port1, ip2, port2>, Hash 'h', q#10\n\nLater when a new flow needs to be added:\n\t    Flow#2:  <ip3, port3, ip4, port4>, Hash 'h', q#20\n\nThe driver finds the hash 'h' from Flow#1 and updates it to use q#20. This\nresults in both flows getting un-optimized - packets for Flow#1 goes to\nq#20, and then reprogrammed back to q#10 later and so on; and Flow #2\nprogramming is never done as Flow#1 is matched first for all misses. Many\nflows may wrongly share the same hash and reprogram rules of the original\nflow each with their own q#.\n\nTested on two 144-core servers with 16K netperf sessions for 180s. Netperf\nclients are pinned to cores 0-71 sequentially (so that wrong packets on q#s\n72-143 can be measured). IRQs are set 1:1 for queues -> CPUs, enable XPS,\nenable aRFS (global value is 144 * rps_flow_cnt).\n\nTest notes about results from ice_rx_flow_steer():\n---------------------------------------------------\n1. \"Skip:\" counter increments here:\n    if (fltr_info->q_index == rxq_idx ||\n\tarfs_entry->fltr_state != ICE_ARFS_ACTIVE)\n\t    goto out;\n2. \"Add:\" counter increments here:\n    ret = arfs_entry->fltr_info.fltr_id;\n    INIT_HLIST_NODE(&arfs_entry->list_entry);\n3. \"Update:\" counter increments here:\n    /* update the queue to forward to on an already existing flow */\n\nRuntime comparison: original code vs with the patch for different\nrps_flow_cnt values.\n\n+-------------------------------+--------------+--------------+\n| rps_flow_cnt                  |      512     |    2048      |\n+-------------------------------+--------------+--------------+\n| Ratio of Pkts on Good:Bad q's | 214 vs 822K  | 1.1M vs 980K |\n| Avoid wrong aRFS programming  | 0 vs 310K    | 0 vs 30K     |\n| CPU User                      | 216 vs 183   | 216 vs 206   |\n| CPU System                    | 1441 vs 1171 | 1447 vs 1320 |\n| CPU Softirq                   | 1245 vs 920  | 1238 vs 961  |\n| CPU Total                     | 29 vs 22.7   | 29 vs 24.9   |\n| aRFS Update                   | 533K vs 59   | 521K vs 32   |\n| aRFS Skip                     | 82M vs 77M   | 7.2M vs 4.5M |\n+-------------------------------+--------------+--------------+\n\nA separate TCP_STREAM and TCP_RR with 1,4,8,16,64,128,256,512 connections\nshowed no performance degradation.\n\nSome points on the patch/aRFS behavior:\n1. Enabling full tuple matching ensures flows are always correctly matched,\n   even with smaller hash sizes.\n2. 5-6% drop in CPU utilization as the packets arrive at the correct CPUs\n   and fewer calls to driver for programming on misses.\n3. Larger hash tables reduces mis-steering due to more unique flow hashes,\n   but still has clashes. However, with larger per-device rps_flow_cnt, old\n   flows take more time to expire and new aRFS flows cannot be added if h/w\n   limits are reached (rps_may_expire_flow() succeeds when 10*rps_flow_cnt\n   pkts have been processed by this cpu that are not part of the flow).\n\nFixes: 28bf26724fdb0 (\"ice: Implement aRFS\")\nSigned-off-by: Krishna Kumar <krikku@gmail.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nTested-by: Rinitha S <sx.rinitha@intel.com> (A Contingent worker at Intel)\nSigned-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5d3bc9e5e725aa36cca9b794e340057feb6880b4"
            },
            {
              "sha": "48c8b214974dc55283bd5f12e3a483b27c403bbc",
              "author": {
                "email": "grzegorz.nitka@intel.com",
                "name": "Grzegorz Nitka"
              },
              "message": "ice: fix eswitch code memory leak in reset scenario\n\nAdd simple eswitch mode checker in attaching VF procedure and allocate\nrequired port representor memory structures only in switchdev mode.\nThe reset flows triggers VF (if present) detach/attach procedure.\nIt might involve VF port representor(s) re-creation if the device is\nconfigured is switchdev mode (not legacy one).\nThe memory was blindly allocated in current implementation,\nregardless of the mode and not freed if in legacy mode.\n\nKmemeleak trace:\nunreferenced object (percpu) 0x7e3bce5b888458 (size 40):\n  comm \"bash\", pid 1784, jiffies 4295743894\n  hex dump (first 32 bytes on cpu 45):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc 0):\n    pcpu_alloc_noprof+0x4c4/0x7c0\n    ice_repr_create+0x66/0x130 [ice]\n    ice_repr_create_vf+0x22/0x70 [ice]\n    ice_eswitch_attach_vf+0x1b/0xa0 [ice]\n    ice_reset_all_vfs+0x1dd/0x2f0 [ice]\n    ice_pci_err_resume+0x3b/0xb0 [ice]\n    pci_reset_function+0x8f/0x120\n    reset_store+0x56/0xa0\n    kernfs_fop_write_iter+0x120/0x1b0\n    vfs_write+0x31c/0x430\n    ksys_write+0x61/0xd0\n    do_syscall_64+0x5b/0x180\n    entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nTesting hints (ethX is PF netdev):\n- create at least one VF\n    echo 1 > /sys/class/net/ethX/device/sriov_numvfs\n- trigger the reset\n    echo 1 > /sys/class/net/ethX/device/reset\n\nFixes: 415db8399d06 (\"ice: make representor code generic\")\nSigned-off-by: Grzegorz Nitka <grzegorz.nitka@intel.com>\nReviewed-by: Przemek Kitszel <przemyslaw.kitszel@intel.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nTested-by: Rinitha S <sx.rinitha@intel.com> (A Contingent worker at Intel)\nSigned-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/48c8b214974dc55283bd5f12e3a483b27c403bbc"
            },
            {
              "sha": "688a0d61b2d7427189c4eb036ce485d8fc957cbb",
              "author": {
                "email": "vitaly.lifshits@intel.com",
                "name": "Vitaly Lifshits"
              },
              "message": "e1000e: set fixed clock frequency indication for Nahum 11 and Nahum 13\n\nOn some systems with Nahum 11 and Nahum 13 the value of the XTAL clock in\nthe software STRAP is incorrect. This causes the PTP timer to run at the\nwrong rate and can lead to synchronization issues.\n\nThe STRAP value is configured by the system firmware, and a firmware\nupdate is not always possible. Since the XTAL clock on these systems\nalways runs at 38.4MHz, the driver may ignore the STRAP and just set\nthe correct value.\n\nFixes: cc23f4f0b6b9 (\"e1000e: Add support for Meteor Lake\")\nSigned-off-by: Vitaly Lifshits <vitaly.lifshits@intel.com>\nTested-by: Mor Bar-Gabay <morx.bar.gabay@intel.com>\nReviewed-by: Gil Fine <gil.fine@linux.intel.com>\nSigned-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/688a0d61b2d7427189c4eb036ce485d8fc957cbb"
            },
            {
              "sha": "60524f1d2bdf222db6dc3f680e0272441f697fe4",
              "author": {
                "email": "m-malladi@ti.com",
                "name": "Meghana Malladi"
              },
              "message": "net: ti: icssg-prueth: Fix packet handling for XDP_TX\n\nWhile transmitting XDP frames for XDP_TX, page_pool is\nused to get the DMA buffers (already mapped to the pages)\nand need to be freed/reycled once the transmission is complete.\nThis need not be explicitly done by the driver as this is handled\nmore gracefully by the xdp driver while returning the xdp frame.\n__xdp_return() frees the XDP memory based on its memory type,\nunder which page_pool memory is also handled. This change fixes\nthe transmit queue timeout while running XDP_TX.\n\nlogs:\n[  309.069682] icssg-prueth icssg1-eth eth2: NETDEV WATCHDOG: CPU: 0: transmit queue 0 timed out 45860 ms\n[  313.933780] icssg-prueth icssg1-eth eth2: NETDEV WATCHDOG: CPU: 0: transmit queue 0 timed out 50724 ms\n[  319.053656] icssg-prueth icssg1-eth eth2: NETDEV WATCHDOG: CPU: 0: transmit queue 0 timed out 55844 ms\n...\n\nFixes: 62aa3246f462 (\"net: ti: icssg-prueth: Add XDP support\")\nSigned-off-by: Meghana Malladi <m-malladi@ti.com>\nReviewed-by: Jacob Keller <jacob.e.keller@intel.com>\nLink: https://patch.msgid.link/20250616063319.3347541-1-m-malladi@ti.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/60524f1d2bdf222db6dc3f680e0272441f697fe4"
            },
            {
              "sha": "6f793a1d053775f8324b8dba1e7ed224f8b0166f",
              "author": {
                "email": "almasrymina@google.com",
                "name": "Mina Almasry"
              },
              "message": "net: netmem: fix skb_ensure_writable with unreadable skbs\n\nskb_ensure_writable should succeed when it's trying to write to the\nheader of the unreadable skbs, so it doesn't need an unconditional\nskb_frags_readable check. The preceding pskb_may_pull() call will\nsucceed if write_len is within the head and fail if we're trying to\nwrite to the unreadable payload, so we don't need an additional check.\n\nRemoving this check restores DSCP functionality with unreadable skbs as\nit's called from dscp_tg.\n\nCc: willemb@google.com\nCc: asml.silence@gmail.com\nFixes: 65249feb6b3d (\"net: add support for skbs with unreadable frags\")\nSigned-off-by: Mina Almasry <almasrymina@google.com>\nAcked-by: Stanislav Fomichev <sdf@fomichev.me>\nLink: https://patch.msgid.link/20250615200733.520113-1-almasrymina@google.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6f793a1d053775f8324b8dba1e7ed224f8b0166f"
            },
            {
              "sha": "68a4abb1ef797095799e91d21f5d428c5bd09342",
              "author": {
                "email": "kuba@kernel.org",
                "name": "Jakub Kicinski"
              },
              "message": "Merge tag 'linux-can-fixes-for-6.16-20250617' of git://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can\n\nMarc Kleine-Budde says:\n\n====================\npull-request: can 2025-06-17\n\nThe patch is by Brett Werling, and fixes the power regulator retrieval\nduring probe of the tcan4x5x glue code for the m_can driver.\n\n* tag 'linux-can-fixes-for-6.16-20250617' of git://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can:\n  can: tcan4x5x: fix power regulator retrieval during probe\n  openvswitch: Allocate struct ovs_pcpu_storage dynamically\n====================\n\nLink: https://patch.msgid.link/20250617155123.2141584-1-mkl@pengutronix.de\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/68a4abb1ef797095799e91d21f5d428c5bd09342"
            },
            {
              "sha": "1e9ac33fa271be0d2480fd732f9642d81542500b",
              "author": {
                "email": "kalesh-anakkur.purayil@broadcom.com",
                "name": "Kalesh AP"
              },
              "message": "bnxt_en: Fix double invocation of bnxt_ulp_stop()/bnxt_ulp_start()\n\nBefore the commit under the Fixes tag below, bnxt_ulp_stop() and\nbnxt_ulp_start() were always invoked in pairs.  After that commit,\nthe new bnxt_ulp_restart() can be invoked after bnxt_ulp_stop()\nhas been called.  This may result in the RoCE driver's aux driver\n.suspend() method being invoked twice.  The 2nd bnxt_re_suspend()\ncall will crash when it dereferences a NULL pointer:\n\n(NULL ib_device): Handle device suspend call\nBUG: kernel NULL pointer dereference, address: 0000000000000b78\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] SMP PTI\nCPU: 20 UID: 0 PID: 181 Comm: kworker/u96:5 Tainted: G S                  6.15.0-rc1 #4 PREEMPT(voluntary)\nTainted: [S]=CPU_OUT_OF_SPEC\nHardware name: Dell Inc. PowerEdge R730/072T6D, BIOS 2.4.3 01/17/2017\nWorkqueue: bnxt_pf_wq bnxt_sp_task [bnxt_en]\nRIP: 0010:bnxt_re_suspend+0x45/0x1f0 [bnxt_re]\nCode: 8b 05 a7 3c 5b f5 48 89 44 24 18 31 c0 49 8b 5c 24 08 4d 8b 2c 24 e8 ea 06 0a f4 48 c7 c6 04 60 52 c0 48 89 df e8 1b ce f9 ff <48> 8b 83 78 0b 00 00 48 8b 80 38 03 00 00 a8 40 0f 85 b5 00 00 00\nRSP: 0018:ffffa2e84084fd88 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000001\nRDX: 0000000000000000 RSI: ffffffffb4b6b934 RDI: 00000000ffffffff\nRBP: ffffa1760954c9c0 R08: 0000000000000000 R09: c0000000ffffdfff\nR10: 0000000000000001 R11: ffffa2e84084fb50 R12: ffffa176031ef070\nR13: ffffa17609775000 R14: ffffa17603adc180 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffffa17daa397000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000b78 CR3: 00000004aaa30003 CR4: 00000000003706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<TASK>\nbnxt_ulp_stop+0x69/0x90 [bnxt_en]\nbnxt_sp_task+0x678/0x920 [bnxt_en]\n? __schedule+0x514/0xf50\nprocess_scheduled_works+0x9d/0x400\nworker_thread+0x11c/0x260\n? __pfx_worker_thread+0x10/0x10\nkthread+0xfe/0x1e0\n? __pfx_kthread+0x10/0x10\nret_from_fork+0x2b/0x40\n? __pfx_kthread+0x10/0x10\nret_from_fork_asm+0x1a/0x30\n\nCheck the BNXT_EN_FLAG_ULP_STOPPED flag and do not proceed if the flag\nis already set.  This will preserve the original symmetrical\nbnxt_ulp_stop() and bnxt_ulp_start().\n\nAlso, inside bnxt_ulp_start(), clear the BNXT_EN_FLAG_ULP_STOPPED\nflag after taking the mutex to avoid any race condition.  And for\nsymmetry, only proceed in bnxt_ulp_start() if the\nBNXT_EN_FLAG_ULP_STOPPED is set.\n\nFixes: 3c163f35bd50 (\"bnxt_en: Optimize recovery path ULP locking in the driver\")\nSigned-off-by: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>\nCo-developed-by: Michael Chan <michael.chan@broadcom.com>\nSigned-off-by: Michael Chan <michael.chan@broadcom.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nLink: https://patch.msgid.link/20250613231841.377988-2-michael.chan@broadcom.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1e9ac33fa271be0d2480fd732f9642d81542500b"
            },
            {
              "sha": "e11baaea94e2923739a98abeee85eb0667c04fd3",
              "author": {
                "email": "pavan.chebbi@broadcom.com",
                "name": "Pavan Chebbi"
              },
              "message": "bnxt_en: Add a helper function to configure MRU and RSS\n\nAdd a new helper function that will configure MRU and RSS table\nof a VNIC. This will be useful when we configure both on a VNIC\nwhen resetting an RX ring.  This function will be used again in\nthe next bug fix patch where we have to reconfigure VNICs for RSS\ncontexts.\n\nSuggested-by: Michael Chan <michael.chan@broadcom.com>\nReviewed-by: Simon Horman <horms@kernel.org>\nReviewed-by: David Wei <dw@davidwei.uk>\nSigned-off-by: Pavan Chebbi <pavan.chebbi@broadcom.com>\nSigned-off-by: Michael Chan <michael.chan@broadcom.com>\nLink: https://patch.msgid.link/20250613231841.377988-3-michael.chan@broadcom.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e11baaea94e2923739a98abeee85eb0667c04fd3"
            },
            {
              "sha": "5dacc94c6fe61cde6f700e95cf35af9944b022c4",
              "author": {
                "email": "pavan.chebbi@broadcom.com",
                "name": "Pavan Chebbi"
              },
              "message": "bnxt_en: Update MRU and RSS table of RSS contexts on queue reset\n\nThe commit under the Fixes tag below which updates the VNICs' RSS\nand MRU during .ndo_queue_start(), needs to be extended to cover any\nnon-default RSS contexts which have their own VNICs.  Without this\nstep, packets that are destined to a non-default RSS context may be\ndropped after .ndo_queue_start().\n\nWe further optimize this scheme by updating the VNIC only if the\nRX ring being restarted is in the RSS table of the VNIC.  Updating\nthe VNIC (in particular setting the MRU to 0) will momentarily stop\nall traffic to all rings in the RSS table.  Any VNIC that has the\nRX ring excluded from the RSS table can skip this step and avoid the\ntraffic disruption.\n\nNote that this scheme is just an improvement.  A VNIC with multiple\nrings in the RSS table will still see traffic disruptions to all rings\nin the RSS table when one of the rings is being restarted.  We are\nworking on a FW scheme that will improve upon this further.\n\nFixes: 5ac066b7b062 (\"bnxt_en: Fix queue start to update vnic RSS table\")\nReported-by: David Wei <dw@davidwei.uk>\nSigned-off-by: Pavan Chebbi <pavan.chebbi@broadcom.com>\nSigned-off-by: Michael Chan <michael.chan@broadcom.com>\nLink: https://patch.msgid.link/20250613231841.377988-4-michael.chan@broadcom.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5dacc94c6fe61cde6f700e95cf35af9944b022c4"
            },
            {
              "sha": "13c90202ddbb5f6e8457dadc797ca88b2d1b0742",
              "author": {
                "email": "kuba@kernel.org",
                "name": "Jakub Kicinski"
              },
              "message": "Merge branch 'bnxt_en-bug-fixes'\n\nMichael Chan says:\n\n====================\nbnxt_en: Bug fixes\n\nThie first patch fixes a crash during PCIe AER when the bnxt_re RoCE\ndriver is loaded.  The second patch is a refactor patch needed by\npatch 3.  Patch 3 fixes a packet drop issue if queue restart is done\non a ring belonging to a non-default RSS context.  Patch 2 and 3 are\nversion 2 that has addressed the v1 issue by reducing the scope of\nthe traffic disruptions:\n\nhttps://lore.kernel.org/netdev/CACKFLi=P9xYHVF4h2Ovjd-8DaoyzFAHnY6Y6H+1b7eGq+BQZzA@mail.gmail.com/\n====================\n\nLink: https://patch.msgid.link/20250613231841.377988-1-michael.chan@broadcom.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/13c90202ddbb5f6e8457dadc797ca88b2d1b0742"
            },
            {
              "sha": "5ab73b010cad294851e558f1d4714a85c6f206c7",
              "author": {
                "email": "vladimir.oltean@nxp.com",
                "name": "Vladimir Oltean"
              },
              "message": "ptp: fix breakage after ptp_vclock_in_use() rework\n\nWhat is broken\n--------------\n\nptp4l, and any other application which calls clock_adjtime() on a\nphysical clock, is greeted with error -EBUSY after commit 87f7ce260a3c\n(\"ptp: remove ptp->n_vclocks check logic in ptp_vclock_in_use()\").\n\nExplanation for the breakage\n----------------------------\n\nThe blamed commit was based on the false assumption that\nptp_vclock_in_use() callers already test for n_vclocks prior to calling\nthis function.\n\nThis is notably incorrect for the code path below, in which there is, in\nfact, no n_vclocks test:\n\nptp_clock_adjtime()\n-> ptp_clock_freerun()\n   -> ptp_vclock_in_use()\n\nThe result is that any clock adjustment on any physical clock is now\nimpossible. This is _despite_ there not being any vclock over this\nphysical clock.\n\n$ ptp4l -i eno0 -2 -P -m\nptp4l[58.425]: selected /dev/ptp0 as PTP clock\n[   58.429749] ptp: physical clock is free running\nptp4l[58.431]: Failed to open /dev/ptp0: Device or resource busy\nfailed to create a clock\n$ cat /sys/class/ptp/ptp0/n_vclocks\n0\n\nThe patch makes the ptp_vclock_in_use() function say \"if it's not a\nvirtual clock, then this physical clock does have virtual clocks on\ntop\".\n\nThen ptp_clock_freerun() uses this information to say \"this physical\nclock has virtual clocks on top, so it must stay free-running\".\n\nThen ptp_clock_adjtime() uses this information to say \"well, if this\nphysical clock has to be free-running, I can't do it, return -EBUSY\".\n\nSimply put, ptp_vclock_in_use() cannot be simplified so as to remove the\ntest whether vclocks are in use.\n\nWhat did the blamed commit intend to fix\n----------------------------------------\n\nThe blamed commit presents a lockdep warning stating \"possible recursive\nlocking detected\", with the n_vclocks_store() and ptp_clock_unregister()\nfunctions involved.\n\nThe recursive locking seems this:\nn_vclocks_store()\n-> mutex_lock_interruptible(&ptp->n_vclocks_mux) // 1\n-> device_for_each_child_reverse(..., unregister_vclock)\n   -> unregister_vclock()\n      -> ptp_vclock_unregister()\n         -> ptp_clock_unregister()\n            -> ptp_vclock_in_use()\n               -> mutex_lock_interruptible(&ptp->n_vclocks_mux) // 2\n\nThe issue can be triggered by creating and then deleting vclocks:\n$ echo 2 > /sys/class/ptp/ptp0/n_vclocks\n$ echo 0 > /sys/class/ptp/ptp0/n_vclocks\n\nBut note that in the original stack trace, the address of the first lock\nis different from the address of the second lock. This is because at\nstep 1 marked above, &ptp->n_vclocks_mux is the lock of the parent\n(physical) PTP clock, and at step 2, the lock is of the child (virtual)\nPTP clock. They are different locks of different devices.\n\nIn this situation there is no real deadlock, the lockdep warning is\ncaused by the fact that the mutexes have the same lock class on both the\nparent and the child. Functionally it is fine.\n\nProposed alternative solution\n-----------------------------\n\nWe must reintroduce the body of ptp_vclock_in_use() mostly as it was\nstructured prior to the blamed commit, but avoid the lockdep warning.\n\nBased on the fact that vclocks cannot be nested on top of one another\n(ptp_is_attribute_visible() hides n_vclocks for virtual clocks), we\nalready know that ptp->n_vclocks is zero for a virtual clock. And\nptp->is_virtual_clock is a runtime invariant, established at\nptp_clock_register() time and never changed. There is no need to\nserialize on any mutex in order to read ptp->is_virtual_clock, and we\ntake advantage of that by moving it outside the lock.\n\nThus, virtual clocks do not need to acquire &ptp->n_vclocks_mux at\nall, and step 2 in the code walkthrough above can simply go away.\nWe can simply return false to the question \"ptp_vclock_in_use(a virtual\nclock)\".\n\nOther notes\n-----------\n\nReleasing &ptp->n_vclocks_mux before ptp_vclock_in_use() returns\nexecution seems racy, because the returned value can become stale as\nsoon as the function returns and before the return value is used (i.e.\nn_vclocks_store() can run any time). The locking requirement should\nsomehow be transferred to the caller, to ensure a longer life time for\nthe returned value, but this seems out of scope for this severe bug fix.\n\nBecause we are also fixing up the logic from the original commit, there\nis another Fixes: tag for that.\n\nFixes: 87f7ce260a3c (\"ptp: remove ptp->n_vclocks check logic in ptp_vclock_in_use()\")\nFixes: 73f37068d540 (\"ptp: support ptp physical/virtual clocks conversion\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nLink: https://patch.msgid.link/20250613174749.406826-2-vladimir.oltean@nxp.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5ab73b010cad294851e558f1d4714a85c6f206c7"
            },
            {
              "sha": "aa112cbc5f0ac6f3b44d829005bf34005d9fe9bb",
              "author": {
                "email": "vladimir.oltean@nxp.com",
                "name": "Vladimir Oltean"
              },
              "message": "ptp: allow reading of currently dialed frequency to succeed on free-running clocks\n\nThere is a bug in ptp_clock_adjtime() which makes it refuse the\noperation even if we just want to read the current clock dialed\nfrequency, not modify anything (tx->modes == 0). That should be possible\neven if the clock is free-running. For context, the kernel UAPI is the\nsame for getting and setting the frequency of a POSIX clock.\n\nFor example, ptp4l errors out at clock_create() -> clockadj_get_freq()\n-> clock_adjtime() time, when it should logically only have failed on\nactual adjustments to the clock, aka if the clock was configured as\nslave. But in master mode it should work.\n\nThis was discovered when examining the issue described in the previous\ncommit, where ptp_clock_freerun() returned true despite n_vclocks being\nzero.\n\nFixes: 73f37068d540 (\"ptp: support ptp physical/virtual clocks conversion\")\nSigned-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>\nLink: https://patch.msgid.link/20250613174749.406826-3-vladimir.oltean@nxp.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/aa112cbc5f0ac6f3b44d829005bf34005d9fe9bb"
            },
            {
              "sha": "4300fd62daf219e712687fff82098490517d6b20",
              "author": {
                "email": "kuba@kernel.org",
                "name": "Jakub Kicinski"
              },
              "message": "Merge branch 'ptp_vclock-fixes'\n\nVladimir Oltean says:\n\n====================\nptp_vclock fixes\n\nWhile I was intending to test something else related to PTP in net-next\nI noticed any time I would run ptp4l on an interface, the kernel would\nprint \"ptp: physical clock is free running\" and ptp4l would exit with an\nerror code.\n\nI then found Jeongjun Park's patch and subsequent explanation provided\nto Jakub's question, specifically related to the code which introduced\nthe breakage I am seeing.\nhttps://lore.kernel.org/netdev/CAO9qdTEjQ5414un7Yw604paECF=6etVKSDSnYmZzZ6Pg3LurXw@mail.gmail.com/\n\nI had to look at the original issue that prompted Jeongjun Park's patch,\nand provide an alternative fix for it. Patch 1/2 in this set contains a\nlogical revert plus the alternative fix, squashed into one.\n\nPatch 2/2 fixes another issue which was confusing during debugging/\ncharacterization, namely: \"ok, the kernel clearly thinks that any\nphysical clock is free-running after this change (despite there being no\nvclocks), but why would ptp4l fail to create the clock altogether? Why\nnot just fail to adjust it?\"\n\nBy reverting (locally) Jeongjun Park's commit, I could reproduce\nthe reported lockdep splat using the commands from patch 1/2's commit\nmessage, and this goes away with the reworked implementation.\n====================\n\nLink: https://patch.msgid.link/20250613174749.406826-1-vladimir.oltean@nxp.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4300fd62daf219e712687fff82098490517d6b20"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-19T17:46:32Z"
      },
      {
        "id": "51113789181",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 25002288633,
          "size": 5,
          "distinct_size": 5,
          "ref": "refs/heads/master",
          "head": "24770983ccfec854d89da9d87ca5f2c9efc695fc",
          "before": "fb4d33ab452ea254e2c319bac5703d1b56d895bf",
          "commits": [
            {
              "sha": "14c9ede9ca4cd078ad76a6ab9617b81074eb58bf",
              "author": {
                "email": "hanguidong02@gmail.com",
                "name": "Gui-Dong Han"
              },
              "message": "hwmon: (ftsteutates) Fix TOCTOU race in fts_read()\n\nIn the fts_read() function, when handling hwmon_pwm_auto_channels_temp,\nthe code accesses the shared variable data->fan_source[channel] twice\nwithout holding any locks. It is first checked against\nFTS_FAN_SOURCE_INVALID, and if the check passes, it is read again\nwhen used as an argument to the BIT() macro.\n\nThis creates a Time-of-Check to Time-of-Use (TOCTOU) race condition.\nAnother thread executing fts_update_device() can modify the value of\ndata->fan_source[channel] between the check and its use. If the value\nis changed to FTS_FAN_SOURCE_INVALID (0xff) during this window, the\nBIT() macro will be called with a large shift value (BIT(255)).\nA bit shift by a value greater than or equal to the type width is\nundefined behavior and can lead to a crash or incorrect values being\nreturned to userspace.\n\nFix this by reading data->fan_source[channel] into a local variable\nonce, eliminating the race condition. Additionally, add a bounds check\nto ensure the value is less than BITS_PER_LONG before passing it to\nthe BIT() macro, making the code more robust against undefined behavior.\n\nThis possible bug was found by an experimental static analysis tool\ndeveloped by our team.\n\nFixes: 1c5759d8ce05 (\"hwmon: (ftsteutates) Replace fanX_source with pwmX_auto_channels_temp\")\nCc: stable@vger.kernel.org\nSigned-off-by: Gui-Dong Han <hanguidong02@gmail.com>\nLink: https://lore.kernel.org/r/20250606071640.501262-1-hanguidong02@gmail.com\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/14c9ede9ca4cd078ad76a6ab9617b81074eb58bf"
            },
            {
              "sha": "744c2fe950e936c4d62430de899d6253424200ed",
              "author": {
                "email": "arnd@arndb.de",
                "name": "Arnd Bergmann"
              },
              "message": "hwmon: (occ) Rework attribute registration for stack usage\n\nclang produces an output with excessive stack usage when building the\nocc_setup_sensor_attrs() function, apparently the result of having\na lot of struct literals and building with the -fno-strict-overflow\noption that leads clang to skip some optimization in case the 'attr'\npointer overruns:\n\ndrivers/hwmon/occ/common.c:775:12: error: stack frame size (1392) exceeds limit (1280) in 'occ_setup_sensor_attrs' [-Werror,-Wframe-larger-than]\n\nReplace the custom macros for initializing the attributes with a\nsimpler function call that does not run into this corner case.\n\nLink: https://godbolt.org/z/Wf1Yx76a5\nFixes: 54076cb3b5ff (\"hwmon (occ): Add sensor attributes and register hwmon device\")\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nLink: https://lore.kernel.org/r/20250610092315.2640039-1-arnd@kernel.org\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/744c2fe950e936c4d62430de899d6253424200ed"
            },
            {
              "sha": "2c021b45c154958566aad0cae9f74ab26a2d5732",
              "author": {
                "email": "arnd@arndb.de",
                "name": "Arnd Bergmann"
              },
              "message": "hwmon: (occ) fix unaligned accesses\n\nPassing a pointer to an unaligned integer as a function argument is\nundefined behavior:\n\ndrivers/hwmon/occ/common.c:492:27: warning: taking address of packed member 'accumulator' of class or structure 'power_sensor_2' may result in an unaligned pointer value [-Waddress-of-packed-member]\n  492 |   val = occ_get_powr_avg(&power->accumulator,\n      |                           ^~~~~~~~~~~~~~~~~~\ndrivers/hwmon/occ/common.c:493:13: warning: taking address of packed member 'update_tag' of class or structure 'power_sensor_2' may result in an unaligned pointer value [-Waddress-of-packed-member]\n  493 |            &power->update_tag);\n      |             ^~~~~~~~~~~~~~~~~\n\nMove the get_unaligned() calls out of the function and pass these\nthrough argument registers instead.\n\nFixes: c10e753d43eb (\"hwmon (occ): Add sensor types and versions\")\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nLink: https://lore.kernel.org/r/20250610092553.2641094-1-arnd@kernel.org\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2c021b45c154958566aad0cae9f74ab26a2d5732"
            },
            {
              "sha": "c25892b7a1744355e16281cd24a9b59ec15ec974",
              "author": {
                "email": "nuno.sa@analog.com",
                "name": "Nuno Sá"
              },
              "message": "hwmon: (ltc4282) avoid repeated register write\n\nThe fault enabled bits were being mistankenly enabled twice in case the FW\nproperty is present. Remove one of the writes.\n\nFixes: cbc29538dbf7 (\"hwmon: Add driver for LTC4282\")\nSigned-off-by: Nuno Sá <nuno.sa@analog.com>\nLink: https://lore.kernel.org/r/20250611-fix-ltc4282-repetead-write-v1-1-fe46edd08cf1@analog.com\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c25892b7a1744355e16281cd24a9b59ec15ec974"
            },
            {
              "sha": "24770983ccfec854d89da9d87ca5f2c9efc695fc",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'hwmon-for-v6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging\n\nPull hwmon fixes from Guenter Roeck:\n\n - ltc4282: Avoid repeated register write operation\n\n - occ: Fix unaligned accesses, and rework attribute registration to\n   reduce stack usage\n\n - ftsteutates: Fix TOCTOU race\n\n* tag 'hwmon-for-v6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging:\n  hwmon: (ltc4282) avoid repeated register write\n  hwmon: (occ) fix unaligned accesses\n  hwmon: (occ) Rework attribute registration for stack usage\n  hwmon: (ftsteutates) Fix TOCTOU race in fts_read()",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/24770983ccfec854d89da9d87ca5f2c9efc695fc"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-19T16:24:10Z"
      },
      {
        "id": "51085258709",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 24988404027,
          "size": 2,
          "distinct_size": 2,
          "ref": "refs/heads/main",
          "head": "89298f8bfd86f1d61ca3e76123c3b8f31c9277dc",
          "before": "c7f547f3bc484396114b9f597cd00b2dd6748eaf",
          "commits": [
            {
              "sha": "83d119ed6189c68455c4f397cdb7d6817fe0862c",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Multiplier cleanup: remove PCB, fix comment\n\nI'm not making a board of the multiplier itself, I'll make boards that\nuse this.  So keep the multiplier as a schematic, and remove the stale\npcb file.\n\nFix a stale comment while at it.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/83d119ed6189c68455c4f397cdb7d6817fe0862c"
            },
            {
              "sha": "89298f8bfd86f1d61ca3e76123c3b8f31c9277dc",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Add ImSquared effect where we use the multiplier as an octaver\n\nIt basically squares the input by multiplying it with itself.  With some\nscaling and blending pots to play with it.\n\nThis feels like it might be better than the rectifier, in how it avoids\nthe harsh edges when crossing the zero point.  But so far my judgement\non how it sounds from looking at the signal hasn't been very good, so...\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/89298f8bfd86f1d61ca3e76123c3b8f31c9277dc"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-19T03:37:24Z"
      },
      {
        "id": "51081753970",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 24986577063,
          "size": 11,
          "distinct_size": 11,
          "ref": "refs/heads/master",
          "head": "fb4d33ab452ea254e2c319bac5703d1b56d895bf",
          "before": "74b4cc9b8780bfe8a3992c9ac0033bf22ac01f19",
          "commits": [
            {
              "sha": "1b56e765bf8990f1f60e124926c11fc4ac63d752",
              "author": {
                "email": "dakr@kernel.org",
                "name": "Danilo Krummrich"
              },
              "message": "rust: completion: implement initial abstraction\n\nImplement a minimal abstraction for the completion synchronization\nprimitive.\n\nThis initial abstraction only adds complete_all() and\nwait_for_completion(), since that is what is required for the subsequent\nDevres patch.\n\nCc: Ingo Molnar <mingo@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Juri Lelli <juri.lelli@redhat.com>\nCc: Vincent Guittot <vincent.guittot@linaro.org>\nCc: Dietmar Eggemann <dietmar.eggemann@arm.com>\nCc: Steven Rostedt <rostedt@goodmis.org>\nCc: Ben Segall <bsegall@google.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Valentin Schneider <vschneid@redhat.com>\nReviewed-by: Alice Ryhl <aliceryhl@google.com>\nReviewed-by: Boqun Feng <boqun.feng@gmail.com>\nReviewed-by: Benno Lossin <lossin@kernel.org>\nAcked-by: Miguel Ojeda <ojeda@kernel.org>\nLink: https://lore.kernel.org/r/20250612121817.1621-2-dakr@kernel.org\nSigned-off-by: Danilo Krummrich <dakr@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/1b56e765bf8990f1f60e124926c11fc4ac63d752"
            },
            {
              "sha": "4b76fafb20dd4a2becb94949d78e86bc88006509",
              "author": {
                "email": "dakr@kernel.org",
                "name": "Danilo Krummrich"
              },
              "message": "rust: revocable: indicate whether `data` has been revoked already\n\nReturn a boolean from Revocable::revoke() and Revocable::revoke_nosync()\nto indicate whether the data has been revoked already.\n\nReturn true if the data hasn't been revoked yet (i.e. this call revoked\nthe data), false otherwise.\n\nThis is required by Devres in order to synchronize the completion of the\nrevoke process.\n\nReviewed-by: Benno Lossin <lossin@kernel.org>\nAcked-by: Miguel Ojeda <ojeda@kernel.org>\nLink: https://lore.kernel.org/r/20250612121817.1621-3-dakr@kernel.org\nSigned-off-by: Danilo Krummrich <dakr@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4b76fafb20dd4a2becb94949d78e86bc88006509"
            },
            {
              "sha": "f744201c6159fc7323c40936fd079525f7063598",
              "author": {
                "email": "dakr@kernel.org",
                "name": "Danilo Krummrich"
              },
              "message": "rust: devres: fix race in Devres::drop()\n\nIn Devres::drop() we first remove the devres action and then drop the\nwrapped device resource.\n\nThe design goal is to give the owner of a Devres object control over when\nthe device resource is dropped, but limit the overall scope to the\ncorresponding device being bound to a driver.\n\nHowever, there's a race that was introduced with commit 8ff656643d30\n(\"rust: devres: remove action in `Devres::drop`\"), but also has been\n(partially) present from the initial version on.\n\nIn Devres::drop(), the devres action is removed successfully and\nsubsequently the destructor of the wrapped device resource runs.\nHowever, there is no guarantee that the destructor of the wrapped device\nresource completes before the driver core is done unbinding the\ncorresponding device.\n\nIf in Devres::drop(), the devres action can't be removed, it means that\nthe devres callback has been executed already, or is still running\nconcurrently. In case of the latter, either Devres::drop() wins revoking\nthe Revocable or the devres callback wins revoking the Revocable. If\nDevres::drop() wins, we (again) have no guarantee that the destructor of\nthe wrapped device resource completes before the driver core is done\nunbinding the corresponding device.\n\nCPU0\t\t\t\t\tCPU1\n------------------------------------------------------------------------\nDevres::drop() {\t\t\tDevres::devres_callback() {\n   self.data.revoke() {\t\t\t   this.data.revoke() {\n      is_available.swap() == true\n\t\t\t\t\t      is_available.swap == false\n\t\t\t\t\t   }\n\t\t\t\t\t}\n\n\t\t\t\t\t// [...]\n\t\t\t\t\t// device fully unbound\n      drop_in_place() {\n         // release device resource\n      }\n   }\n}\n\nDepending on the specific device resource, this can potentially lead to\nuser-after-free bugs.\n\nIn order to fix this, implement the following logic.\n\nIn the devres callback, we're always good when we get to revoke the\ndevice resource ourselves, i.e. Revocable::revoke() returns true.\n\nIf Revocable::revoke() returns false, it means that Devres::drop(),\nconcurrently, already drops the device resource and we have to wait for\nDevres::drop() to signal that it finished dropping the device resource.\n\nNote that if we hit the case where we need to wait for the completion of\nDevres::drop() in the devres callback, it means that we're actually\nracing with a concurrent Devres::drop() call, which already started\nrevoking the device resource for us. This is rather unlikely and means\nthat the concurrent Devres::drop() already started doing our work and we\njust need to wait for it to complete it for us. Hence, there should not\nbe any additional overhead from that.\n\n(Actually, for now it's even better if Devres::drop() does the work for\nus, since it can bypass the synchronize_rcu() call implied by\nRevocable::revoke(), but this goes away anyways once I get to implement\nthe split devres callback approach, which allows us to first flip the\natomics of all registered Devres objects of a certain device, execute a\nsingle synchronize_rcu() and then drop all revocable objects.)\n\nIn Devres::drop() we try to revoke the device resource. If that is *not*\nsuccessful, it means that the devres callback already did and we're good.\n\nOtherwise, we try to remove the devres action, which, if successful,\nmeans that we're good, since the device resource has just been revoked\nby us *before* we removed the devres action successfully.\n\nIf the devres action could not be removed, it means that the devres\ncallback must be running concurrently, hence we signal that the device\nresource has been revoked by us, using the completion.\n\nThis makes it safe to drop a Devres object from any task and at any point\nof time, which is one of the design goals.\n\nFixes: 76c01ded724b (\"rust: add devres abstraction\")\nReported-by: Alice Ryhl <aliceryhl@google.com>\nCloses: https://lore.kernel.org/lkml/aD64YNuqbPPZHAa5@google.com/\nReviewed-by: Benno Lossin <lossin@kernel.org>\nLink: https://lore.kernel.org/r/20250612121817.1621-4-dakr@kernel.org\nSigned-off-by: Danilo Krummrich <dakr@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/f744201c6159fc7323c40936fd079525f7063598"
            },
            {
              "sha": "20c96ed278e362ae4e324ed7d8c69fb48c508d3c",
              "author": {
                "email": "dakr@kernel.org",
                "name": "Danilo Krummrich"
              },
              "message": "rust: devres: do not dereference to the internal Revocable\n\nWe can't expose direct access to the internal Revocable, since this\nallows users to directly revoke the internal Revocable without Devres\nhaving the chance to synchronize with the devres callback -- we have to\nguarantee that the internal Revocable has been fully revoked before\nthe device is fully unbound.\n\nHence, remove the corresponding Deref implementation and, instead,\nprovide indirect accessors for the internal Revocable.\n\nNote that we can still support Devres::revoke() by implementing the\nrequired synchronization (which would be almost identical to the\nsynchronization in Devres::drop()).\n\nFixes: 76c01ded724b (\"rust: add devres abstraction\")\nReviewed-by: Benno Lossin <lossin@kernel.org>\nLink: https://lore.kernel.org/r/20250611174827.380555-1-dakr@kernel.org\nSigned-off-by: Danilo Krummrich <dakr@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/20c96ed278e362ae4e324ed7d8c69fb48c508d3c"
            },
            {
              "sha": "b8b8663ac82a2595a0922d30014f60c5547084de",
              "author": {
                "email": "dakr@kernel.org",
                "name": "Danilo Krummrich"
              },
              "message": "mailmap: add entry for Danilo Krummrich\n\nAdd an entry to remap my Red Hat address.\n\nLink: https://lore.kernel.org/r/20250614092054.161658-1-dakr@kernel.org\nSigned-off-by: Danilo Krummrich <dakr@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b8b8663ac82a2595a0922d30014f60c5547084de"
            },
            {
              "sha": "a89f5fae998bdc4d0505306f93844c9ae059d50c",
              "author": {
                "email": "linkinjeon@kernel.org",
                "name": "Namjae Jeon"
              },
              "message": "ksmbd: add free_transport ops in ksmbd connection\n\nfree_transport function for tcp connection can be called from smbdirect.\nIt will cause kernel oops. This patch add free_transport ops in ksmbd\nconnection, and add each free_transports for tcp and smbdirect.\n\nFixes: 21a4e47578d4 (\"ksmbd: fix use-after-free in __smb2_lease_break_noti()\")\nReviewed-by: Stefan Metzmacher <metze@samba.org>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a89f5fae998bdc4d0505306f93844c9ae059d50c"
            },
            {
              "sha": "7ac5b66acafcc9292fb935d7e03790f2b8b2dc0e",
              "author": {
                "email": "linkinjeon@kernel.org",
                "name": "Namjae Jeon"
              },
              "message": "ksmbd: fix null pointer dereference in destroy_previous_session\n\nIf client set ->PreviousSessionId on kerberos session setup stage,\nNULL pointer dereference error will happen. Since sess->user is not\nset yet, It can pass the user argument as NULL to destroy_previous_session.\nsess->user will be set in ksmbd_krb5_authenticate(). So this patch move\ncalling destroy_previous_session() after ksmbd_krb5_authenticate().\n\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-27391\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/7ac5b66acafcc9292fb935d7e03790f2b8b2dc0e"
            },
            {
              "sha": "4ea0bb8aaedfad8e695429cda6bd1c8b0dad0844",
              "author": {
                "email": "linkinjeon@kernel.org",
                "name": "Namjae Jeon"
              },
              "message": "ksmbd: handle set/get info file for streamed file\n\nThe bug only appears when:\n - windows 11 copies a file that has an alternate data stream\n - streams_xattr is enabled on the share configuration.\n\nMicrosoft Edge adds a ZoneIdentifier data stream containing the URL\nfor files it downloads.\n\nAnother way to create a test file:\n - open cmd.exe\n - echo \"hello from default data stream\" > hello.txt\n - echo \"hello again from ads\" > hello.txt:ads.txt\n\nIf you open the file using notepad, we'll see the first message.\nIf you run \"notepad hello.txt:ads.txt\" in cmd.exe, we should see\nthe second message.\n\ndir /s /r should least all streams for the file.\n\nThe truncation happens because the windows 11 client sends\na SetInfo/EndOfFile message on the ADS, but it is instead applied\non the main file, because we don't check fp->stream.\n\nWhen receiving set/get info file for a stream file, Change to process\nrequests using stream position and size.\nTruncate is unnecessary for stream files, so we skip\nset_file_allocation_info and set_end_of_file_info operations.\n\nReported-by: Marios Makassikis <mmakassikis@freebox.fr>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4ea0bb8aaedfad8e695429cda6bd1c8b0dad0844"
            },
            {
              "sha": "eab9dcb76b9fca47402c9e93afca243e745a0f02",
              "author": {
                "email": "maddy@linux.ibm.com",
                "name": "Madhavan Srinivasan"
              },
              "message": "Documentation: embargoed-hardware-issues.rst: Add myself for Power\n\nAdding myself as the contact for Power\n\nSigned-off-by: Madhavan Srinivasan <maddy@linux.ibm.com>\nLink: https://lore.kernel.org/r/20250614152925.82831-1-maddy@linux.ibm.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/eab9dcb76b9fca47402c9e93afca243e745a0f02"
            },
            {
              "sha": "229f135e0680da3dd0bcce515c07be87858f1d12",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'driver-core-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/driver-core/driver-core\n\nPull driver core fixes from Danilo Krummrich:\n\n - Fix a race condition in Devres::drop(). This depends on two other\n   patches:\n     - (Minimal) Rust abstractions for struct completion\n     - Let Revocable indicate whether its data is already being revoked\n\n - Fix Devres to avoid exposing the internal Revocable\n\n - Add .mailmap entry for Danilo Krummrich\n\n - Add Madhavan Srinivasan to embargoed-hardware-issues.rst\n\n* tag 'driver-core-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/driver-core/driver-core:\n  Documentation: embargoed-hardware-issues.rst: Add myself for Power\n  mailmap: add entry for Danilo Krummrich\n  rust: devres: do not dereference to the internal Revocable\n  rust: devres: fix race in Devres::drop()\n  rust: revocable: indicate whether `data` has been revoked already\n  rust: completion: implement initial abstraction",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/229f135e0680da3dd0bcce515c07be87858f1d12"
            },
            {
              "sha": "fb4d33ab452ea254e2c319bac5703d1b56d895bf",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag '6.16-rc2-ksmbd-server-fixes' of git://git.samba.org/ksmbd\n\nPull smb server fixes from Steve French:\n\n - Fix alternate data streams bug\n\n - Important fix for null pointer deref with Kerberos authentication\n\n - Fix oops in smbdirect (RDMA) in free_transport\n\n* tag '6.16-rc2-ksmbd-server-fixes' of git://git.samba.org/ksmbd:\n  ksmbd: handle set/get info file for streamed file\n  ksmbd: fix null pointer dereference in destroy_previous_session\n  ksmbd: add free_transport ops in ksmbd connection",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fb4d33ab452ea254e2c319bac5703d1b56d895bf"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-19T00:50:40Z"
      },
      {
        "id": "51077244463",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 24984290683,
          "size": 12,
          "distinct_size": 12,
          "ref": "refs/heads/master",
          "head": "74b4cc9b8780bfe8a3992c9ac0033bf22ac01f19",
          "before": "5adb635077d1b4bd65b183022775a59a378a9c00",
          "commits": [
            {
              "sha": "47096d301e39f96962ca1fd6c7b71bfa796c53db",
              "author": {
                "email": "tj@kernel.org",
                "name": "Tejun Heo"
              },
              "message": "sched_ext: Update mailing list entry in MAINTAINERS\n\nUse sched-ext@lists.linux.dev instead of LKML.\n\nSigned-off-by: Tejun Heo <tj@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/47096d301e39f96962ca1fd6c7b71bfa796c53db"
            },
            {
              "sha": "e202196b8aa249d78ab87eae56bbe0e71e3dc39c",
              "author": {
                "email": "kees@kernel.org",
                "name": "Kees Cook"
              },
              "message": "lib/crypto: Annotate crypto strings with nonstring\n\nAnnotate various keys, ivs, and other byte arrays with __nonstring so\nthat static initializers will not complain about truncating the trailing\nNUL byte under GCC 15 with -Wunterminated-string-initialization enabled.\nSilences many warnings like:\n\n../lib/crypto/aesgcm.c:642:27: warning: initializer-string for array of 'unsigned char' truncates NUL terminator but destination lacks 'nonstring' attribute (13 chars into 12 available) [-Wunterminated-string-initialization]\n  642 |                 .iv     = \"\\xca\\xfe\\xba\\xbe\\xfa\\xce\\xdb\\xad\"\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSigned-off-by: Kees Cook <kees@kernel.org>\nLink: https://lore.kernel.org/r/20250529173113.work.760-kees@kernel.org\nSigned-off-by: Eric Biggers <ebiggers@google.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/e202196b8aa249d78ab87eae56bbe0e71e3dc39c"
            },
            {
              "sha": "2f13daee2a72bb962f5fd356c3a263a6f16da965",
              "author": {
                "email": "nathan@kernel.org",
                "name": "Nathan Chancellor"
              },
              "message": "lib/crypto/curve25519-hacl64: Disable KASAN with clang-17 and older\n\nAfter commit 6f110a5e4f99 (\"Disable SLUB_TINY for build testing\"), which\ncauses CONFIG_KASAN to be enabled in allmodconfig again, arm64\nallmodconfig builds with clang-17 and older show an instance of\n-Wframe-larger-than (which breaks the build with CONFIG_WERROR=y):\n\n  lib/crypto/curve25519-hacl64.c:757:6: error: stack frame size (2336) exceeds limit (2048) in 'curve25519_generic' [-Werror,-Wframe-larger-than]\n    757 | void curve25519_generic(u8 mypublic[CURVE25519_KEY_SIZE],\n        |      ^\n\nWhen KASAN is disabled, the stack usage is roughly quartered:\n\n  lib/crypto/curve25519-hacl64.c:757:6: error: stack frame size (608) exceeds limit (128) in 'curve25519_generic' [-Werror,-Wframe-larger-than]\n    757 | void curve25519_generic(u8 mypublic[CURVE25519_KEY_SIZE],\n        |      ^\n\nUsing '-Rpass-analysis=stack-frame-layout' shows the following variables\nand many, many 8-byte spills when KASAN is enabled:\n\n  Offset: [SP-144], Type: Variable, Align: 8, Size: 40\n  Offset: [SP-464], Type: Variable, Align: 8, Size: 320\n  Offset: [SP-784], Type: Variable, Align: 8, Size: 320\n  Offset: [SP-864], Type: Variable, Align: 32, Size: 80\n  Offset: [SP-896], Type: Variable, Align: 32, Size: 32\n  Offset: [SP-1016], Type: Variable, Align: 8, Size: 120\n\nWhen KASAN is disabled, there are still spills but not at many and the\nvariables list is smaller:\n\n  Offset: [SP-192], Type: Variable, Align: 32, Size: 80\n  Offset: [SP-224], Type: Variable, Align: 32, Size: 32\n  Offset: [SP-344], Type: Variable, Align: 8, Size: 120\n\nDisable KASAN for this file when using clang-17 or older to avoid\nblowing out the stack, clearing up the warning.\n\nSigned-off-by: Nathan Chancellor <nathan@kernel.org>\nAcked-by: \"Jason A. Donenfeld\" <Jason@zx2c4.com>\nAcked-by: Ard Biesheuvel <ardb@kernel.org>\nLink: https://lore.kernel.org/r/20250609-curve25519-hacl64-disable-kasan-clang-v1-1-08ea0ac5ccff@kernel.org\nSigned-off-by: Eric Biggers <ebiggers@google.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/2f13daee2a72bb962f5fd356c3a263a6f16da965"
            },
            {
              "sha": "9d4204a8106fe7dc80e3f2e440c8f2ba1ba47319",
              "author": {
                "email": "ebiggers@google.com",
                "name": "Eric Biggers"
              },
              "message": "lib/crypto/poly1305: Fix arm64's poly1305_blocks_arch()\n\nFor some reason arm64's Poly1305 code got changed to ignore the padbit\nargument.  As a result, the output is incorrect when the message length\nis not a multiple of 16 (which is not reached with the standard\nChaCha20Poly1305, but bcachefs could reach this).  Fix this.\n\nFixes: a59e5468a921 (\"crypto: arm64/poly1305 - Add block-only interface\")\nReported-by: Kent Overstreet <kent.overstreet@linux.dev>\nTested-by: Kent Overstreet <kent.overstreet@linux.dev>\nLink: https://lore.kernel.org/r/20250616010654.367302-1-ebiggers@kernel.org\nSigned-off-by: Eric Biggers <ebiggers@google.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/9d4204a8106fe7dc80e3f2e440c8f2ba1ba47319"
            },
            {
              "sha": "c50784e99f0e7199cdb12dbddf02229b102744ef",
              "author": {
                "email": "tj@kernel.org",
                "name": "Tejun Heo"
              },
              "message": "sched_ext: Make scx_group_set_weight() always update tg->scx.weight\n\nOtherwise, tg->scx.weight can go out of sync while scx_cgroup is not enabled\nand ops.cgroup_init() may be called with a stale weight value.\n\nSigned-off-by: Tejun Heo <tj@kernel.org>\nFixes: 819513666966 (\"sched_ext: Add cgroup support\")\nCc: stable@vger.kernel.org # v6.12+",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/c50784e99f0e7199cdb12dbddf02229b102744ef"
            },
            {
              "sha": "33796b91871ad4010c8188372dd1faf97cf0f1c0",
              "author": {
                "email": "tj@kernel.org",
                "name": "Tejun Heo"
              },
              "message": "sched_ext, sched/core: Don't call scx_group_set_weight() prematurely from sched_create_group()\n\nDuring task_group creation, sched_create_group() calls\nscx_group_set_weight() with CGROUP_WEIGHT_DFL to initialize the sched_ext\nportion. This is premature and ends up calling ops.cgroup_set_weight() with\nan incorrect @cgrp before ops.cgroup_init() is called.\n\nsched_create_group() should just initialize SCX related fields in the new\ntask_group. Fix it by factoring out scx_tg_init() from sched_init() and\nmaking sched_create_group() call that function instead of\nscx_group_set_weight().\n\nv2: Retain CONFIG_EXT_GROUP_SCHED ifdef in sched_init() as removing it leads\n    to build failures on !CONFIG_GROUP_SCHED configs.\n\nSigned-off-by: Tejun Heo <tj@kernel.org>\nFixes: 819513666966 (\"sched_ext: Add cgroup support\")\nCc: stable@vger.kernel.org # v6.12+",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/33796b91871ad4010c8188372dd1faf97cf0f1c0"
            },
            {
              "sha": "261dce3d64021e7ec828a17b4975ce9182e54ceb",
              "author": {
                "email": "zhouchuyi@bytedance.com",
                "name": "Chuyi Zhou"
              },
              "message": "workqueue: Initialize wq_isolated_cpumask in workqueue_init_early()\n\nNow when isolcpus is enabled via the cmdline, wq_isolated_cpumask does\nnot include these isolated CPUs, even wq_unbound_cpumask has already\nexcluded them. It is only when we successfully configure an isolate cpuset\npartition that wq_isolated_cpumask gets overwritten by\nworkqueue_unbound_exclude_cpumask(), including both the cmdline-specified\nisolated CPUs and the isolated CPUs within the cpuset partitions.\n\nFix this issue by initializing wq_isolated_cpumask properly in\nworkqueue_init_early().\n\nFixes: fe28f631fa94 (\"workqueue: Add workqueue_unbound_exclude_cpumask() to exclude CPUs from wq_unbound_cpumask\")\nSigned-off-by: Chuyi Zhou <zhouchuyi@bytedance.com>\nReviewed-by: Waiman Long <longman@redhat.com>\nSigned-off-by: Tejun Heo <tj@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/261dce3d64021e7ec828a17b4975ce9182e54ceb"
            },
            {
              "sha": "37fb58a7273726e59f9429c89ade5116083a213d",
              "author": {
                "email": "chenridong@huawei.com",
                "name": "Chen Ridong"
              },
              "message": "cgroup,freezer: fix incomplete freezing when attaching tasks\n\nAn issue was found:\n\n\t# cd /sys/fs/cgroup/freezer/\n\t# mkdir test\n\t# echo FROZEN > test/freezer.state\n\t# cat test/freezer.state\n\tFROZEN\n\t# sleep 1000 &\n\t[1] 863\n\t# echo 863 > test/cgroup.procs\n\t# cat test/freezer.state\n\tFREEZING\n\nWhen tasks are migrated to a frozen cgroup, the freezer fails to\nimmediately freeze the tasks, causing the cgroup to remain in the\n\"FREEZING\".\n\nThe freeze_task() function is called before clearing the CGROUP_FROZEN\nflag. This causes the freezing() check to incorrectly return false,\npreventing __freeze_task() from being invoked for the migrated task.\n\nTo fix this issue, clear the CGROUP_FROZEN state before calling\nfreeze_task().\n\nFixes: f5d39b020809 (\"freezer,sched: Rewrite core freezer logic\")\nCc: stable@vger.kernel.org # v6.1+\nReported-by: Zhong Jiawei <zhongjiawei1@huawei.com>\nSigned-off-by: Chen Ridong <chenridong@huawei.com>\nAcked-by: Michal Koutný <mkoutny@suse.com>\nSigned-off-by: Tejun Heo <tj@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/37fb58a7273726e59f9429c89ade5116083a213d"
            },
            {
              "sha": "61f4769affffc398499250ccacf0b86d5b654399",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'libcrypto-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiggers/linux\n\nPull crypto library fixes from Eric Biggers:\n\n - Fix a regression in the arm64 Poly1305 code\n\n - Fix a couple compiler warnings\n\n* tag 'libcrypto-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiggers/linux:\n  lib/crypto/poly1305: Fix arm64's poly1305_blocks_arch()\n  lib/crypto/curve25519-hacl64: Disable KASAN with clang-17 and older\n  lib/crypto: Annotate crypto strings with nonstring",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/61f4769affffc398499250ccacf0b86d5b654399"
            },
            {
              "sha": "4f24bfcc398eb77aa41fe1bb1621d8c2cca5368d",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'sched_ext-for-6.16-rc2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/sched_ext\n\nPull sched_ext fixes from Tejun Heo:\n\n - Fix a couple bugs in cgroup cpu.weight support\n\n - Add the new sched-ext@lists.linux.dev to MAINTAINERS\n\n* tag 'sched_ext-for-6.16-rc2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/sched_ext:\n  sched_ext, sched/core: Don't call scx_group_set_weight() prematurely from sched_create_group()\n  sched_ext: Make scx_group_set_weight() always update tg->scx.weight\n  sched_ext: Update mailing list entry in MAINTAINERS",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/4f24bfcc398eb77aa41fe1bb1621d8c2cca5368d"
            },
            {
              "sha": "0564e6a8c2c3152783906534d5767cabe1b05930",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'wq-for-6.16-rc2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq\n\nPull workqueue fix from Tejun Heo:\n\n - Fix missed early init of wq_isolated_cpumask\n\n* tag 'wq-for-6.16-rc2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/wq:\n  workqueue: Initialize wq_isolated_cpumask in workqueue_init_early()",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/0564e6a8c2c3152783906534d5767cabe1b05930"
            },
            {
              "sha": "74b4cc9b8780bfe8a3992c9ac0033bf22ac01f19",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'cgroup-for-6.16-rc2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup\n\nPull cgroup fix from Tejun Heo:\n\n - In cgroup1 freezer, a task migrating into a frozen cgroup might not\n   get frozen immediately due to the wrong operation order. Fix it.\n\n* tag 'cgroup-for-6.16-rc2-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup:\n  cgroup,freezer: fix incomplete freezing when attaching tasks",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/74b4cc9b8780bfe8a3992c9ac0033bf22ac01f19"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-18T21:29:29Z"
      },
      {
        "id": "51070260786",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 24980908399,
          "size": 12,
          "distinct_size": 12,
          "ref": "refs/heads/master",
          "head": "5adb635077d1b4bd65b183022775a59a378a9c00",
          "before": "52da431bf03b5506203bca27fe14a97895c80faf",
          "commits": [
            {
              "sha": "d29fc02caad7f94b62d56ee1b01c954f9c961ba7",
              "author": {
                "email": "tasos@tasossah.com",
                "name": "Tasos Sahanidis"
              },
              "message": "ata: pata_via: Force PIO for ATAPI devices on VT6415/VT6330\n\nThe controller has a hardware bug that can hard hang the system when\ndoing ATAPI DMAs without any trace of what happened. Depending on the\ndevice attached, it can also prevent the system from booting.\n\nIn this case, the system hangs when reading the ATIP from optical media\nwith cdrecord -vvv -atip on an _NEC DVD_RW ND-4571A 1-01 and an\nOptiarc DVD RW AD-7200A 1.06 attached to an ASRock 990FX Extreme 4,\nrunning at UDMA/33.\n\nThe issue can be reproduced by running the same command with a cygwin\nbuild of cdrecord on WinXP, although it requires more attempts to cause\nit. The hang in that case is also resolved by forcing PIO. It doesn't\nappear that VIA has produced any drivers for that OS, thus no known\nworkaround exists.\n\nHDDs attached to the controller do not suffer from any DMA issues.\n\nCc: stable@vger.kernel.org\nLink: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/916677\nSigned-off-by: Tasos Sahanidis <tasos@tasossah.com>\nLink: https://lore.kernel.org/r/20250519085508.1398701-1-tasos@tasossah.com\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/d29fc02caad7f94b62d56ee1b01c954f9c961ba7"
            },
            {
              "sha": "33877220b8641b4cde474a4229ea92c0e3637883",
              "author": {
                "email": "tasos@tasossah.com",
                "name": "Tasos Sahanidis"
              },
              "message": "ata: libata-acpi: Do not assume 40 wire cable if no devices are enabled\n\nOn at least an ASRock 990FX Extreme 4 with a VIA VT6330, the devices\nhave not yet been enabled by the first time ata_acpi_cbl_80wire() is\ncalled. This means that the ata_for_each_dev loop is never entered,\nand a 40 wire cable is assumed.\n\nThe VIA controller on this board does not report the cable in the PCI\nconfig space, thus having to fall back to ACPI even though no SATA\nbridge is present.\n\nThe _GTM values are correctly reported by the firmware through ACPI,\nwhich has already set up faster transfer modes, but due to the above\nthe controller is forced down to a maximum of UDMA/33.\n\nResolve this by modifying ata_acpi_cbl_80wire() to directly return the\ncable type. First, an unknown cable is assumed which preserves the mode\nset by the firmware, and then on subsequent calls when the devices have\nbeen enabled, an 80 wire cable is correctly detected.\n\nSince the function now directly returns the cable type, it is renamed\nto ata_acpi_cbl_pata_type().\n\nSigned-off-by: Tasos Sahanidis <tasos@tasossah.com>\nLink: https://lore.kernel.org/r/20250519085945.1399466-1-tasos@tasossah.com\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/33877220b8641b4cde474a4229ea92c0e3637883"
            },
            {
              "sha": "fe5b391fc56f77cf3c22a9dd4f0ce20db0e3533f",
              "author": {
                "email": "johannes.berg@intel.com",
                "name": "Johannes Berg"
              },
              "message": "ata: pata_cs5536: fix build on 32-bit UML\n\nOn 32-bit ARCH=um, CONFIG_X86_32 is still defined, so it\ndoesn't indicate building on real X86 machines. There's\nno MSR on UML though, so add a check for CONFIG_X86.\n\nReported-by: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>\nLink: https://lore.kernel.org/r/20250606090110.15784-2-johannes@sipsolutions.net\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/fe5b391fc56f77cf3c22a9dd4f0ce20db0e3533f"
            },
            {
              "sha": "3e5378779091c2f9a96d4404066e1923c92ceb8b",
              "author": {
                "email": "phasta@kernel.org",
                "name": "Philipp Stanner"
              },
              "message": "ata: pata_macio: Fix PCI region leak\n\npci_request_regions() became a managed devres functions if the PCI\ndevice was enabled with pcim_enable_device(), which is the case for\npata_macio.\n\nThe PCI subsystem recently removed this hybrid feature from\npci_request_region(). When doing so, pata_macio was forgotten to be\nported to use pcim_request_all_regions(). If that function is not used,\npata_macio will fail on driver-reload because the PCI regions will\nremain blocked.\n\nFix the region leak by replacing pci_request_regions() with its managed\ncounterpart, pcim_request_all_regions().\n\nFixes: 51f6aec99cb0 (\"PCI: Remove hybrid devres nature from request functions\")\nSigned-off-by: Philipp Stanner <phasta@kernel.org>\nReviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>\nReviewed-by: Damien Le Moal <dlemoal@kernel.org>\nLink: https://lore.kernel.org/r/20250610135413.35930-2-phasta@kernel.org\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/3e5378779091c2f9a96d4404066e1923c92ceb8b"
            },
            {
              "sha": "6f29d393061c2c1fa30a72a0e9b01e15e09dae34",
              "author": {
                "email": "cassel@kernel.org",
                "name": "Niklas Cassel"
              },
              "message": "ata: ahci: Use correct BIOS build date for ThinkPad W541 quirk\n\nFix the TODO in ahci_broken_lpm() by using the proper BIOS build date.\n\nThe proper BIOS build date was provided by Hans, see Link.\n\nLink: https://lore.kernel.org/linux-ide/6ea509c8-b38d-4941-8a29-c1117ff3dd5b@redhat.com/\nReviewed-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Hans de Goede <hansg@kernel.org>\nLink: https://lore.kernel.org/r/20250610110757.1318959-6-cassel@kernel.org\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/6f29d393061c2c1fa30a72a0e9b01e15e09dae34"
            },
            {
              "sha": "b5acc3628898baa63658bc4125f9525f9b3dd4f3",
              "author": {
                "email": "cassel@kernel.org",
                "name": "Niklas Cassel"
              },
              "message": "ata: ahci: Disallow LPM for ASUSPRO-D840SA motherboard\n\nA user has bisected a regression which causes graphical corruptions on his\nscreen to commit 7627a0edef54 (\"ata: ahci: Drop low power policy board\ntype\").\n\nSimply reverting commit 7627a0edef54 (\"ata: ahci: Drop low power policy\nboard type\") makes the graphical corruptions on his screen to go away.\n(Note: there are no visible messages in dmesg that indicates a problem\nwith AHCI.)\n\nThe user also reports that the problem occurs regardless if there is an\nHDD or an SSD connected via AHCI, so the problem is not device related.\n\nThe devices also work fine on other motherboards, so it seems specific to\nthe ASUSPRO-D840SA motherboard.\n\nWhile enabling low power modes for AHCI is not supposed to affect\ncompletely unrelated hardware, like a graphics card, it does however\nallow the system to enter deeper PC-states, which could expose ACPI issues\nthat were previously not visible (because the system never entered these\nlower power states before).\n\nThere are previous examples where enabling LPM exposed serious BIOS/ACPI\nbugs, see e.g. commit 240630e61870 (\"ahci: Disable LPM on Lenovo 50 series\nlaptops with a too old BIOS\").\n\nSince there hasn't been any BIOS update in years for the ASUSPRO-D840SA\nmotherboard, disable LPM for this board, in order to avoid entering lower\nPC-states, which triggers graphical corruptions.\n\nCc: stable@vger.kernel.org\nReported-by: Andy Yang <andyybtc79@gmail.com>\nCloses: https://bugzilla.kernel.org/show_bug.cgi?id=220111\nFixes: 7627a0edef54 (\"ata: ahci: Drop low power policy board type\")\nReviewed-by: Damien Le Moal <dlemoal@kernel.org>\nReviewed-by: Hans de Goede <hansg@kernel.org>\nLink: https://lore.kernel.org/r/20250612141750.2108342-2-cassel@kernel.org\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/b5acc3628898baa63658bc4125f9525f9b3dd4f3"
            },
            {
              "sha": "86c8db86af43f52f682e53a0f2f0828683be1e52",
              "author": {
                "email": "stephen.smalley.work@gmail.com",
                "name": "Stephen Smalley"
              },
              "message": "selinux: fix selinux_xfrm_alloc_user() to set correct ctx_len\n\nWe should count the terminating NUL byte as part of the ctx_len.\nOtherwise, UBSAN logs a warning:\n  UBSAN: array-index-out-of-bounds in security/selinux/xfrm.c:99:14\n  index 60 is out of range for type 'char [*]'\n\nThe allocation itself is correct so there is no actual out of bounds\nindexing, just a warning.\n\nCc: stable@vger.kernel.org\nSuggested-by: Christian Göttsche <cgzones@googlemail.com>\nLink: https://lore.kernel.org/selinux/CAEjxPJ6tA5+LxsGfOJokzdPeRomBHjKLBVR6zbrg+_w3ZZbM3A@mail.gmail.com/\nSigned-off-by: Stephen Smalley <stephen.smalley.work@gmail.com>\nSigned-off-by: Paul Moore <paul@paul-moore.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/86c8db86af43f52f682e53a0f2f0828683be1e52"
            },
            {
              "sha": "a7b3b77fd111d49f8e25624e4ea1046322a57baf",
              "author": {
                "email": "mjkorhon@gmail.com",
                "name": "Mikko Korhonen"
              },
              "message": "ata: ahci: Disallow LPM for Asus B550-F motherboard\n\nAsus ROG STRIX B550-F GAMING (WI-FI) motherboard has problems on some\nSATA ports with at least one hard drive model (WDC WD20EFAX-68FB5N0)\nwhen LPM is enabled. Disabling LPM solves the issue.\n\nCc: stable@vger.kernel.org\nFixes: 7627a0edef54 (\"ata: ahci: Drop low power policy board type\")\nSigned-off-by: Mikko Korhonen <mjkorhon@gmail.com>\nLink: https://lore.kernel.org/r/20250617062055.784827-1-mjkorhon@gmail.com\n[cassel: more detailed comment, make single line comments consistent]\nSigned-off-by: Niklas Cassel <cassel@kernel.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/a7b3b77fd111d49f8e25624e4ea1046322a57baf"
            },
            {
              "sha": "327e28664307d49ce3fa71ba30dcc0007c270974",
              "author": {
                "email": "rostedt@goodmis.org",
                "name": "Steven Rostedt"
              },
              "message": "fgraph: Do not enable function_graph tracer when setting funcgraph-args\n\nWhen setting the funcgraph-args option when function graph tracer is net\nenabled, it incorrectly enables it. Worse, it unregisters itself when it\nwas never registered. Then when it gets enabled again, it will register\nitself a second time causing a WARNing.\n\n ~# echo 1 > /sys/kernel/tracing/options/funcgraph-args\n ~# head -20 /sys/kernel/tracing/trace\n # tracer: nop\n #\n # entries-in-buffer/entries-written: 813/26317372   #P:8\n #\n #                                _-----=> irqs-off/BH-disabled\n #                               / _----=> need-resched\n #                              | / _---=> hardirq/softirq\n #                              || / _--=> preempt-depth\n #                              ||| / _-=> migrate-disable\n #                              |||| /     delay\n #           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION\n #              | |         |   |||||     |         |\n           <idle>-0       [007] d..4.   358.966010:  7)   1.692 us    |          fetch_next_timer_interrupt(basej=4294981640, basem=357956000000, base_local=0xffff88823c3ae040, base_global=0xffff88823c3af300, tevt=0xffff888100e47cb8);\n           <idle>-0       [007] d..4.   358.966012:  7)               |          tmigr_cpu_deactivate(nextexp=357988000000) {\n           <idle>-0       [007] d..4.   358.966013:  7)               |            _raw_spin_lock(lock=0xffff88823c3b2320) {\n           <idle>-0       [007] d..4.   358.966014:  7)   0.981 us    |              preempt_count_add(val=1);\n           <idle>-0       [007] d..5.   358.966017:  7)   1.058 us    |              do_raw_spin_lock(lock=0xffff88823c3b2320);\n           <idle>-0       [007] d..4.   358.966019:  7)   5.824 us    |            }\n           <idle>-0       [007] d..5.   358.966021:  7)               |            tmigr_inactive_up(group=0xffff888100cb9000, child=0x0, data=0xffff888100e47bc0) {\n           <idle>-0       [007] d..5.   358.966022:  7)               |              tmigr_update_events(group=0xffff888100cb9000, child=0x0, data=0xffff888100e47bc0) {\n\nNotice the \"tracer: nop\" at the top there. The current tracer is the \"nop\"\ntracer, but the content is obviously the function graph tracer.\n\nEnabling function graph tracing will cause it to register again and\ntrigger a warning in the accounting:\n\n ~# echo function_graph > /sys/kernel/tracing/current_tracer\n -bash: echo: write error: Device or resource busy\n\nWith the dmesg of:\n\n ------------[ cut here ]------------\n WARNING: CPU: 7 PID: 1095 at kernel/trace/ftrace.c:3509 ftrace_startup_subops+0xc1e/0x1000\n Modules linked in: kvm_intel kvm irqbypass\n CPU: 7 UID: 0 PID: 1095 Comm: bash Not tainted 6.16.0-rc2-test-00006-gea03de4105d3 #24 PREEMPT\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n RIP: 0010:ftrace_startup_subops+0xc1e/0x1000\n Code: 48 b8 22 01 00 00 00 00 ad de 49 89 84 24 88 01 00 00 8b 44 24 08 89 04 24 e9 c3 f7 ff ff c7 04 24 ed ff ff ff e9 b7 f7 ff ff <0f> 0b c7 04 24 f0 ff ff ff e9 a9 f7 ff ff c7 04 24 f4 ff ff ff e9\n RSP: 0018:ffff888133cff948 EFLAGS: 00010202\n RAX: 0000000000000001 RBX: 1ffff1102679ff31 RCX: 0000000000000000\n RDX: 1ffffffff0b27a60 RSI: ffffffff8593d2f0 RDI: ffffffff85941140\n RBP: 00000000000c2041 R08: ffffffffffffffff R09: ffffed1020240221\n R10: ffff88810120110f R11: ffffed1020240214 R12: ffffffff8593d2f0\n R13: ffffffff8593d300 R14: ffffffff85941140 R15: ffffffff85631100\n FS:  00007f7ec6f28740(0000) GS:ffff8882b5251000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007f7ec6f181c0 CR3: 000000012f1d0005 CR4: 0000000000172ef0\n Call Trace:\n  <TASK>\n  ? __pfx_ftrace_startup_subops+0x10/0x10\n  ? find_held_lock+0x2b/0x80\n  ? ftrace_stub_direct_tramp+0x10/0x10\n  ? ftrace_stub_direct_tramp+0x10/0x10\n  ? trace_preempt_on+0xd0/0x110\n  ? __pfx_trace_graph_entry_args+0x10/0x10\n  register_ftrace_graph+0x4d2/0x1020\n  ? tracing_reset_online_cpus+0x14b/0x1e0\n  ? __pfx_register_ftrace_graph+0x10/0x10\n  ? ring_buffer_record_enable+0x16/0x20\n  ? tracing_reset_online_cpus+0x153/0x1e0\n  ? __pfx_tracing_reset_online_cpus+0x10/0x10\n  ? __pfx_trace_graph_return+0x10/0x10\n  graph_trace_init+0xfd/0x160\n  tracing_set_tracer+0x500/0xa80\n  ? __pfx_tracing_set_tracer+0x10/0x10\n  ? lock_release+0x181/0x2d0\n  ? _copy_from_user+0x26/0xa0\n  tracing_set_trace_write+0x132/0x1e0\n  ? __pfx_tracing_set_trace_write+0x10/0x10\n  ? ftrace_graph_func+0xcc/0x140\n  ? ftrace_stub_direct_tramp+0x10/0x10\n  ? ftrace_stub_direct_tramp+0x10/0x10\n  ? ftrace_stub_direct_tramp+0x10/0x10\n  vfs_write+0x1d0/0xe90\n  ? __pfx_vfs_write+0x10/0x10\n\nHave the setting of the funcgraph-args check if function_graph tracer is\nthe current tracer of the instance, and if not, do nothing, as there's\nnothing to do (the option is checked when function_graph tracing starts).\n\nCc: stable@vger.kernel.org\nCc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nLink: https://lore.kernel.org/20250618073801.057ea636@gandalf.local.home\nFixes: c7a60a733c373 (\"ftrace: Have funcgraph-args take affect during tracing\")\nCloses: https://lore.kernel.org/all/4ab1a7bdd0174ab09c7b0d68cdbff9a4@huawei.com/\nReported-by: Changbin Du <changbin.du@huawei.com>\nTested-by: Changbin Du <changbin.du@huawei.com>\nReviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>\nSigned-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/327e28664307d49ce3fa71ba30dcc0007c270974"
            },
            {
              "sha": "5a3b583f2050870e0403ffed650f06c94d7968a4",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'ata-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/libata/linux\n\nPull ata fixes from Niklas Cassel:\n\n - Force PIO for ATAPI devices on VT6415/VT6330 as the controller locks\n   up on ATAPI DMA (Tasos)\n\n - Fix ACPI PATA cable type detection such that the controller is not\n   forced down to a slow transfer mode (Tasos)\n\n - Fix build error on 32-bit UML (Johannes)\n\n - Fix a PCI region leak in the pata_macio driver so that the driver no\n   longer fails to load after rmmod (Philipp)\n\n - Use correct DMI BIOS build date for ThinkPad W541 quirk (me)\n\n - Disallow LPM for ASUSPRO-D840SA motherboard as this board\n   interestingly enough gets graphical corruptions on the iGPU when LPM\n   is enabled (me)\n\n - Disallow LPM for Asus B550-F motherboard as this board will get\n   command timeouts on ports 5 and 6, yet LPM with the same drive works\n   fine on all other ports (Mikko)\n\n* tag 'ata-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/libata/linux:\n  ata: ahci: Disallow LPM for Asus B550-F motherboard\n  ata: ahci: Disallow LPM for ASUSPRO-D840SA motherboard\n  ata: ahci: Use correct BIOS build date for ThinkPad W541 quirk\n  ata: pata_macio: Fix PCI region leak\n  ata: pata_cs5536: fix build on 32-bit UML\n  ata: libata-acpi: Do not assume 40 wire cable if no devices are enabled\n  ata: pata_via: Force PIO for ATAPI devices on VT6415/VT6330",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5a3b583f2050870e0403ffed650f06c94d7968a4"
            },
            {
              "sha": "5da3ff1fd0fdce7b5d9508c62403c04a8c96a1e5",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'ftrace-v6.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace\n\nPull ftrace fix from Steven Rostedt:\n\n - Do not blindly enable function_graph tracer when updating\n   funcgraph-args\n\n   When the option to trace function arguments in the function graph\n   trace is updated, it requires the function graph tracer to switch its\n   callback routine. It disables function graph tracing, updates the\n   callback and then re-enables function graph tracing.\n\n   The issue is that it doesn't check if function graph tracing is\n   currently enabled or not. If it is not enabled, it will try to\n   disable it and re-enable it (which will actually enable it even\n   though it is not the current tracer). This causes an issue in the\n   accounting and will trigger a WARN_ON() if the function tracer is\n   enabled after that.\n\n* tag 'ftrace-v6.16-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace:\n  fgraph: Do not enable function_graph tracer when setting funcgraph-args",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5da3ff1fd0fdce7b5d9508c62403c04a8c96a1e5"
            },
            {
              "sha": "5adb635077d1b4bd65b183022775a59a378a9c00",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'selinux-pr-20250618' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux\n\nPull selinux fix from Paul Moore:\n \"A small SELinux patch to resolve a UBSAN warning in the\n  xfrm/labeled-IPsec code\"\n\n* tag 'selinux-pr-20250618' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux:\n  selinux: fix selinux_xfrm_alloc_user() to set correct ctx_len",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/5adb635077d1b4bd65b183022775a59a378a9c00"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-18T18:06:45Z"
      },
      {
        "id": "51036806523",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 24965032019,
          "size": 1,
          "distinct_size": 1,
          "ref": "refs/heads/main",
          "head": "c7f547f3bc484396114b9f597cd00b2dd6748eaf",
          "before": "7defeabcb5cc1bd8b416f37198cfe9e5c440cf7c",
          "commits": [
            {
              "sha": "c7f547f3bc484396114b9f597cd00b2dd6748eaf",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Switch to a shielded RJ45 connector for the RJ45 test boards\n\nIt turns out that all my ethernet cables I had around look to be plain\nunshielded twisted pairs (UTP), and some very preliminary testing shows\nthat they are very noisy and I'd need to use differential signalling to\nmake the whole \"connect the base and effect with an ethernet cable\"\nscheme work.\n\nI know, I know, that's technically the right thing to do anyway, but I\nreally don't think it's an option.  It adds way too much effort at the\neffects end, at that point I'm better off just keeping the two together.\n\nEven if some of my recent circuits have been differential (ie that whole\nmultiplier thing), I don't want to force that on everything.\n\nAnd yes, the ethernet cable idea might have been a stupid idea and any\nfirst-year EE would probably have told me that.  I'm a SW guy, remember?\n\nBut before giving up, let's just try the single-ended model with proper\nshielded cables and shielded connectors.  The double-shielded cables are\na thing, with each twisted pair foil-shielded and then the whole cable\nhaving a braided shield.\n\nThat would seem to be no worse than a normal 1/4\" audio cable, even if\nthe same cable also carries power.  I'm looking for a few feet, not long\nruns.  Knock wood.\n\nAnd the shielding is part of the CAT8 specs, so this is standard cable\nthese days and cheap, even if my random box of cables was full of the\nold crappy stuff of yesteryear.\n\nSo maybe this model is still salvageable with single-ended signaling.\nBecause I'd love to separate the stomp switch and audio jacks from the\nactual effect side.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/c7f547f3bc484396114b9f597cd00b2dd6748eaf"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-18T05:23:23Z"
      },
      {
        "id": "51027764763",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 940929652,
          "name": "torvalds/1590A",
          "url": "https://api.github.com/repos/torvalds/1590A"
        },
        "payload": {
          "repository_id": 940929652,
          "push_id": 24960371096,
          "size": 1,
          "distinct_size": 1,
          "ref": "refs/heads/main",
          "head": "7defeabcb5cc1bd8b416f37198cfe9e5c440cf7c",
          "before": "135f762be2a6708de22269dfd902c25304c452fd",
          "commits": [
            {
              "sha": "7defeabcb5cc1bd8b416f37198cfe9e5c440cf7c",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Remove the compressor effects circuit again\n\nIt worked horribly badly anyway, and while I do want to re-do it, I was\nplanning on doing that from scratch using the Gilbert cell from the\nmultiplier effect thing.\n\nLet's pretend this diode-based thing never existed.\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/1590A/commits/7defeabcb5cc1bd8b416f37198cfe9e5c440cf7c"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-17T22:26:12Z"
      },
      {
        "id": "51027342925",
        "type": "PushEvent",
        "actor": {
          "id": 1024025,
          "login": "torvalds",
          "display_login": "torvalds",
          "gravatar_id": "",
          "url": "https://api.github.com/users/torvalds",
          "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
        },
        "repo": {
          "id": 2325298,
          "name": "torvalds/linux",
          "url": "https://api.github.com/repos/torvalds/linux"
        },
        "payload": {
          "repository_id": 2325298,
          "push_id": 24960154929,
          "size": 2,
          "distinct_size": 2,
          "ref": "refs/heads/master",
          "head": "52da431bf03b5506203bca27fe14a97895c80faf",
          "before": "4663747812d1a272312d1b95cbd128f0cdb329f2",
          "commits": [
            {
              "sha": "62a65b32bddb0f242b106b8c464913f2f01c108d",
              "author": {
                "email": "drew@pdp7.com",
                "name": "Drew Fustini"
              },
              "message": "dt-bindings: pmem: Convert binding to YAML\n\nConvert the PMEM device tree binding from text to YAML. This will allow\ndevice trees with pmem-region nodes to pass dtbs_check.\n\n[iweiny: fix ups from Rob/Drew]\n\nAcked-by: Conor Dooley <conor.dooley@microchip.com>\nAcked-by: Oliver O'Halloran <oohall@gmail.com>\nSigned-off-by: Drew Fustini <drew@pdp7.com>\nAcked-by: Dan Williams <dan.j.williams@intel.com>\nLink: https://patch.msgid.link/20250606184405.359812-4-drew@pdp7.com\nSigned-off-by: Ira Weiny <ira.weiny@intel.com>",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/62a65b32bddb0f242b106b8c464913f2f01c108d"
            },
            {
              "sha": "52da431bf03b5506203bca27fe14a97895c80faf",
              "author": {
                "email": "torvalds@linux-foundation.org",
                "name": "Linus Torvalds"
              },
              "message": "Merge tag 'libnvdimm-fixes-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n\nPull libnvdimm fix from Ira Weiny:\n \"This converts the pmem-region device tree bindings to YAML to fix\n  errors and bring it up to date\"\n\n* tag 'libnvdimm-fixes-6.16-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm:\n  dt-bindings: pmem: Convert binding to YAML",
              "distinct": true,
              "url": "https://api.github.com/repos/torvalds/linux/commits/52da431bf03b5506203bca27fe14a97895c80faf"
            }
          ]
        },
        "public": true,
        "created_at": "2025-06-17T22:09:01Z"
      }
    ]
  }
}